{"artifactJsonType":"APPLICATION","clientSchemaVersion":1.0,"serverSchemaVersion":7.0,"exportedApplication":{"name":"Estimate","isPublic":false,"pages":[{"id":"Estimate Process","isDefault":true},{"id":"PO Entry","isDefault":false},{"id":"Estimate State","isDefault":false}],"publishedPages":[{"id":"Estimate Process","isDefault":true},{"id":"PO Entry","isDefault":false},{"id":"Estimate State","isDefault":false}],"viewMode":false,"appIsExample":false,"unreadCommentThreads":0.0,"clonedFromApplicationId":"62c6a7ceaa3be20812d635b5","color":"#FFDEDE","icon":"rocket","slug":"estimate","unpublishedAppLayout":{"type":"FLUID"},"publishedAppLayout":{"type":"FLUID"},"unpublishedCustomJSLibs":[{"uidString":"xmlParser_https://cdnjs.cloudflare.com/ajax/libs/fast-xml-parser/3.17.5/parser.min.js"}],"publishedCustomJSLibs":[],"evaluationVersion":2.0,"applicationVersion":2.0,"isManualUpdate":false,"deleted":false},"datasourceList":[{"datasourceConfiguration":{"connection":{"ssl":{"authType":"DEFAULT"}},"url":"https://graph.microsoft.com","headers":[],"queryParameters":[]},"name":"MS Graph","pluginId":"restapi-plugin","messages":[],"isAutoGenerated":false,"deleted":false,"gitSyncId":"63b69a263ec3661fc0cc1d95_63d0b4bfba3bf80fac41b2fa"},{"datasourceConfiguration":{"connection":{"mode":"READ_WRITE","ssl":{"authType":"DEFAULT"}},"endpoints":[{"host":"db-mysql-blr1-95212-do-user-12618160-0.b.db.ondigitalocean.com","port":25060.0}]},"name":"appsmithmysql","pluginId":"mysql-plugin","messages":[],"isAutoGenerated":false,"deleted":false,"gitSyncId":"61ab998199d0904ae42a67ad_2021-12-04T19:59:08.316752Z"}],"customJSLibList":[{"name":"xmlParser","uidString":"xmlParser_https://cdnjs.cloudflare.com/ajax/libs/fast-xml-parser/3.17.5/parser.min.js","accessor":["xmlParser"],"url":"https://cdnjs.cloudflare.com/ajax/libs/fast-xml-parser/3.17.5/parser.min.js","version":"3.17.5","defs":"{\"!name\":\"LIB/xmlParser\",\"xmlParser\":{\"parse\":{\"!type\":\"fn()\",\"prototype\":{}},\"convertTonimn\":{\"!type\":\"fn()\",\"prototype\":{}},\"getTraversalObj\":{\"!type\":\"fn()\",\"prototype\":{}},\"convertToJson\":{\"!type\":\"fn()\",\"prototype\":{}},\"convertToJsonString\":{\"!type\":\"fn()\",\"prototype\":{}},\"validate\":{\"!type\":\"fn()\",\"prototype\":{}},\"j2xParser\":{\"!type\":\"fn()\",\"prototype\":{\"parse\":{\"!type\":\"fn()\",\"prototype\":{}},\"j2x\":{\"!type\":\"fn()\",\"prototype\":{}}}},\"parseToNimn\":{\"!type\":\"fn()\",\"prototype\":{}}}}","deleted":false,"policies":[],"userPermissions":[]}],"pageList":[{"unpublishedPage":{"name":"PO Entry","slug":"po-entry","layouts":[{"viewMode":false,"dsl":{"widgetName":"MainContainer","backgroundColor":"none","rightColumn":742.0,"snapColumns":64.0,"detachFromLayout":true,"widgetId":"0","topRow":0.0,"bottomRow":850.0,"containerStyle":"none","snapRows":67.0,"parentRowSpace":1.0,"type":"CANVAS_WIDGET","canExtend":true,"version":89.0,"minHeight":680.0,"parentColumnSpace":1.0,"dynamicBindingPathList":[],"leftColumn":0.0,"children":[{"boxShadow":"none","widgetName":"ChangeState_Modal","isCanvas":true,"displayName":"Modal","iconSVG":"/static/media/icon.4975978e.svg","topRow":91.0,"bottomRow":115.0,"parentRowSpace":10.0,"type":"MODAL_WIDGET","hideCard":false,"shouldScrollContents":true,"animateLoading":false,"parentColumnSpace":19.8125,"dynamicTriggerPathList":[],"leftColumn":19.0,"dynamicBindingPathList":[],"children":[{"boxShadow":"none","widgetName":"Canvas2Copy","displayName":"Canvas","topRow":0.0,"bottomRow":530.0,"parentRowSpace":1.0,"type":"CANVAS_WIDGET","canExtend":true,"hideCard":true,"shouldScrollContents":false,"minHeight":532.0,"parentColumnSpace":1.0,"dynamicTriggerPathList":[],"leftColumn":0.0,"dynamicBindingPathList":[],"children":[{"boxShadow":"none","widgetName":"Icon1","onClick":"{{closeModal('ChangeState_Modal')}}","buttonColor":"#2E3D49","displayName":"Icon","iconSVG":"/static/media/icon.31d6cfe0.svg","topRow":45.0,"bottomRow":49.0,"type":"ICON_BUTTON_WIDGET","hideCard":true,"dynamicTriggerPathList":[],"leftColumn":40.0,"dynamicBindingPathList":[],"iconSize":24.0,"key":"lto10z5naf","labelTextSize":"0.875rem","rightColumn":46.0,"iconName":"cross","widgetId":"xgl8amve9y","isVisible":false,"version":1.0,"parentId":"q7w6vqv8dk","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","buttonVariant":"TERTIARY"},{"boxShadow":"none","widgetName":"Decision_Title","dynamicPropertyPathList":[{"key":"fontSize"}],"displayName":"Text","iconSVG":"/static/media/icon.97c59b52.svg","topRow":1.0,"bottomRow":5.0,"type":"TEXT_WIDGET","hideCard":false,"animateLoading":false,"dynamicTriggerPathList":[],"overflow":"NONE","fontFamily":"System Default","leftColumn":1.0,"dynamicBindingPathList":[{"key":"text"}],"text":"{{ Process.getModalTitle() }}","key":"f231c049hd","labelTextSize":"0.875rem","rightColumn":58.0,"textAlign":"LEFT","dynamicHeight":"FIXED","widgetId":"1hgnttd4j2","isVisible":true,"fontStyle":"BOLD","textColor":"#008695","version":1.0,"parentId":"q7w6vqv8dk","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","maxDynamicHeight":9000.0,"fontSize":"1.5rem","minDynamicHeight":4.0},{"boxShadow":"none","widgetName":"Button1Copy","onClick":"{{closeModal('ChangeState_Modal'); GlobalVariables.resetForm([\"CheckboxGroup1\"]) }}","buttonColor":"#008695","dynamicPropertyPathList":[{"key":"onClick"}],"displayName":"Button","iconSVG":"/static/media/icon.cca02633.svg","topRow":45.0,"bottomRow":49.0,"type":"BUTTON_WIDGET","hideCard":false,"animateLoading":false,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":15.0,"dynamicBindingPathList":[],"text":"Close","isDisabled":false,"key":"o2ddp866uc","labelTextSize":"0.875rem","rightColumn":27.0,"isDefaultClickDisabled":true,"widgetId":"cup4ni3ot4","buttonStyle":"PRIMARY","isVisible":true,"version":1.0,"recaptchaType":"V3","parentId":"q7w6vqv8dk","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","buttonVariant":"SECONDARY"},{"boxShadow":"none","widgetName":"Button2","onClick":"{{Tabs1.selectedTab=='PO Details'?(\nProcess.onModalSubmitClicked(Estimate_PO_Table.selectedRow.EstimateId)):(Process.onModalSubmitClicked(PO_Table.selectedRow.EstId)); GlobalVariables.resetForm([\"CheckboxGroup1\", \"Estimate_PO_Table\"]) }}","buttonColor":"#008695","dynamicPropertyPathList":[{"key":"onClick"}],"displayName":"Button","iconSVG":"/static/media/icon.cca02633.svg","topRow":45.0,"bottomRow":49.0,"type":"BUTTON_WIDGET","hideCard":false,"animateLoading":false,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":1.0,"dynamicBindingPathList":[],"text":"Confirm","isDisabled":false,"key":"o2ddp866uc","labelTextSize":"0.875rem","rightColumn":13.0,"isDefaultClickDisabled":true,"widgetId":"yxr7gsvpje","buttonStyle":"PRIMARY_BUTTON","isVisible":true,"version":1.0,"recaptchaType":"V3","parentId":"q7w6vqv8dk","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","buttonVariant":"SECONDARY"},{"boxShadow":"0px 1px 3px rgba(0, 0, 0, 0.25)","widgetName":"Container2Copy","borderColor":"transparent","isCanvas":true,"dynamicPropertyPathList":[{"key":"borderRadius"},{"key":"boxShadow"}],"displayName":"Container","iconSVG":"/static/media/icon.1977dca3.svg","topRow":6.0,"bottomRow":43.0,"parentRowSpace":10.0,"type":"CONTAINER_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":11.125,"dynamicTriggerPathList":[],"leftColumn":1.0,"dynamicBindingPathList":[],"children":[{"boxShadow":"none","widgetName":"Canvas3Copy1","displayName":"Canvas","topRow":0.0,"bottomRow":370.0,"parentRowSpace":1.0,"type":"CANVAS_WIDGET","canExtend":false,"hideCard":true,"minHeight":400.0,"parentColumnSpace":1.0,"leftColumn":0.0,"dynamicBindingPathList":[],"children":[{"boxShadow":"none","widgetName":"CheckboxGroup1","dynamicPropertyPathList":[{"key":"options"}],"displayName":"Checkbox Group","iconSVG":"/static/media/icon.ecb38479.svg","topRow":24.0,"bottomRow":33.0,"parentRowSpace":10.0,"type":"CHECKBOX_GROUP_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":11.125,"dynamicTriggerPathList":[],"leftColumn":1.0,"dynamicBindingPathList":[{"key":"options"}],"options":"{{ appsmith.store.currentDecision?.Confirmation.map((thisValue)=>{return({\"label\":thisValue,\"value\":thisValue})}) }}","isDisabled":false,"key":"bs9z3neqyk","optionAlignment":"unset","labelTextSize":"0.875rem","isRequired":true,"rightColumn":64.0,"defaultSelectedValues":"","dynamicHeight":"FIXED","widgetId":"8ox4074yzu","accentColor":"#03B365","isVisible":false,"version":2.0,"parentId":"khnxk2yhz6","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","maxDynamicHeight":9000.0,"isInline":false,"minDynamicHeight":4.0},{"boxShadow":"none","widgetName":"Text6","displayName":"Text","iconSVG":"/static/media/icon.97c59b52.svg","topRow":4.0,"bottomRow":22.0,"parentRowSpace":10.0,"type":"TEXT_WIDGET","hideCard":false,"animateLoading":false,"overflow":"NONE","parentColumnSpace":9.751904296874999,"dynamicTriggerPathList":[],"fontFamily":"System Default","leftColumn":1.0,"dynamicBindingPathList":[{"key":"text"}],"shouldTruncate":false,"truncateButtonColor":"#FFC13D","text":"{{ (appsmith.store.currentDecision?.Confirmation)?.join('\\n\\n\\n')}}","key":"65340ap74o","labelTextSize":"0.875rem","rightColumn":64.0,"textAlign":"LEFT","dynamicHeight":"FIXED","widgetId":"oc3sja9vdk","isVisible":true,"fontStyle":"","textColor":"#008695","version":1.0,"parentId":"khnxk2yhz6","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","maxDynamicHeight":9000.0,"fontSize":"0.875rem","minDynamicHeight":4.0}],"key":"rwedoxpb42","labelTextSize":"0.875rem","rightColumn":267.0,"detachFromLayout":true,"widgetId":"khnxk2yhz6","containerStyle":"none","isVisible":true,"version":1.0,"parentId":"2o3b9tm4e9","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px"}],"borderWidth":"0","key":"oujpihjo93","labelTextSize":"0.875rem","backgroundColor":"#F6F7F8","rightColumn":63.0,"dynamicHeight":"FIXED","widgetId":"2o3b9tm4e9","containerStyle":"card","isVisible":true,"version":1.0,"parentId":"q7w6vqv8dk","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","maxDynamicHeight":9000.0,"minDynamicHeight":4.0}],"isDisabled":false,"key":"1kfu4e4b02","labelTextSize":"0.875rem","rightColumn":475.5,"detachFromLayout":true,"widgetId":"q7w6vqv8dk","isVisible":true,"version":1.0,"parentId":"v6uo26jjs5","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px"}],"key":"tu1594ea2u","height":532.0,"labelTextSize":"0.875rem","rightColumn":43.0,"detachFromLayout":true,"dynamicHeight":"FIXED","widgetId":"v6uo26jjs5","canOutsideClickClose":true,"canEscapeKeyClose":true,"version":2.0,"parentId":"0","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","maxDynamicHeight":9000.0,"width":618.9,"minDynamicHeight":4.0},{"boxShadow":"none","mobileBottomRow":33.0,"widgetName":"FileUpload_Modal","isCanvas":true,"displayName":"Modal","iconSVG":"/static/media/icon.d2ab7de0666eaef853cc2d330f86887b.svg","searchTags":["dialog","popup","notification"],"topRow":56.0,"bottomRow":296.0,"parentRowSpace":10.0,"type":"MODAL_WIDGET","hideCard":false,"shouldScrollContents":false,"mobileRightColumn":37.0,"animateLoading":false,"parentColumnSpace":10.984375,"dynamicTriggerPathList":[],"leftColumn":13.0,"dynamicBindingPathList":[],"children":[{"mobileBottomRow":240.0,"widgetName":"Canvas19Copy","displayName":"Canvas","topRow":0.0,"bottomRow":490.0,"parentRowSpace":1.0,"type":"CANVAS_WIDGET","canExtend":true,"hideCard":true,"shouldScrollContents":false,"minHeight":494.0,"mobileRightColumn":263.625,"parentColumnSpace":1.0,"leftColumn":0.0,"dynamicBindingPathList":[],"children":[{"boxShadow":"none","widgetName":"Quote_File_Container","borderColor":"transparent","isCanvas":true,"displayName":"Container","iconSVG":"/static/media/icon.1977dca3370505e2db3a8e44cfd54907.svg","searchTags":["div","parent","group"],"topRow":0.0,"bottomRow":48.0,"parentRowSpace":10.0,"type":"CONTAINER_WIDGET","hideCard":false,"shouldScrollContents":false,"animateLoading":false,"parentColumnSpace":13.03125,"dynamicTriggerPathList":[],"leftColumn":0.0,"dynamicBindingPathList":[{"key":"borderRadius"}],"children":[{"boxShadow":"none","widgetName":"Canvas10Copy","displayName":"Canvas","topRow":0.0,"bottomRow":480.0,"parentRowSpace":1.0,"type":"CANVAS_WIDGET","canExtend":false,"hideCard":true,"minHeight":400.0,"parentColumnSpace":1.0,"leftColumn":0.0,"dynamicBindingPathList":[{"key":"borderRadius"},{"key":"accentColor"}],"children":[{"boxShadow":"0px 0px 2px 1.5px rgba(0, 0, 0, 0.25)","mobileBottomRow":4.0,"widgetName":"FileDownload_Button","onClick":"{{storeValue('disable',true).then(()=>FileUploadProcess.runDownloadFile()).then(()=>storeValue('disable',false))}}","buttonColor":"{{appsmith.theme.colors.primaryColor}}","dynamicPropertyPathList":[{"key":"boxShadow"},{"key":"isDisabled"},{"key":"onClick"}],"displayName":"Icon button","iconSVG":"/static/media/icon.80fc7466c0d7181ec0271de7fda795ec.svg","searchTags":["click","submit"],"topRow":0.0,"bottomRow":4.0,"parentRowSpace":10.0,"type":"ICON_BUTTON_WIDGET","hideCard":false,"mobileRightColumn":63.0,"animateLoading":false,"parentColumnSpace":10.1695556640625,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":34.0,"dynamicBindingPathList":[{"key":"buttonColor"},{"key":"isDisabled"}],"isDisabled":"{{POAttachments_Table.selectedRowIndex==-1||appsmith.store.disable}}","key":"9rrozn34oj","isDeprecated":false,"rightColumn":39.0,"iconName":"cloud-download","widgetId":"cliplqaxqp","minWidth":50.0,"isVisible":true,"version":1.0,"parentId":"5899xdgf2y","renderMode":"CANVAS","isLoading":false,"mobileTopRow":0.0,"responsiveBehavior":"hug","borderRadius":"0.375rem","mobileLeftColumn":59.0,"buttonVariant":"SECONDARY"},{"boxShadow":"{{appsmith.theme.boxShadow.appBoxShadow}}","isVisibleDownload":false,"iconSVG":"/static/media/icon.db8a9cbd2acd22a31ea91cc37ea2a46c.svg","topRow":25.0,"isSortable":true,"type":"TABLE_WIDGET_V2","inlineEditingSaveOption":"ROW_LEVEL","animateLoading":false,"dynamicBindingPathList":[{"key":"accentColor"},{"key":"boxShadow"},{"key":"primaryColumns.Field.computedValue"},{"key":"primaryColumns.Value.computedValue"},{"key":"tableData"}],"leftColumn":32.0,"delimiter":",","defaultSelectedRowIndex":"-1","showInlineEditingOptionDropdown":true,"accentColor":"{{appsmith.theme.colors.primaryColor}}","isVisibleFilters":false,"isVisible":true,"fontStyle":"","enableClientSideSearch":false,"version":1.0,"totalRecordsCount":0.0,"isLoading":false,"childStylesheet":{"button":{"buttonColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"menuButton":{"menuColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"iconButton":{"buttonColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"editActions":{"saveButtonColor":"{{appsmith.theme.colors.primaryColor}}","saveBorderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","discardButtonColor":"{{appsmith.theme.colors.primaryColor}}","discardBorderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}"}},"borderRadius":"0.375rem","columnUpdatedAt":1.700722281829E12,"defaultSelectedRowIndices":[0.0],"widgetName":"FilesMetadata_Table","defaultPageSize":0.0,"columnOrder":["Field","Value"],"dynamicPropertyPathList":[{"key":"tableData"}],"displayName":"Table","bottomRow":46.0,"columnWidthMap":{"task":245.0,"step":62.0,"status":75.0,"Field":189.0},"parentRowSpace":10.0,"hideCard":false,"parentColumnSpace":11.29609375,"dynamicTriggerPathList":[],"primaryColumns":{"Field":{"allowCellWrapping":false,"index":3.0,"width":150.0,"originalId":"Field","id":"Field","alias":"Field","horizontalAlignment":"LEFT","verticalAlignment":"CENTER","columnType":"text","textSize":"0.875rem","enableFilter":true,"enableSort":true,"isVisible":true,"isDisabled":false,"isCellEditable":false,"isEditable":false,"isCellVisible":true,"isDerived":false,"label":"Field","isSaveVisible":true,"isDiscardVisible":true,"computedValue":"{{FilesMetadata_Table.processedTableData.map((currentRow, currentIndex) => ( currentRow[\"Field\"]))}}","fontStyle":"","validation":{},"sticky":""},"Value":{"allowCellWrapping":false,"index":1.0,"width":150.0,"originalId":"Value","id":"Value","alias":"Value","horizontalAlignment":"LEFT","verticalAlignment":"CENTER","columnType":"text","textColor":"","textSize":"0.875rem","fontStyle":"","enableFilter":true,"enableSort":true,"isVisible":true,"isDisabled":false,"isCellEditable":false,"isEditable":false,"isCellVisible":true,"isDerived":false,"label":"Value","isSaveVisible":true,"isDiscardVisible":true,"computedValue":"{{FilesMetadata_Table.processedTableData.map((currentRow, currentIndex) => ( currentRow[\"Value\"]))}}","cellBackground":"","validation":{},"sticky":""}},"borderWidth":"1","key":"tr6i18pzj9","canFreezeColumn":false,"isDeprecated":false,"rightColumn":64.0,"textSize":"0.875rem","widgetId":"zpy912sy5o","enableServerSideFiltering":false,"tableData":"{{POAttachments_Table.selectedRowIndex==-1?\"\":appsmith.store.tabledata}}","label":"Data","searchKey":"","parentId":"5899xdgf2y","renderMode":"CANVAS","horizontalAlignment":"LEFT","isVisibleSearch":true,"isVisiblePagination":true,"verticalAlignment":"CENTER"},{"boxShadow":"0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06)","isVisibleDownload":false,"iconSVG":"/static/media/icon.db8a9cbd2acd22a31ea91cc37ea2a46c.svg","topRow":5.0,"isSortable":true,"type":"TABLE_WIDGET_V2","inlineEditingSaveOption":"ROW_LEVEL","animateLoading":false,"dynamicBindingPathList":[{"key":"accentColor"},{"key":"primaryColumns.Id.computedValue"},{"key":"primaryColumns.FileName.computedValue"},{"key":"primaryColumns.Comments.computedValue"},{"key":"tableData"},{"key":"primaryColumns.POId.computedValue"}],"leftColumn":0.0,"delimiter":",","defaultSelectedRowIndex":"-1","showInlineEditingOptionDropdown":true,"accentColor":"{{appsmith.theme.colors.primaryColor}}","isVisibleFilters":false,"isVisible":true,"fontStyle":"","enableClientSideSearch":false,"version":1.0,"totalRecordsCount":0.0,"isLoading":false,"childStylesheet":{"button":{"buttonColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"menuButton":{"menuColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"iconButton":{"buttonColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"editActions":{"saveButtonColor":"{{appsmith.theme.colors.primaryColor}}","saveBorderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","discardButtonColor":"{{appsmith.theme.colors.primaryColor}}","discardBorderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}"}},"borderRadius":"0.375rem","columnUpdatedAt":1.745383866678E12,"originalBottomRow":46.0,"defaultSelectedRowIndices":[0.0],"widgetName":"POAttachments_Table","defaultPageSize":0.0,"columnOrder":["Id","FileName","Comments","POId"],"dynamicPropertyPathList":[{"key":"tableData"},{"key":"onRowSelected"}],"displayName":"Table","bottomRow":46.0,"columnWidthMap":{"task":245.0,"step":62.0,"status":75.0,"Field":189.0,"FileName":183.0},"parentRowSpace":10.0,"hideCard":false,"parentColumnSpace":11.29609375,"dynamicTriggerPathList":[{"key":"onRowSelected"}],"primaryColumns":{"Id":{"allowCellWrapping":false,"allowSameOptionsInNewRow":true,"index":0.0,"width":150.0,"originalId":"Id","id":"Id","alias":"Id","horizontalAlignment":"LEFT","verticalAlignment":"CENTER","columnType":"number","textColor":"","textSize":"0.875rem","fontStyle":"","enableFilter":true,"enableSort":true,"isVisible":false,"isDisabled":false,"isCellEditable":false,"isEditable":false,"isCellVisible":true,"isDerived":false,"label":"Id","isSaveVisible":true,"isDiscardVisible":true,"computedValue":"{{POAttachments_Table.processedTableData.map((currentRow, currentIndex) => ( currentRow[\"Id\"]))}}","sticky":"","validation":{},"cellBackground":""},"FileName":{"allowCellWrapping":false,"allowSameOptionsInNewRow":true,"index":2.0,"width":150.0,"originalId":"FileName","id":"FileName","alias":"FileName","horizontalAlignment":"LEFT","verticalAlignment":"CENTER","columnType":"text","textColor":"","textSize":"0.875rem","fontStyle":"","enableFilter":true,"enableSort":true,"isVisible":true,"isDisabled":false,"isCellEditable":false,"isEditable":false,"isCellVisible":true,"isDerived":false,"label":"FileName","isSaveVisible":true,"isDiscardVisible":true,"computedValue":"{{POAttachments_Table.processedTableData.map((currentRow, currentIndex) => ( currentRow[\"FileName\"]))}}","sticky":"","validation":{},"cellBackground":""},"Comments":{"allowCellWrapping":false,"allowSameOptionsInNewRow":true,"index":3.0,"width":150.0,"originalId":"Comments","id":"Comments","alias":"Comments","horizontalAlignment":"LEFT","verticalAlignment":"CENTER","columnType":"text","textColor":"","textSize":"0.875rem","fontStyle":"","enableFilter":true,"enableSort":true,"isVisible":true,"isDisabled":false,"isCellEditable":false,"isEditable":false,"isCellVisible":true,"isDerived":false,"label":"Comments","isSaveVisible":true,"isDiscardVisible":true,"computedValue":"{{POAttachments_Table.processedTableData.map((currentRow, currentIndex) => ( currentRow[\"Comments\"]))}}","sticky":"","validation":{},"cellBackground":""},"POId":{"allowCellWrapping":false,"allowSameOptionsInNewRow":true,"index":1.0,"width":150.0,"originalId":"POId","id":"POId","alias":"POId","horizontalAlignment":"LEFT","verticalAlignment":"CENTER","columnType":"number","textColor":"","textSize":"0.875rem","fontStyle":"","enableFilter":true,"enableSort":true,"isVisible":true,"isDisabled":false,"isCellEditable":false,"isEditable":false,"isCellVisible":true,"isDerived":false,"label":"POId","isSaveVisible":true,"isDiscardVisible":true,"computedValue":"{{POAttachments_Table.processedTableData.map((currentRow, currentIndex) => ( currentRow[\"POId\"]))}}","sticky":"","validation":{},"currencyCode":"USD","decimals":0.0,"thousandSeparator":true,"notation":"standard","cellBackground":""}},"borderWidth":"1","onRowSelected":"{{FileUploadProcess.onUploadModalClick();storeValue(\"ActualFileName\",POAttachments_Table.selectedRow.FileName)}}","key":"tr6i18pzj9","canFreezeColumn":false,"isDeprecated":false,"rightColumn":32.0,"textSize":"0.875rem","widgetId":"h1srwhdxd3","enableServerSideFiltering":false,"tableData":"{{EPOAttachments_Select.data}}","label":"Data","searchKey":"","parentId":"5899xdgf2y","renderMode":"CANVAS","horizontalAlignment":"LEFT","isVisibleSearch":true,"originalTopRow":5.0,"isVisiblePagination":true,"verticalAlignment":"CENTER"},{"boxShadow":"none","widgetName":"FileComments_Input","displayName":"Input","iconSVG":"/static/media/icon.9f505595da61a34f563dba82adeb06ec.svg","searchTags":["form","text input","number","textarea"],"topRow":17.0,"bottomRow":25.0,"parentRowSpace":10.0,"labelWidth":5.0,"autoFocus":false,"type":"INPUT_WIDGET_V2","hideCard":false,"animateLoading":false,"parentColumnSpace":7.82265625,"dynamicTriggerPathList":[],"resetOnSubmit":true,"leftColumn":32.0,"dynamicBindingPathList":[{"key":"accentColor"},{"key":"labelTextColor"},{"key":"defaultText"}],"labelPosition":"Top","labelStyle":"","labelTextColor":"{{appsmith.theme.colors.primaryColor}}","inputType":"MULTI_LINE_TEXT","maxChars":"255","isDisabled":false,"key":"fnbeggozqq","labelTextSize":"0.875rem","isRequired":false,"isDeprecated":false,"rightColumn":64.0,"dynamicHeight":"FIXED","widgetId":"hl9n9irwwn","accentColor":"{{appsmith.theme.colors.primaryColor}}","isVisible":true,"label":"Comments","version":2.0,"parentId":"5899xdgf2y","labelAlignment":"left","renderMode":"CANVAS","isLoading":false,"borderRadius":"0.375rem","maxDynamicHeight":9000.0,"iconAlign":"left","defaultText":"{{POAttachments_Table.selectedRowIndex==-1?\"\":POAttachments_Table.selectedRow.Comments}}","minDynamicHeight":4.0},{"boxShadow":"none","widgetName":"ActualFileName_Input","displayName":"Input","iconSVG":"/static/media/icon.9f505595da61a34f563dba82adeb06ec.svg","searchTags":["form","text input","number","textarea"],"topRow":9.0,"bottomRow":13.0,"parentRowSpace":10.0,"labelWidth":"8","autoFocus":false,"type":"INPUT_WIDGET_V2","hideCard":false,"animateLoading":false,"parentColumnSpace":11.29609375,"dynamicTriggerPathList":[],"resetOnSubmit":true,"leftColumn":32.0,"dynamicBindingPathList":[{"key":"accentColor"},{"key":"defaultText"}],"labelPosition":"Left","labelStyle":"","inputType":"TEXT","maxChars":"50","isDisabled":true,"key":"fmqlbw0c9w","labelTextSize":"0.875rem","isRequired":false,"isDeprecated":false,"rightColumn":64.0,"dynamicHeight":"FIXED","widgetId":"ato0dyica5","accentColor":"{{appsmith.theme.colors.primaryColor}}","isVisible":true,"label":"File Name","version":2.0,"parentId":"5899xdgf2y","labelAlignment":"left","renderMode":"CANVAS","isLoading":false,"borderRadius":"0.375rem","maxDynamicHeight":9000.0,"iconAlign":"left","defaultText":"{{appsmith.store.ActualFileName}}","minDynamicHeight":4.0},{"boxShadow":"none","iconSVG":"/static/media/icon.9f505595da61a34f563dba82adeb06ec.svg","topRow":5.0,"labelWidth":"8","type":"INPUT_WIDGET_V2","animateLoading":false,"resetOnSubmit":true,"leftColumn":32.0,"dynamicBindingPathList":[{"key":"accentColor"},{"key":"labelTextColor"},{"key":"isDisabled"}],"labelStyle":"","inputType":"TEXT","maxChars":"25","isDisabled":"{{POAttachments_Table.selectedRowIndex!=-1}}","validation":"","isRequired":false,"dynamicHeight":"FIXED","accentColor":"{{appsmith.theme.colors.primaryColor}}","isVisible":true,"version":2.0,"isLoading":false,"regex":"^[0-9a-zA-Z]+$","borderRadius":"0.375rem","widgetName":"UserText_Input","dynamicPropertyPathList":[{"key":"onTextChanged"},{"key":"isDisabled"}],"displayName":"Input","searchTags":["form","text input","number","textarea"],"bottomRow":9.0,"parentRowSpace":10.0,"autoFocus":false,"hideCard":false,"parentColumnSpace":10.0322265625,"dynamicTriggerPathList":[{"key":"onTextChanged"}],"labelPosition":"Left","labelTextColor":"{{appsmith.theme.colors.primaryColor}}","key":"fmqlbw0c9w","labelTextSize":"0.875rem","onTextChanged":"{{FileUploadProcess.getFileName()}}","isDeprecated":false,"rightColumn":64.0,"widgetId":"xnd4maqb0e","errorMessage":"Spaces and special characters are not allowed!!","label":"User Text","parentId":"5899xdgf2y","labelAlignment":"left","renderMode":"CANVAS","maxDynamicHeight":9000.0,"iconAlign":"left","defaultText":"","minDynamicHeight":4.0},{"boxShadow":"0px 0px 2px 1.5px rgba(0, 0, 0, 0.25)","widgetName":"FileUploadReset_Button","onClick":"{{storeValue('ActualFileName','');GlobalVariables.resetForm(['Quote_File_Container']);storeValue('ErrorMessage','');storeValue('disable',false)}} ","buttonColor":"{{appsmith.theme.colors.primaryColor}}","dynamicPropertyPathList":[{"key":"boxShadow"},{"key":"onClick"}],"displayName":"Icon Button","iconSVG":"/static/media/icon.1a0c634ac75f9fa6b6ae7a8df882a3ba.svg","searchTags":["click","submit"],"topRow":0.0,"bottomRow":4.0,"tooltip":"Reset Files","parentRowSpace":10.0,"type":"ICON_BUTTON_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":10.0322265625,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":39.0,"dynamicBindingPathList":[{"key":"buttonColor"}],"isDisabled":false,"key":"z13en9py0b","isDeprecated":false,"rightColumn":44.0,"iconName":"refresh","widgetId":"rmb96q429i","isVisible":true,"version":1.0,"parentId":"5899xdgf2y","renderMode":"CANVAS","isLoading":false,"borderRadius":"0.375rem","buttonVariant":"SECONDARY"},{"boxShadow":"0px 0px 2px 1.5px rgba(0, 0, 0, 0.25)","widgetName":"FileUploadCreate_Button","onClick":"{{storeValue('disable',true).then(()=>storeValue('add',1))\n.then(()=>FileUploadProcess.runCreateFile(PO_Table.selectedRow.Id,FileComments_Input.text)).then(()=>storeValue('disable',false))}}","buttonColor":"{{appsmith.theme.colors.primaryColor}}","dynamicPropertyPathList":[{"key":"isDisabled"},{"key":"boxShadow"},{"key":"onClick"}],"displayName":"Icon Button","iconSVG":"/static/media/icon.1a0c634ac75f9fa6b6ae7a8df882a3ba.svg","searchTags":["click","submit"],"topRow":0.0,"bottomRow":4.0,"tooltip":"Create Files","parentRowSpace":10.0,"type":"ICON_BUTTON_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":10.0322265625,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":44.0,"dynamicBindingPathList":[{"key":"buttonColor"},{"key":"isDisabled"}],"isDisabled":"{{ FilePicker.files.length == 0 || appsmith.store.ErrorMessage.length != 0 || POAttachments_Table.selectedRowIndex!=-1 || appsmith.store.ActualFileName==\"\"}}","key":"z13en9py0b","isDeprecated":false,"rightColumn":49.0,"iconName":"plus","widgetId":"leea5mikyv","isVisible":true,"version":1.0,"parentId":"5899xdgf2y","renderMode":"CANVAS","isLoading":false,"borderRadius":"0.375rem","buttonVariant":"SECONDARY"},{"boxShadow":"0px 0px 2px 1.5px rgba(0, 0, 0, 0.25)","widgetName":"FileUploadModify_Button","onClick":"{{storeValue('Disable','True').then(()=>storeValue('add',2))\n.then(()=>\nFileUploadProcess.runModifyFile(POAttachments_Table.selectedRow.Id,FileComments_Input.text)).then(()=>storeValue('Disable','False'))}} ","buttonColor":"{{appsmith.theme.colors.primaryColor}}","dynamicPropertyPathList":[{"key":"boxShadow"},{"key":"onClick"},{"key":"isDisabled"}],"displayName":"Icon Button","iconSVG":"/static/media/icon.1a0c634ac75f9fa6b6ae7a8df882a3ba.svg","searchTags":["click","submit"],"topRow":0.0,"bottomRow":4.0,"tooltip":"Edit Files","parentRowSpace":10.0,"type":"ICON_BUTTON_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":10.0322265625,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":49.0,"dynamicBindingPathList":[{"key":"buttonColor"},{"key":"isDisabled"}],"isDisabled":"{{POAttachments_Table.selectedRowIndex==-1||appsmith.store.disable}}","key":"z13en9py0b","isDeprecated":false,"rightColumn":54.0,"iconName":"edit","widgetId":"q4652h7a2e","isVisible":true,"version":1.0,"parentId":"5899xdgf2y","renderMode":"CANVAS","isLoading":false,"borderRadius":"0.375rem","buttonVariant":"SECONDARY"},{"boxShadow":"0px 0px 2px 1.5px rgba(0, 0, 0, 0.25)","widgetName":"FileUploadDelete_Button","onClick":"{{storeValue('disable',true).then(()=>FileUploadProcess.runDeleteFile(POAttachments_Table.selectedRow.Id)).then(()=>storeValue('disable',false))}}","buttonColor":"{{appsmith.theme.colors.primaryColor}}","dynamicPropertyPathList":[{"key":"boxShadow"},{"key":"isDisabled"},{"key":"onClick"}],"displayName":"Icon Button","iconSVG":"/static/media/icon.1a0c634ac75f9fa6b6ae7a8df882a3ba.svg","searchTags":["click","submit"],"topRow":0.0,"bottomRow":4.0,"tooltip":"Delete Files","parentRowSpace":10.0,"type":"ICON_BUTTON_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":10.0322265625,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":54.0,"dynamicBindingPathList":[{"key":"buttonColor"},{"key":"isDisabled"}],"isDisabled":"{{POAttachments_Table.selectedRowIndex==-1||appsmith.store.disable}}","key":"z13en9py0b","isDeprecated":false,"rightColumn":59.0,"iconName":"trash","widgetId":"yxepik9l13","isVisible":true,"version":1.0,"parentId":"5899xdgf2y","renderMode":"CANVAS","isLoading":false,"borderRadius":"0.375rem","buttonVariant":"SECONDARY"},{"boxShadow":"0px 0px 2px 1.5px rgba(0, 0, 0, 0.25)","widgetName":"FileUploadClose_Button","onClick":"{{PO_Select.run(); closeModal('FileUpload_Modal');GlobalVariables.resetForm(['Quote_File_Container'])}} ","buttonColor":"{{appsmith.theme.colors.primaryColor}}","dynamicPropertyPathList":[{"key":"boxShadow"},{"key":"isDisabled"},{"key":"onClick"}],"displayName":"Icon Button","iconSVG":"/static/media/icon.1a0c634ac75f9fa6b6ae7a8df882a3ba.svg","searchTags":["click","submit"],"topRow":0.0,"bottomRow":4.0,"tooltip":"","parentRowSpace":10.0,"type":"ICON_BUTTON_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":10.0322265625,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":59.0,"dynamicBindingPathList":[{"key":"buttonColor"}],"isDisabled":"","key":"z13en9py0b","isDeprecated":false,"rightColumn":64.0,"iconName":"cross","widgetId":"ivpo0ou3td","isVisible":true,"version":1.0,"parentId":"5899xdgf2y","renderMode":"CANVAS","isLoading":false,"borderRadius":"0.375rem","buttonVariant":"SECONDARY"},{"boxShadow":"none","widgetName":"FilePicker","buttonColor":"{{appsmith.theme.colors.primaryColor}}","dynamicPropertyPathList":[{"key":"onFilesSelected"},{"key":"isDisabled"}],"displayName":"FilePicker","iconSVG":"/static/media/icon.7c5ad9c357928c6ff5701bf51a56c2e5.svg","searchTags":["upload"],"topRow":0.0,"bottomRow":4.0,"parentRowSpace":10.0,"allowedFileTypes":[],"type":"FILE_PICKER_WIDGET_V2","hideCard":false,"animateLoading":false,"parentColumnSpace":19.05,"dynamicTriggerPathList":[{"key":"onFilesSelected"}],"leftColumn":0.0,"dynamicBindingPathList":[{"key":"buttonColor"}],"isDisabled":"","key":"cjvgnpr682","onFilesSelected":"{{FileUploadProcess.getFileName().then(()=>FileUploadProcess.onfileselect())\n}}","isRequired":false,"isDeprecated":false,"rightColumn":14.0,"isDefaultClickDisabled":true,"widgetId":"7kubap181a","isVisible":true,"label":"Select Files","maxFileSize":"100","version":1.0,"fileDataType":"Binary","parentId":"5899xdgf2y","selectedFiles":[],"renderMode":"CANVAS","isLoading":false,"borderRadius":"0.375rem","files":[],"maxNumFiles":"1"},{"boxShadow":"none","widgetName":"Error_input","dynamicPropertyPathList":[],"displayName":"Input","iconSVG":"/static/media/icon.9f505595da61a34f563dba82adeb06ec.svg","searchTags":["form","text input","number","textarea"],"topRow":13.0,"bottomRow":17.0,"tooltip":"Display an error message","parentRowSpace":10.0,"labelWidth":"8","autoFocus":false,"type":"INPUT_WIDGET_V2","hideCard":false,"animateLoading":false,"parentColumnSpace":6.15087890625,"dynamicTriggerPathList":[],"resetOnSubmit":true,"leftColumn":32.0,"dynamicBindingPathList":[{"key":"accentColor"},{"key":"defaultText"}],"labelPosition":"Left","labelStyle":"","labelTextColor":"","inputType":"TEXT","isDisabled":true,"key":"zgqucosmsy","labelTextSize":"0.875rem","isRequired":false,"isDeprecated":false,"rightColumn":64.0,"dynamicHeight":"FIXED","widgetId":"ffd121sqf6","accentColor":"{{appsmith.theme.colors.primaryColor}}","isVisible":true,"label":"Error Msg","version":2.0,"parentId":"5899xdgf2y","labelAlignment":"left","renderMode":"CANVAS","isLoading":false,"borderRadius":"0.375rem","maxDynamicHeight":9000.0,"iconAlign":"left","defaultText":"{{appsmith.store.ErrorMessage}}","minDynamicHeight":4.0}],"key":"8jj9ozjiq8","isDeprecated":false,"rightColumn":312.75,"detachFromLayout":true,"widgetId":"5899xdgf2y","accentColor":"{{appsmith.theme.colors.primaryColor}}","containerStyle":"none","isVisible":true,"version":1.0,"parentId":"pu1f0t0bbg","renderMode":"CANVAS","isLoading":false,"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}"}],"borderWidth":"0","key":"9508m2tat7","backgroundColor":"#FFFFFF","isDeprecated":false,"rightColumn":64.0,"dynamicHeight":"FIXED","widgetId":"pu1f0t0bbg","containerStyle":"card","isVisible":true,"version":1.0,"parentId":"rgbf0dn9js","renderMode":"CANVAS","isLoading":false,"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","maxDynamicHeight":9000.0,"minDynamicHeight":4.0}],"isDisabled":false,"key":"y47ei2f6i0","isDeprecated":false,"rightColumn":263.625,"detachFromLayout":true,"widgetId":"rgbf0dn9js","minWidth":450.0,"isVisible":true,"version":1.0,"parentId":"aesh21d5j7","renderMode":"CANVAS","isLoading":false,"mobileTopRow":0.0,"responsiveBehavior":"fill","mobileLeftColumn":0.0,"flexLayers":[]}],"key":"n0xf4585ut","height":494.0,"isDeprecated":false,"rightColumn":37.0,"detachFromLayout":true,"dynamicHeight":"FIXED","widgetId":"aesh21d5j7","canOutsideClickClose":true,"canEscapeKeyClose":true,"version":2.0,"parentId":"0","renderMode":"CANVAS","isLoading":false,"mobileTopRow":9.0,"borderRadius":"0.375rem","mobileLeftColumn":13.0,"maxDynamicHeight":9000.0,"width":647.9,"minDynamicHeight":24.0},{"boxShadow":"none","mobileBottomRow":38.0,"widgetName":"File_Alert_Modal","isCanvas":true,"displayName":"Modal","iconSVG":"/static/media/icon.d2ab7de0666eaef853cc2d330f86887b.svg","searchTags":["dialog","popup","notification"],"topRow":56.0,"bottomRow":296.0,"parentRowSpace":10.0,"type":"MODAL_WIDGET","hideCard":false,"shouldScrollContents":false,"mobileRightColumn":36.0,"animateLoading":false,"parentColumnSpace":10.41015625,"dynamicTriggerPathList":[],"leftColumn":12.0,"dynamicBindingPathList":[{"key":"borderRadius"}],"children":[{"mobileBottomRow":240.0,"widgetName":"Canvas20","displayName":"Canvas","topRow":0.0,"bottomRow":180.0,"parentRowSpace":1.0,"type":"CANVAS_WIDGET","canExtend":true,"hideCard":true,"shouldScrollContents":false,"minHeight":182.0,"mobileRightColumn":249.84375,"parentColumnSpace":1.0,"leftColumn":0.0,"dynamicBindingPathList":[],"children":[{"boxShadow":"none","widgetName":"File_Alert_CloseButton","onClick":"{{resetWidget('FilePicker').then(()=>closeModal('File_Alert_Modal'))}}","buttonColor":"{{appsmith.theme.colors.primaryColor}}","dynamicPropertyPathList":[{"key":"onClick"}],"displayName":"Button","iconSVG":"/static/media/icon.cca026338f1c8eb6df8ba03d084c2fca.svg","searchTags":["click","submit"],"topRow":12.0,"bottomRow":16.0,"type":"BUTTON_WIDGET","hideCard":false,"animateLoading":true,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":51.0,"dynamicBindingPathList":[{"key":"buttonColor"},{"key":"borderRadius"}],"text":"Okay","isDisabled":false,"key":"nu57m82z50","isDeprecated":false,"rightColumn":63.0,"isDefaultClickDisabled":true,"widgetId":"aooarde4a3","buttonStyle":"PRIMARY_BUTTON","isVisible":true,"recaptchaType":"V3","version":1.0,"parentId":"fd794f3gd8","renderMode":"CANVAS","isLoading":false,"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","buttonVariant":"PRIMARY","placement":"CENTER"},{"widgetName":"File_Alert_Text","displayName":"Text","iconSVG":"/static/media/icon.97c59b523e6f70ba6f40a10fc2c7c5b5.svg","searchTags":["typography","paragraph","label"],"topRow":2.0,"bottomRow":11.0,"type":"TEXT_WIDGET","hideCard":false,"animateLoading":false,"overflow":"NONE","fontFamily":"{{appsmith.theme.fontFamily.appFont}}","dynamicTriggerPathList":[],"leftColumn":0.0,"dynamicBindingPathList":[{"key":"fontFamily"},{"key":"borderRadius"},{"key":"textColor"}],"shouldTruncate":false,"truncateButtonColor":"#FFC13D","text":"File is large, Use other application to upload the file.\nNote: appsmith supports file size less than 20mb and zip file of 4mb","key":"16xe830bkl","isDeprecated":false,"rightColumn":64.0,"textAlign":"CENTER","dynamicHeight":"FIXED","widgetId":"pobazzwekz","isVisible":true,"fontStyle":"BOLD","textColor":"{{appsmith.theme.colors.primaryColor}}","version":1.0,"parentId":"fd794f3gd8","renderMode":"CANVAS","isLoading":false,"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","maxDynamicHeight":9000.0,"fontSize":"1.5rem","minDynamicHeight":4.0}],"isDisabled":false,"key":"unr6cvaqjz","isDeprecated":false,"rightColumn":249.84375,"detachFromLayout":true,"widgetId":"fd794f3gd8","minWidth":450.0,"isVisible":true,"version":1.0,"parentId":"48tw7ek0q8","renderMode":"CANVAS","isLoading":false,"mobileTopRow":0.0,"responsiveBehavior":"fill","mobileLeftColumn":0.0,"flexLayers":[]}],"key":"2nsq1idgqj","height":182.0,"isDeprecated":false,"rightColumn":36.0,"detachFromLayout":true,"dynamicHeight":"FIXED","widgetId":"48tw7ek0q8","canOutsideClickClose":true,"canEscapeKeyClose":true,"version":2.0,"parentId":"0","renderMode":"CANVAS","isLoading":false,"mobileTopRow":14.0,"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","mobileLeftColumn":12.0,"maxDynamicHeight":9000.0,"width":698.25,"minDynamicHeight":24.0},{"boxShadow":"none","mobileBottomRow":27.0,"widgetName":"ShowAlert_Modal","isCanvas":true,"displayName":"Modal","iconSVG":"/static/media/icon.d2ab7de0666eaef853cc2d330f86887b.svg","searchTags":["dialog","popup","notification"],"topRow":56.0,"bottomRow":306.0,"parentRowSpace":10.0,"type":"MODAL_WIDGET","hideCard":false,"shouldScrollContents":false,"mobileRightColumn":39.0,"animateLoading":false,"parentColumnSpace":10.984375,"dynamicTriggerPathList":[],"leftColumn":15.0,"dynamicBindingPathList":[{"key":"borderRadius"}],"children":[{"mobileBottomRow":240.0,"widgetName":"Canvas24","displayName":"Canvas","topRow":0.0,"bottomRow":160.0,"parentRowSpace":1.0,"type":"CANVAS_WIDGET","canExtend":true,"hideCard":true,"shouldScrollContents":false,"minHeight":164.0,"mobileRightColumn":263.625,"parentColumnSpace":1.0,"leftColumn":0.0,"dynamicBindingPathList":[],"children":[{"mobileBottomRow":5.0,"widgetName":"Text5","displayName":"Text","iconSVG":"/static/media/icon.c3b6033f570046f8c6288d911333a827.svg","searchTags":["typography","paragraph","label"],"topRow":4.0,"bottomRow":8.0,"type":"TEXT_WIDGET","hideCard":false,"mobileRightColumn":41.0,"animateLoading":false,"overflow":"NONE","fontFamily":"{{appsmith.theme.fontFamily.appFont}}","dynamicTriggerPathList":[],"leftColumn":0.0,"dynamicBindingPathList":[{"key":"truncateButtonColor"},{"key":"fontFamily"},{"key":"borderRadius"},{"key":"text"},{"key":"textColor"}],"shouldTruncate":false,"truncateButtonColor":"{{appsmith.theme.colors.primaryColor}}","text":"{{ActualFileName_Input.text.concat(\"   Does not exist in SharePoint!!!\")}}","key":"u1eb8unlsk","isDeprecated":false,"rightColumn":63.0,"textAlign":"CENTER","dynamicHeight":"FIXED","widgetId":"z76fes7q8n","minWidth":450.0,"isVisible":true,"fontStyle":"BOLD","textColor":"{{appsmith.theme.colors.primaryColor}}","version":1.0,"parentId":"n97ot9wet5","renderMode":"CANVAS","isLoading":false,"mobileTopRow":1.0,"responsiveBehavior":"fill","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","mobileLeftColumn":1.0,"maxDynamicHeight":9000.0,"fontSize":"1.25rem","minDynamicHeight":4.0},{"resetFormOnClick":false,"boxShadow":"none","mobileBottomRow":22.0,"widgetName":"Close_ButtonCopy","onClick":"{{closeModal('ShowAlert_Modal')}}","buttonColor":"{{appsmith.theme.colors.primaryColor}}","dynamicPropertyPathList":[{"key":"onClick"}],"displayName":"Button","iconSVG":"/static/media/icon.7beb9123fb53027d9d6b778cdfe4caed.svg","searchTags":["click","submit"],"topRow":9.0,"bottomRow":13.0,"type":"BUTTON_WIDGET","hideCard":false,"mobileRightColumn":47.0,"animateLoading":true,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":47.0,"dynamicBindingPathList":[{"key":"buttonColor"},{"key":"borderRadius"}],"text":"Okay","isDisabled":false,"key":"a8byd68sd0","isDeprecated":false,"rightColumn":63.0,"isDefaultClickDisabled":true,"widgetId":"zfzct0mao3","buttonStyle":"PRIMARY","minWidth":120.0,"isVisible":true,"recaptchaType":"V3","version":1.0,"parentId":"n97ot9wet5","renderMode":"CANVAS","isLoading":false,"mobileTopRow":18.0,"responsiveBehavior":"hug","disabledWhenInvalid":false,"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","mobileLeftColumn":31.0,"placement":"CENTER"}],"isDisabled":false,"key":"zrwmtap8cw","isDeprecated":false,"rightColumn":263.625,"detachFromLayout":true,"widgetId":"n97ot9wet5","minWidth":450.0,"isVisible":true,"version":1.0,"parentId":"fv6vhtjrdt","renderMode":"CANVAS","isLoading":false,"mobileTopRow":0.0,"responsiveBehavior":"fill","mobileLeftColumn":0.0,"flexLayers":[]}],"key":"ts2tav54bq","height":164.0,"isDeprecated":false,"rightColumn":39.0,"detachFromLayout":true,"dynamicHeight":"FIXED","widgetId":"fv6vhtjrdt","canOutsideClickClose":true,"canEscapeKeyClose":true,"version":2.0,"parentId":"0","renderMode":"CANVAS","isLoading":false,"mobileTopRow":3.0,"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","mobileLeftColumn":15.0,"maxDynamicHeight":9000.0,"width":698.25,"minDynamicHeight":24.0},{"boxShadow":"none","widgetName":"Progress_Modal","isCanvas":true,"displayName":"Modal","iconSVG":"/static/media/icon.4975978e9a961fb0bfb4e38de7ecc7c5.svg","searchTags":["dialog","popup","notification"],"topRow":56.0,"bottomRow":80.0,"parentRowSpace":10.0,"type":"MODAL_WIDGET","hideCard":false,"shouldScrollContents":false,"animateLoading":false,"parentColumnSpace":14.0625,"dynamicTriggerPathList":[],"leftColumn":14.0,"dynamicBindingPathList":[{"key":"borderRadius"}],"children":[{"boxShadow":"none","widgetName":"Canvas12Copy","displayName":"Canvas","topRow":0.0,"bottomRow":240.0,"parentRowSpace":1.0,"type":"CANVAS_WIDGET","canExtend":true,"hideCard":true,"shouldScrollContents":false,"minHeight":244.0,"parentColumnSpace":1.0,"dynamicTriggerPathList":[],"leftColumn":0.0,"dynamicBindingPathList":[{"key":"borderRadius"},{"key":"accentColor"}],"children":[{"boxShadow":"none","widgetName":"retry_Button","onClick":"{{FileUploadProcess.retryfunction()}}","buttonColor":"{{appsmith.theme.colors.primaryColor}}","dynamicPropertyPathList":[{"key":"isDisabled"},{"key":"onClick"}],"displayName":"Button","iconSVG":"/static/media/icon.cca026338f1c8eb6df8ba03d084c2fca.svg","searchTags":["click","submit"],"topRow":18.0,"bottomRow":22.0,"type":"BUTTON_WIDGET","hideCard":false,"animateLoading":true,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":31.0,"dynamicBindingPathList":[{"key":"buttonColor"},{"key":"borderRadius"},{"key":"isDisabled"}],"text":"Retry","isDisabled":"{{appsmith.store.closedisable=='False'}}","key":"5g8c8gayqk","isDeprecated":false,"rightColumn":47.0,"isDefaultClickDisabled":true,"widgetId":"531nvanhk8","buttonStyle":"PRIMARY","isVisible":true,"recaptchaType":"V3","version":1.0,"parentId":"6gsurmuvw7","renderMode":"CANVAS","isLoading":false,"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","buttonVariant":"SECONDARY","placement":"CENTER"},{"widgetName":"Error_text","displayName":"Text","iconSVG":"/static/media/icon.97c59b523e6f70ba6f40a10fc2c7c5b5.svg","searchTags":["typography","paragraph","label"],"topRow":13.0,"bottomRow":17.0,"type":"TEXT_WIDGET","hideCard":false,"animateLoading":false,"overflow":"NONE","fontFamily":"{{appsmith.theme.fontFamily.appFont}}","dynamicTriggerPathList":[],"leftColumn":3.0,"dynamicBindingPathList":[{"key":"fontFamily"},{"key":"borderRadius"},{"key":"text"}],"shouldTruncate":false,"truncateButtonColor":"#FFC13D","text":"{{appsmith.store.ErrorMessage}}","key":"dcsz6tjc0b","isDeprecated":false,"rightColumn":62.0,"textAlign":"LEFT","dynamicHeight":"FIXED","widgetId":"033bys4j2w","isVisible":true,"fontStyle":"BOLD","textColor":"#f87171","version":1.0,"parentId":"6gsurmuvw7","renderMode":"CANVAS","isLoading":false,"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","maxDynamicHeight":9000.0,"fontSize":"0.875rem","minDynamicHeight":4.0},{"widgetName":"Statename_text","displayName":"Text","iconSVG":"/static/media/icon.97c59b523e6f70ba6f40a10fc2c7c5b5.svg","searchTags":["typography","paragraph","label"],"topRow":2.0,"bottomRow":6.0,"type":"TEXT_WIDGET","hideCard":false,"animateLoading":false,"overflow":"NONE","fontFamily":"{{appsmith.theme.fontFamily.appFont}}","dynamicTriggerPathList":[],"leftColumn":3.0,"dynamicBindingPathList":[{"key":"fontFamily"},{"key":"borderRadius"},{"key":"text"},{"key":"textColor"}],"shouldTruncate":false,"truncateButtonColor":"#FFC13D","text":"{{appsmith.store.statename}}","key":"dcsz6tjc0b","isDeprecated":false,"rightColumn":43.0,"textAlign":"LEFT","dynamicHeight":"FIXED","widgetId":"e3ht1smss4","isVisible":true,"fontStyle":"BOLD","textColor":"{{appsmith.theme.colors.primaryColor}}","version":1.0,"parentId":"6gsurmuvw7","renderMode":"CANVAS","isLoading":false,"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","maxDynamicHeight":9000.0,"fontSize":"1.5rem","minDynamicHeight":4.0},{"boxShadow":"none","widgetName":"FileClose_Button","onClick":"{{storeValue('statename','Completed');await FileUploadProcess.runRefreshFunc().then(()=>closeModal('Progress_Modal'))}}","buttonColor":"{{appsmith.theme.colors.primaryColor}}","dynamicPropertyPathList":[{"key":"isDisabled"},{"key":"onClick"}],"displayName":"Button","iconSVG":"/static/media/icon.cca026338f1c8eb6df8ba03d084c2fca.svg","searchTags":["click","submit"],"topRow":18.0,"bottomRow":22.0,"type":"BUTTON_WIDGET","hideCard":false,"animateLoading":true,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":47.0,"dynamicBindingPathList":[{"key":"buttonColor"},{"key":"borderRadius"},{"key":"isDisabled"}],"text":"Close","isDisabled":"{{Error_text.text.length==0||appsmith.store.closedisable=='False'}}","key":"5g8c8gayqk","isDeprecated":false,"rightColumn":63.0,"isDefaultClickDisabled":true,"widgetId":"o1z5n0uf57","buttonStyle":"PRIMARY","isVisible":true,"recaptchaType":"V3","version":1.0,"parentId":"6gsurmuvw7","renderMode":"CANVAS","isLoading":false,"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","buttonVariant":"SECONDARY","placement":"CENTER"},{"widgetName":"Upload_Progress","progressType":"linear","isCanvas":false,"dynamicPropertyPathList":[{"key":"progress"}],"displayName":"Progress","iconSVG":"/static/media/icon.9b0d7b96a0223e8120bf6f14aca4154a.svg","searchTags":["percent"],"topRow":7.0,"bottomRow":13.0,"parentRowSpace":10.0,"type":"PROGRESS_WIDGET","isIndeterminate":false,"hideCard":false,"fillColor":"{{appsmith.theme.colors.primaryColor}}","parentColumnSpace":8.25,"dynamicTriggerPathList":[],"leftColumn":3.0,"dynamicBindingPathList":[{"key":"fillColor"},{"key":"borderRadius"},{"key":"progress"}],"key":"0kuaqx9xvs","showResult":true,"isDeprecated":false,"rightColumn":62.0,"counterClosewise":false,"widgetId":"ouoxhwdmz6","isVisible":true,"steps":"1","version":1.0,"parentId":"6gsurmuvw7","renderMode":"CANVAS","isLoading":false,"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","progress":"{{appsmith.store.progressstatus}}"}],"isDisabled":false,"key":"yu9isw81na","isDeprecated":false,"rightColumn":337.5,"detachFromLayout":true,"widgetId":"6gsurmuvw7","accentColor":"{{appsmith.theme.colors.primaryColor}}","isVisible":true,"version":1.0,"parentId":"eafrlxgvz5","renderMode":"CANVAS","isLoading":false,"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}"}],"key":"52gxsk3uoi","height":244.0,"isDeprecated":false,"rightColumn":38.0,"detachFromLayout":true,"dynamicHeight":"FIXED","widgetId":"eafrlxgvz5","canOutsideClickClose":true,"canEscapeKeyClose":true,"version":2.0,"parentId":"0","renderMode":"CANVAS","isLoading":false,"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","maxDynamicHeight":9000.0,"width":540.0,"minDynamicHeight":4.0},{"boxShadow":"none","widgetName":"Tabs1","isCanvas":true,"dynamicPropertyPathList":[{"key":"onTabSelected"}],"displayName":"Tabs","iconSVG":"/static/media/icon.74a6d653.svg","topRow":13.0,"bottomRow":74.0,"parentRowSpace":10.0,"type":"TABS_WIDGET","hideCard":false,"shouldScrollContents":false,"animateLoading":false,"parentColumnSpace":15.0625,"dynamicTriggerPathList":[{"key":"onTabSelected"}],"leftColumn":0.0,"dynamicBindingPathList":[{"key":"accentColor"}],"children":[{"tabId":"tab1","boxShadow":"none","widgetName":"Canvas1","displayName":"Canvas","topRow":0.0,"bottomRow":570.0,"parentRowSpace":1.0,"type":"CANVAS_WIDGET","canExtend":true,"hideCard":true,"shouldScrollContents":false,"minHeight":400.0,"parentColumnSpace":1.0,"dynamicTriggerPathList":[],"leftColumn":0.0,"dynamicBindingPathList":[],"children":[{"boxShadow":"none","widgetName":"Text4","borderColor":"transparent","dynamicPropertyPathList":[{"key":"textColor"},{"key":"fontSize"}],"displayName":"Text","iconSVG":"/static/media/icon.97c59b52.svg","topRow":0.0,"bottomRow":5.0,"parentRowSpace":10.0,"type":"TEXT_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":14.75,"dynamicTriggerPathList":[],"overflow":"NONE","fontFamily":"System Default","leftColumn":0.0,"dynamicBindingPathList":[{"key":"textColor"},{"key":"text"}],"borderWidth":"1","truncateButtonColor":"#FFC13D","text":"Estimate in {{ appsmith.store.currentStateName }} state","key":"0l7d6pdzs3","labelTextSize":"0.875rem","rightColumn":30.0,"textAlign":"CENTER","dynamicHeight":"FIXED","widgetId":"1ta1t1wzwn","isVisible":true,"fontStyle":"ITALIC,BOLD","textColor":"{{ GlobalVariables.LabelColor }}","version":1.0,"parentId":"ilepmp3eiu","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","maxDynamicHeight":9000.0,"fontSize":"1.125rem","minDynamicHeight":4.0},{"boxShadow":"none","widgetName":"PO_Details_Container","borderColor":"transparent","isCanvas":true,"dynamicPropertyPathList":[{"key":"borderRadius"}],"displayName":"Container","iconSVG":"/static/media/icon.1977dca3.svg","topRow":6.0,"bottomRow":54.0,"parentRowSpace":10.0,"type":"CONTAINER_WIDGET","hideCard":false,"animateLoading":true,"parentColumnSpace":16.125,"leftColumn":34.0,"children":[{"boxShadow":"none","widgetName":"Canvas18","displayName":"Canvas","topRow":0.0,"bottomRow":480.0,"parentRowSpace":1.0,"type":"CANVAS_WIDGET","canExtend":false,"hideCard":true,"minHeight":400.0,"parentColumnSpace":1.0,"leftColumn":0.0,"children":[{"mobileBottomRow":88.0,"widgetName":"Taxable_Checkbox","dynamicPropertyPathList":[{"key":"defaultCheckedState"}],"displayName":"Checkbox","iconSVG":"/static/media/icon.7b004ee098ca948e952234e7baec6d11.svg","searchTags":["boolean"],"topRow":40.0,"bottomRow":45.0,"parentRowSpace":10.0,"type":"CHECKBOX_WIDGET","alignWidget":"LEFT","hideCard":false,"mobileRightColumn":50.0,"animateLoading":false,"parentColumnSpace":10.46875,"dynamicTriggerPathList":[],"leftColumn":43.0,"dynamicBindingPathList":[{"key":"accentColor"},{"key":"borderRadius"},{"key":"defaultCheckedState"}],"labelPosition":"Left","labelTextColor":"#008695","isDisabled":false,"key":"ahxvw90zks","isRequired":false,"isDeprecated":false,"rightColumn":59.0,"dynamicHeight":"FIXED","widgetId":"bg2jzsolxi","accentColor":"{{appsmith.theme.colors.primaryColor}}","minWidth":450.0,"isVisible":true,"label":"Taxable","version":1.0,"parentId":"93hmypgv2l","tags":["Toggles"],"renderMode":"CANVAS","isLoading":false,"mobileTopRow":84.0,"responsiveBehavior":"fill","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","mobileLeftColumn":38.0,"defaultCheckedState":"{{Estimate_PO_Table.selectedRowIndex==-1?true:Estimate_PO_Table.selectedRow.Taxable}}","maxDynamicHeight":9000.0,"minDynamicHeight":4.0},{"boxShadow":"none","widgetName":"PO_PaymentTerm_Input","displayName":"Input","iconSVG":"/static/media/icon.9f505595.svg","topRow":39.0,"bottomRow":45.0,"parentRowSpace":10.0,"autoFocus":false,"type":"INPUT_WIDGET_V2","hideCard":false,"animateLoading":false,"parentColumnSpace":16.125,"dynamicTriggerPathList":[],"resetOnSubmit":true,"leftColumn":3.0,"dynamicBindingPathList":[{"key":"validation"},{"key":"defaultText"},{"key":"accentColor"}],"labelStyle":"","labelTextColor":"#008695","inputType":"TEXT","maxChars":"10","isDisabled":false,"key":"z664xfowd2","validation":"{{PO_PaymentTerm_Input.text.length>0 && PO_PaymentTerm_Input.text.length<=10}}","labelTextSize":"0.875rem","isRequired":true,"rightColumn":39.0,"dynamicHeight":"FIXED","widgetId":"y9ilpe0vli","accentColor":"{{appsmith.theme.colors.primaryColor}}","isVisible":true,"label":"Payment Term","version":2.0,"parentId":"93hmypgv2l","renderMode":"CANVAS","isLoading":false,"originalTopRow":42.0,"borderRadius":"0px","maxDynamicHeight":9000.0,"originalBottomRow":48.0,"iconAlign":"left","defaultText":"{{ PO_Details_Select.data?.find((row) => row.EId == Estimate_PO_Table.selectedRow.EstimateId)?.PaymentTerm || \"\" }}","minDynamicHeight":4.0},{"boxShadow":"none","widgetName":"PO_Number_Input","displayName":"Input","iconSVG":"/static/media/icon.9f505595.svg","topRow":0.0,"bottomRow":6.0,"parentRowSpace":10.0,"autoFocus":false,"type":"INPUT_WIDGET_V2","hideCard":false,"animateLoading":false,"parentColumnSpace":16.125,"dynamicTriggerPathList":[],"resetOnSubmit":true,"leftColumn":3.0,"dynamicBindingPathList":[{"key":"validation"},{"key":"defaultText"},{"key":"accentColor"}],"labelStyle":"","labelTextColor":"#008695","inputType":"TEXT","maxChars":"20","isDisabled":false,"key":"z664xfowd2","validation":"{{PO_Number_Input.text.length> 0 && PO_Number_Input.text.length<=20}}","labelTextSize":"0.875rem","isRequired":true,"rightColumn":59.0,"dynamicHeight":"FIXED","widgetId":"zc407062ij","accentColor":"{{appsmith.theme.colors.primaryColor}}","isVisible":true,"label":"PO #","version":2.0,"parentId":"93hmypgv2l","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","maxDynamicHeight":9000.0,"iconAlign":"left","defaultText":"{{ PO_Details_Select.data?.find((row) => row.EId == Estimate_PO_Table.selectedRow.EstimateId)?.PurchaseOrderNumber || \"\" }}","minDynamicHeight":4.0},{"boxShadow":"none","widgetName":"PO_Description_Input","displayName":"Input","iconSVG":"/static/media/icon.9f505595.svg","topRow":7.0,"bottomRow":22.0,"parentRowSpace":10.0,"autoFocus":false,"type":"INPUT_WIDGET_V2","hideCard":false,"animateLoading":false,"parentColumnSpace":16.125,"dynamicTriggerPathList":[],"resetOnSubmit":true,"leftColumn":3.0,"dynamicBindingPathList":[{"key":"validation"},{"key":"accentColor"},{"key":"defaultText"}],"labelStyle":"","labelTextColor":"#008695","inputType":"MULTI_LINE_TEXT","isDisabled":false,"key":"z664xfowd2","validation":"{{PO_Description_Input.text.length>0}}","labelTextSize":"0.875rem","isRequired":true,"rightColumn":59.0,"dynamicHeight":"FIXED","widgetId":"3bbvjjbuya","accentColor":"{{appsmith.theme.colors.primaryColor}}","isVisible":true,"label":"PO Description","version":2.0,"parentId":"93hmypgv2l","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","maxDynamicHeight":9000.0,"shouldAllowAutofill":false,"iconAlign":"left","defaultText":"{{ PO_Details_Select.data?.find((row) => row.EId == Estimate_PO_Table.selectedRow.EstimateId)?.PurchaseOrderDescription || \"\" }}","minDynamicHeight":4.0},{"boxShadow":"none","widgetName":"PO_BillTo_Input","displayName":"Input","iconSVG":"/static/media/icon.9f505595.svg","topRow":23.0,"bottomRow":30.0,"parentRowSpace":10.0,"autoFocus":false,"type":"INPUT_WIDGET_V2","hideCard":false,"animateLoading":false,"parentColumnSpace":16.125,"dynamicTriggerPathList":[],"resetOnSubmit":true,"leftColumn":3.0,"dynamicBindingPathList":[{"key":"validation"},{"key":"accentColor"},{"key":"defaultText"}],"labelStyle":"","labelTextColor":"#008695","inputType":"TEXT","isDisabled":false,"key":"z664xfowd2","validation":"{{PO_BillTo_Input.text.length>0}}","labelTextSize":"0.875rem","isRequired":true,"rightColumn":59.0,"dynamicHeight":"FIXED","widgetId":"x4zht876og","accentColor":"{{appsmith.theme.colors.primaryColor}}","isVisible":true,"label":"Bill To","version":2.0,"parentId":"93hmypgv2l","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","maxDynamicHeight":9000.0,"shouldAllowAutofill":false,"iconAlign":"left","defaultText":"{{ PO_Details_Select.data?.find((row) => row.EId == Estimate_PO_Table.selectedRow.EstimateId)?.BillTo || \"\" }}","minDynamicHeight":4.0},{"boxShadow":"none","widgetName":"PO_ShipTo_Input","displayName":"Input","iconSVG":"/static/media/icon.9f505595.svg","topRow":31.0,"bottomRow":38.0,"parentRowSpace":10.0,"autoFocus":false,"type":"INPUT_WIDGET_V2","hideCard":false,"animateLoading":false,"parentColumnSpace":16.125,"dynamicTriggerPathList":[],"resetOnSubmit":true,"leftColumn":3.0,"dynamicBindingPathList":[{"key":"validation"},{"key":"defaultText"},{"key":"accentColor"}],"labelStyle":"","labelTextColor":"#008695","inputType":"TEXT","isDisabled":false,"key":"z664xfowd2","validation":"{{PO_ShipTo_Input.text.length>0}}","labelTextSize":"0.875rem","isRequired":true,"rightColumn":59.0,"dynamicHeight":"FIXED","widgetId":"1jx3jjxz3x","accentColor":"{{appsmith.theme.colors.primaryColor}}","isVisible":true,"label":"Ship To","version":2.0,"parentId":"93hmypgv2l","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","maxDynamicHeight":9000.0,"shouldAllowAutofill":false,"iconAlign":"left","defaultText":"{{ PO_Details_Select.data?.find((row) => row.EId == Estimate_PO_Table.selectedRow.EstimateId)?.ShipTo || \"\" }}","minDynamicHeight":4.0}],"key":"f3ddq5yh0c","labelTextSize":"0.875rem","rightColumn":387.0,"detachFromLayout":true,"widgetId":"93hmypgv2l","containerStyle":"none","isVisible":true,"version":1.0,"parentId":"ue54cidlum","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px"}],"borderWidth":"0","key":"h92fjhihn7","labelTextSize":"0.875rem","backgroundColor":"#FFFFFF","rightColumn":64.0,"dynamicHeight":"FIXED","widgetId":"ue54cidlum","containerStyle":"card","isVisible":true,"version":1.0,"parentId":"ilepmp3eiu","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","maxDynamicHeight":9000.0,"minDynamicHeight":4.0},{"boxShadow":"none","widgetName":"PO_Details_Buttons_Container","borderColor":"transparent","isCanvas":true,"dynamicPropertyPathList":[{"key":"borderRadius"}],"displayName":"Container","iconSVG":"/static/media/icon.1977dca3.svg","topRow":0.0,"bottomRow":6.0,"parentRowSpace":10.0,"type":"CONTAINER_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":13.5732421875,"dynamicTriggerPathList":[],"leftColumn":43.0,"dynamicBindingPathList":[],"children":[{"boxShadow":"none","widgetName":"SalesDetails_Buttons_CanvasCopy","displayName":"Canvas","topRow":0.0,"bottomRow":60.0,"parentRowSpace":1.0,"type":"CANVAS_WIDGET","canExtend":false,"hideCard":true,"minHeight":400.0,"parentColumnSpace":1.0,"leftColumn":0.0,"dynamicBindingPathList":[],"children":[{"boxShadow":"0px 0px 4px 3px rgba(0, 0, 0, 0.25)","widgetName":"PO_Reset_Button","onClick":"{{ GlobalVariables.resetForm([\"Estimate_PO_Table\",\"PO_Details_Container\"]) }}","buttonColor":"#008695","dynamicPropertyPathList":[{"key":"onClick"},{"key":"boxShadow"}],"displayName":"Icon Button","iconSVG":"/static/media/icon.1a0c634a.svg","topRow":0.0,"bottomRow":4.0,"parentRowSpace":10.0,"type":"ICON_BUTTON_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":15.0625,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":21.0,"dynamicBindingPathList":[],"isDisabled":false,"key":"x5byygbcp7","labelTextSize":"0.875rem","rightColumn":28.0,"iconName":"reset","widgetId":"cv0ug4qrov","isVisible":true,"version":1.0,"parentId":"zzop00kun4","renderMode":"CANVAS","isLoading":false,"borderRadius":"0.375rem","buttonVariant":"TERTIARY"},{"boxShadow":"0px 0px 4px 3px rgba(0, 0, 0, 0.25)","widgetName":"PO_Create_Button","onClick":"{{PageObjects.insertPO(Estimate_PO_Table.selectedRow.EstimateId,PO_Number_Input.text,PO_Description_Input.text,PO_BillTo_Input.text,PO_ShipTo_Input.text,PO_PaymentTerm_Input.text,Taxable_Checkbox.isChecked)}}","buttonColor":"#008695","dynamicPropertyPathList":[{"key":"isDisabled"},{"key":"onClick"},{"key":"boxShadow"}],"displayName":"Icon Button","iconSVG":"/static/media/icon.1a0c634a.svg","topRow":0.0,"bottomRow":4.0,"parentRowSpace":10.0,"type":"ICON_BUTTON_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":5.3359375,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":29.0,"dynamicBindingPathList":[{"key":"isDisabled"}],"isDisabled":"{{PageObjects.DisablePODetailsInsertButton() || PO_Details_Select.data?.find((row) => row.EId == Estimate_PO_Table.selectedRow.EstimateId)!=null}}","key":"wqh17u5h8b","labelTextSize":"0.875rem","rightColumn":39.0,"iconName":"plus","widgetId":"rruwge6tjr","isVisible":true,"version":1.0,"parentId":"zzop00kun4","renderMode":"CANVAS","isLoading":false,"borderRadius":"0.375rem","buttonVariant":"TERTIARY"},{"boxShadow":"0px 0px 4px 3px rgba(0, 0, 0, 0.25)","widgetName":"PO_Update_Button","onClick":"{{PageObjects.updatePO(PO_Number_Input.text,PO_Description_Input.text,PO_BillTo_Input.text,PO_ShipTo_Input.text,PO_PaymentTerm_Input.text,Taxable_Checkbox.isChecked)}}","buttonColor":"#008695","dynamicPropertyPathList":[{"key":"isDisabled"},{"key":"onClick"},{"key":"boxShadow"}],"displayName":"Icon Button","iconSVG":"/static/media/icon.1a0c634a.svg","topRow":0.0,"bottomRow":4.0,"parentRowSpace":10.0,"type":"ICON_BUTTON_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":5.3359375,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":41.0,"dynamicBindingPathList":[{"key":"isDisabled"}],"isDisabled":"{{PageObjects.DisablePODetailsUpdateButton() || PO_Details_Select.data?.find((row) => row.EId == Estimate_PO_Table.selectedRow.EstimateId)==null}}","key":"wqh17u5h8b","labelTextSize":"0.875rem","rightColumn":46.0,"iconName":"edit","widgetId":"zbv8egi0gm","isVisible":true,"version":1.0,"parentId":"zzop00kun4","renderMode":"CANVAS","isLoading":false,"borderRadius":"0.375rem","buttonVariant":"TERTIARY"},{"boxShadow":"0px 0px 4px 3px rgba(0, 0, 0, 0.25)","widgetName":"PO_Delete_Button","onClick":"{{PageObjects.deletePO(PO_Details_Select.data?.find((row) => row.EId == Estimate_PO_Table.selectedRow.EstimateId)?.PurchaseOrderId)}}","buttonColor":"#008695","dynamicPropertyPathList":[{"key":"isDisabled"},{"key":"onClick"},{"key":"boxShadow"}],"displayName":"Icon Button","iconSVG":"/static/media/icon.1a0c634a.svg","topRow":0.0,"bottomRow":4.0,"parentRowSpace":10.0,"type":"ICON_BUTTON_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":5.3359375,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":52.0,"dynamicBindingPathList":[{"key":"isDisabled"}],"isDisabled":"{{Estimate_PO_Table.selectedRowIndex == -1 || appsmith.store.currentStateName == 'Completed' || PO_Details_Select.data?.find((row) => row.EId == Estimate_PO_Table.selectedRow.EstimateId)==null}}","key":"wqh17u5h8b","labelTextSize":"0.875rem","rightColumn":54.0,"iconName":"trash","widgetId":"b35dpnnmds","isVisible":true,"version":1.0,"parentId":"zzop00kun4","renderMode":"CANVAS","isLoading":false,"borderRadius":"0.375rem","buttonVariant":"TERTIARY"}],"key":"62kn4szsbb","labelTextSize":"0.875rem","rightColumn":325.7578125,"detachFromLayout":true,"widgetId":"zzop00kun4","containerStyle":"none","isVisible":true,"version":1.0,"parentId":"ehqrrxy8em","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px"}],"borderWidth":"0","key":"zkrysm8hzk","labelTextSize":"0.875rem","backgroundColor":"#FFFFFF","rightColumn":64.0,"dynamicHeight":"FIXED","widgetId":"ehqrrxy8em","containerStyle":"card","isVisible":true,"version":1.0,"parentId":"ilepmp3eiu","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","maxDynamicHeight":9000.0,"minDynamicHeight":4.0},{"boxShadow":"none","isVisibleDownload":false,"iconSVG":"/static/media/icon.db8a9cbd.svg","topRow":6.0,"isSortable":true,"type":"TABLE_WIDGET","animateLoading":false,"dynamicBindingPathList":[{"key":"tableData"},{"key":"accentColor"},{"key":"primaryColumns.EstimateNumber.computedValue"},{"key":"primaryColumns.SalesNumber.computedValue"},{"key":"primaryColumns.EstimateId.computedValue"},{"key":"primaryColumns.SalesDescription.computedValue"},{"key":"primaryColumns.Taxable.computedValue"},{"key":"primaryColumns.POId.computedValue"}],"leftColumn":0.0,"delimiter":",","accentColor":"{{appsmith.theme.colors.primaryColor}}","isVisibleFilters":false,"isVisible":true,"enableClientSideSearch":false,"version":3.0,"totalRecordsCount":0.0,"isLoading":false,"childStylesheet":{"button":{"buttonColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"menuButton":{"menuColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"iconButton":{"menuColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"}},"borderRadius":"0px","columnSizeMap":{"task":245.0,"step":62.0,"status":75.0,"sales_":83.0,"Client":66.0,"Description":712.375,"Number":94.0,"customColumn1":142.0,"EstimateId":112.0,"EstimateNumber":100.0,"SalesNumber":93.0,"Taxable":99.0,"SalesDescription":393.0},"widgetName":"Estimate_PO_Table","defaultPageSize":0.0,"columnOrder":["EstimateId","EstimateNumber","SalesNumber","POId","SalesDescription","Taxable"],"dynamicPropertyPathList":[{"key":"onRowSelected"}],"displayName":"Table","bottomRow":54.0,"parentRowSpace":10.0,"defaultSelectedRow":"-1","hideCard":false,"parentColumnSpace":14.4375,"dynamicTriggerPathList":[{"key":"onRowSelected"}],"primaryColumns":{"EstimateNumber":{"index":1.0,"width":150.0,"id":"EstimateNumber","horizontalAlignment":"LEFT","verticalAlignment":"CENTER","columnType":"text","textColor":"","textSize":"0.875rem","enableFilter":true,"enableSort":true,"isVisible":true,"isDisabled":false,"isCellVisible":true,"isDerived":false,"label":"Estimate#","computedValue":"{{Estimate_PO_Table.sanitizedTableData.map((currentRow) => ( currentRow.EstimateNumber))}}","cellBackground":""},"SalesNumber":{"index":2.0,"width":150.0,"id":"SalesNumber","horizontalAlignment":"LEFT","verticalAlignment":"CENTER","columnType":"text","textColor":"","textSize":"0.875rem","enableFilter":true,"enableSort":true,"isVisible":true,"isDisabled":false,"isCellVisible":true,"isDerived":false,"label":"Sales#","computedValue":"{{Estimate_PO_Table.sanitizedTableData.map((currentRow) => ( currentRow.SalesNumber))}}","cellBackground":""},"EstimateId":{"index":2.0,"width":150.0,"id":"EstimateId","horizontalAlignment":"LEFT","verticalAlignment":"CENTER","columnType":"text","textSize":"0.875rem","enableFilter":true,"enableSort":true,"isVisible":false,"isDisabled":false,"isCellVisible":true,"isDerived":false,"label":"EstimateId","computedValue":"{{Estimate_PO_Table.sanitizedTableData.map((currentRow) => ( currentRow.EstimateId))}}"},"SalesDescription":{"index":3.0,"width":150.0,"id":"SalesDescription","horizontalAlignment":"LEFT","verticalAlignment":"CENTER","columnType":"text","textSize":"0.875rem","enableFilter":true,"enableSort":true,"isVisible":true,"isDisabled":false,"isCellVisible":true,"isDerived":false,"label":"Sales Description","computedValue":"{{Estimate_PO_Table.sanitizedTableData.map((currentRow) => ( currentRow.SalesDescription))}}"},"Taxable":{"index":4.0,"width":150.0,"id":"Taxable","horizontalAlignment":"LEFT","verticalAlignment":"CENTER","columnType":"text","textSize":"0.875rem","enableFilter":true,"enableSort":true,"isVisible":true,"isDisabled":false,"isCellVisible":true,"isDerived":false,"label":"Taxable","computedValue":"{{Estimate_PO_Table.sanitizedTableData.map((currentRow) => ( currentRow.Taxable))}}"},"POId":{"index":3.0,"width":150.0,"id":"POId","horizontalAlignment":"LEFT","verticalAlignment":"CENTER","columnType":"text","textColor":"","textSize":"0.875rem","enableFilter":true,"enableSort":true,"isVisible":false,"isDisabled":false,"isCellVisible":true,"isDerived":false,"label":"POId","computedValue":"{{Estimate_PO_Table.sanitizedTableData.map((currentRow) => ( currentRow.POId))}}","cellBackground":""}},"onRowSelected":"{{Estimates_POItems_Select.run({'EId':Estimate_PO_Table.selectedRow.EstimateId});PO_Details_Select.run();FileUpload_Check.run({'POId':Estimate_PO_Table.selectedRow.POId})}}","key":"r65rbl7l5u","derivedColumns":{},"labelTextSize":"0.875rem","rightColumn":34.0,"textSize":"0.875rem","widgetId":"p0r23vkzza","tableData":"{{Estimate_Select.data}}","label":"Data","searchKey":"","parentId":"ilepmp3eiu","renderMode":"CANVAS","horizontalAlignment":"LEFT","isVisibleSearch":true,"isVisiblePagination":true,"verticalAlignment":"CENTER"}],"isDisabled":false,"key":"ck656xey1j","labelTextSize":"0.875rem","tabName":"PO Details","rightColumn":361.5,"detachFromLayout":true,"widgetId":"ilepmp3eiu","isVisible":true,"version":1.0,"parentId":"2sohwf308y","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px"},{"tabId":"tab2","boxShadow":"none","widgetName":"Canvas2","displayName":"Canvas","topRow":0.0,"bottomRow":570.0,"parentRowSpace":1.0,"type":"CANVAS_WIDGET","canExtend":true,"hideCard":true,"shouldScrollContents":false,"minHeight":400.0,"parentColumnSpace":1.0,"dynamicTriggerPathList":[],"leftColumn":0.0,"dynamicBindingPathList":[],"children":[{"boxShadow":"0px 0px 2px 1.5px rgba(0, 0, 0, 0.25)","mobileBottomRow":4.0,"widgetName":"PopUp_Button","onClick":"{{storeValue('progressstatus','0');showModal('FileUpload_Modal');EPOAttachments_Select.run({\"POId\":PO_Table.selectedRow.Id});storeValue('ActualFileName','');storeValue('POId',PO_Table.selectedRow.Id);storeValue('statename','FileCheck');storeValue('progressstatus',0);}}","buttonColor":"{{appsmith.theme.colors.primaryColor}}","dynamicPropertyPathList":[{"key":"isDisabled"},{"key":"onClick"},{"key":"boxShadow"},{"key":"isVisible"}],"displayName":"Icon button","iconSVG":"/static/media/icon.80fc7466c0d7181ec0271de7fda795ec.svg","searchTags":["click","submit"],"topRow":0.0,"bottomRow":4.0,"tooltip":"Upload Estimate Files","parentRowSpace":10.0,"type":"ICON_BUTTON_WIDGET","hideCard":false,"mobileRightColumn":62.0,"animateLoading":false,"parentColumnSpace":17.625,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":61.0,"dynamicBindingPathList":[{"key":"buttonColor"},{"key":"isDisabled"},{"key":"isVisible"}],"isDisabled":"{{PO_Table.selectedRowIndex==-1}}","key":"dhazzocl7v","isDeprecated":false,"rightColumn":64.0,"iconName":"cloud-upload","widgetId":"10ymql1gow","minWidth":50.0,"isVisible":"{{appsmith.store.currentStateName=='EnterPO'||appsmith.store.currentStateName=='Completed'}}","version":1.0,"parentId":"84vmmikvyv","renderMode":"CANVAS","isLoading":false,"mobileTopRow":0.0,"responsiveBehavior":"hug","borderRadius":"0.375rem","mobileLeftColumn":58.0,"buttonVariant":"SECONDARY"},{"boxShadow":"none","widgetName":"Text4Copy","borderColor":"","dynamicPropertyPathList":[{"key":"textColor"},{"key":"fontSize"}],"displayName":"Text","iconSVG":"/static/media/icon.97c59b52.svg","topRow":0.0,"bottomRow":4.0,"parentRowSpace":10.0,"type":"TEXT_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":14.75,"dynamicTriggerPathList":[],"overflow":"NONE","fontFamily":"System Default","leftColumn":0.0,"dynamicBindingPathList":[{"key":"textColor"},{"key":"text"}],"borderWidth":"5","truncateButtonColor":"#FFC13D","text":"Estimate in {{ Process.getInitialState() }} state","key":"0l7d6pdzs3","labelTextSize":"0.875rem","rightColumn":20.0,"textAlign":"LEFT","dynamicHeight":"FIXED","widgetId":"w72rzls4oj","isVisible":true,"fontStyle":"ITALIC,BOLD","textColor":"{{ GlobalVariables.LabelColor }}","version":1.0,"parentId":"84vmmikvyv","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","maxDynamicHeight":9000.0,"fontSize":"1.125rem","minDynamicHeight":4.0},{"boxShadow":"none","widgetName":"PO_Item_Container","borderColor":"transparent","isCanvas":true,"dynamicPropertyPathList":[{"key":"borderRadius"}],"displayName":"Container","iconSVG":"/static/media/icon.1977dca3.svg","topRow":37.0,"bottomRow":55.0,"parentRowSpace":10.0,"type":"CONTAINER_WIDGET","hideCard":false,"shouldScrollContents":false,"animateLoading":true,"parentColumnSpace":16.125,"dynamicTriggerPathList":[],"leftColumn":21.0,"dynamicBindingPathList":[],"children":[{"boxShadow":"none","widgetName":"Canvas10","displayName":"Canvas","topRow":0.0,"bottomRow":180.0,"parentRowSpace":1.0,"type":"CANVAS_WIDGET","canExtend":false,"hideCard":true,"minHeight":400.0,"parentColumnSpace":1.0,"leftColumn":0.0,"children":[{"boxShadow":"none","widgetName":"POItem_SaleTax_Input","dynamicPropertyPathList":[{"key":"isDisabled"}],"displayName":"Input","iconSVG":"/static/media/icon.9f505595.svg","topRow":1.0,"bottomRow":8.0,"parentRowSpace":10.0,"autoFocus":false,"type":"INPUT_WIDGET_V2","hideCard":false,"animateLoading":false,"parentColumnSpace":16.125,"dynamicTriggerPathList":[],"resetOnSubmit":true,"leftColumn":43.0,"dynamicBindingPathList":[{"key":"validation"},{"key":"defaultText"},{"key":"accentColor"},{"key":"isDisabled"}],"labelStyle":"","labelTextColor":"#008695","inputType":"TEXT","maxChars":"10","isDisabled":"{{PO_Table.selectedRow.Taxable==false}}","key":"z664xfowd2","validation":"{{POItem_SaleTax_Input.text.length>0}}","labelTextSize":"0.875rem","isRequired":true,"rightColumn":63.0,"dynamicHeight":"FIXED","widgetId":"n2slwgjd5l","accentColor":"{{appsmith.theme.colors.primaryColor}}","isVisible":true,"label":"Sales Tax","version":2.0,"parentId":"n7l4yn62tq","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","maxDynamicHeight":9000.0,"iconAlign":"left","defaultText":"{{PO_Item_Table.selectedRowIndex == -1 ? 0 :PO_Item_Table.selectedRow.SalesTax}}","minDynamicHeight":4.0},{"boxShadow":"none","widgetName":"POItem_Number_Input","displayName":"Input","iconSVG":"/static/media/icon.9f505595.svg","topRow":1.0,"bottomRow":8.0,"parentRowSpace":10.0,"autoFocus":false,"type":"INPUT_WIDGET_V2","hideCard":false,"animateLoading":false,"parentColumnSpace":16.125,"dynamicTriggerPathList":[],"resetOnSubmit":true,"leftColumn":0.0,"dynamicBindingPathList":[{"key":"validation"},{"key":"defaultText"},{"key":"accentColor"}],"labelStyle":"","labelTextColor":"#008695","inputType":"TEXT","maxChars":"10","isDisabled":false,"key":"z664xfowd2","validation":"{{POItem_Number_Input.text.length>0}}","labelTextSize":"0.875rem","isRequired":true,"rightColumn":20.0,"dynamicHeight":"FIXED","widgetId":"6y95tht36c","accentColor":"{{appsmith.theme.colors.primaryColor}}","isVisible":true,"label":"PO Item #","version":2.0,"parentId":"n7l4yn62tq","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","maxDynamicHeight":9000.0,"iconAlign":"left","defaultText":"{{PO_Item_Table.selectedRowIndex == -1 ? \"\" : PO_Item_Table.selectedRow.Number}}","minDynamicHeight":4.0},{"boxShadow":"none","widgetName":"POItem_Description_Input","displayName":"Input","iconSVG":"/static/media/icon.9f505595.svg","topRow":8.0,"bottomRow":16.0,"parentRowSpace":10.0,"autoFocus":false,"type":"INPUT_WIDGET_V2","hideCard":false,"animateLoading":false,"parentColumnSpace":16.125,"dynamicTriggerPathList":[],"resetOnSubmit":true,"leftColumn":0.0,"dynamicBindingPathList":[{"key":"defaultText"},{"key":"validation"},{"key":"accentColor"}],"labelStyle":"","labelTextColor":"#008695","inputType":"MULTI_LINE_TEXT","isDisabled":false,"key":"z664xfowd2","validation":"{{POItem_Description_Input.text.length > 0}}","labelTextSize":"0.875rem","isRequired":true,"rightColumn":41.0,"dynamicHeight":"FIXED","widgetId":"6156vuvfwn","accentColor":"{{appsmith.theme.colors.primaryColor}}","isVisible":true,"label":"Description","version":2.0,"parentId":"n7l4yn62tq","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","maxDynamicHeight":9000.0,"iconAlign":"left","defaultText":"{{PO_Item_Table.selectedRowIndex == -1 ? \"\" :PO_Item_Table.selectedRow.Description}}","minDynamicHeight":4.0},{"boxShadow":"none","widgetName":"POItem_Quantity_Input","displayName":"Input","iconSVG":"/static/media/icon.9f505595.svg","topRow":1.0,"bottomRow":8.0,"parentRowSpace":10.0,"autoFocus":false,"type":"INPUT_WIDGET_V2","hideCard":false,"animateLoading":false,"parentColumnSpace":16.125,"dynamicTriggerPathList":[],"resetOnSubmit":true,"leftColumn":23.0,"dynamicBindingPathList":[{"key":"validation"},{"key":"defaultText"},{"key":"accentColor"}],"labelStyle":"","labelTextColor":"#008695","inputType":"TEXT","isDisabled":false,"key":"z664xfowd2","validation":"{{POItem_Quantity_Input.text.length>0 && parseFloat(POItem_Quantity_Input.text) >=0}}","labelTextSize":"0.875rem","isRequired":true,"rightColumn":41.0,"dynamicHeight":"FIXED","widgetId":"oz2xzclo5d","accentColor":"{{appsmith.theme.colors.primaryColor}}","isVisible":true,"label":"Quantity","version":2.0,"parentId":"n7l4yn62tq","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","maxDynamicHeight":9000.0,"iconAlign":"left","defaultText":"{{PO_Item_Table.selectedRowIndex == -1 ? \"\" :PO_Item_Table.selectedRow.Quantity}}","minDynamicHeight":4.0},{"boxShadow":"none","widgetName":"POItem_Amount_Input","displayName":"Input","iconSVG":"/static/media/icon.9f505595.svg","topRow":8.0,"bottomRow":16.0,"parentRowSpace":10.0,"autoFocus":false,"type":"INPUT_WIDGET_V2","hideCard":false,"animateLoading":false,"parentColumnSpace":16.125,"dynamicTriggerPathList":[],"resetOnSubmit":true,"leftColumn":43.0,"dynamicBindingPathList":[{"key":"validation"},{"key":"defaultText"},{"key":"accentColor"}],"labelStyle":"","labelTextColor":"#008695","inputType":"MULTI_LINE_TEXT","isDisabled":false,"key":"z664xfowd2","validation":"{{POItem_Amount_Input.text.length>0 && parseFloat(POItem_Amount_Input.text) >= 0}}","labelTextSize":"0.875rem","isRequired":true,"rightColumn":63.0,"dynamicHeight":"FIXED","widgetId":"8cpcjnp55e","accentColor":"{{appsmith.theme.colors.primaryColor}}","isVisible":true,"label":"Amount","version":2.0,"parentId":"n7l4yn62tq","renderMode":"CANVAS","isLoading":false,"regex":"","borderRadius":"0px","maxDynamicHeight":9000.0,"iconAlign":"left","defaultText":"{{PO_Item_Table.selectedRowIndex == -1 ? \"\" :PO_Item_Table.selectedRow.Amount}}","minDynamicHeight":4.0}],"key":"pbcqjqrggx","labelTextSize":"0.875rem","rightColumn":387.0,"detachFromLayout":true,"widgetId":"n7l4yn62tq","containerStyle":"none","isVisible":true,"version":1.0,"parentId":"npsbqbw9pm","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px"}],"borderWidth":"0","key":"hfhwafj66g","labelTextSize":"0.875rem","backgroundColor":"#FFFFFF","rightColumn":64.0,"dynamicHeight":"FIXED","widgetId":"npsbqbw9pm","containerStyle":"card","isVisible":true,"version":1.0,"parentId":"84vmmikvyv","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","maxDynamicHeight":9000.0,"minDynamicHeight":4.0},{"boxShadow":"none","widgetName":"POItem_Buttons_Container","borderColor":"transparent","isCanvas":true,"dynamicPropertyPathList":[{"key":"borderRadius"}],"displayName":"Container","iconSVG":"/static/media/icon.1977dca3.svg","topRow":31.0,"bottomRow":37.0,"parentRowSpace":10.0,"type":"CONTAINER_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":13.5732421875,"dynamicTriggerPathList":[],"leftColumn":44.0,"dynamicBindingPathList":[],"children":[{"boxShadow":"none","widgetName":"SalesDetails_Buttons_CanvasCopyCopy","displayName":"Canvas","topRow":0.0,"bottomRow":60.0,"parentRowSpace":1.0,"type":"CANVAS_WIDGET","canExtend":false,"hideCard":true,"minHeight":400.0,"parentColumnSpace":1.0,"leftColumn":0.0,"dynamicBindingPathList":[],"children":[{"boxShadow":"0px 0px 4px 3px rgba(0, 0, 0, 0.25)","widgetName":"POItem_Reset_Button","onClick":"{{ GlobalVariables.resetForm([\"PO_Item_Table\",\"PO_Item_Container\",\"PO_Table\"]) }}","buttonColor":"#008695","dynamicPropertyPathList":[{"key":"onClick"},{"key":"boxShadow"}],"displayName":"Icon Button","iconSVG":"/static/media/icon.1a0c634a.svg","topRow":0.0,"bottomRow":4.0,"parentRowSpace":10.0,"type":"ICON_BUTTON_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":15.0625,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":29.0,"dynamicBindingPathList":[],"isDisabled":false,"key":"x5byygbcp7","labelTextSize":"0.875rem","rightColumn":36.0,"iconName":"reset","widgetId":"5agntcp0dr","isVisible":true,"version":1.0,"parentId":"q1zquc82b5","renderMode":"CANVAS","isLoading":false,"borderRadius":"0.375rem","buttonVariant":"TERTIARY"},{"boxShadow":"0px 0px 4px 3px rgba(0, 0, 0, 0.25)","widgetName":"POItem_Create_Button","onClick":"{{PageObjects.insertPOItem(PO_Table.selectedRow.Id,POItem_Number_Input.text,POItem_Description_Input.text,POItem_Quantity_Input.text,POItem_Amount_Input.text,POItem_SaleTax_Input.text)}}","buttonColor":"#008695","dynamicPropertyPathList":[{"key":"isDisabled"},{"key":"onClick"},{"key":"boxShadow"}],"displayName":"Icon Button","iconSVG":"/static/media/icon.1a0c634a.svg","topRow":0.0,"bottomRow":4.0,"parentRowSpace":10.0,"type":"ICON_BUTTON_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":5.3359375,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":38.0,"dynamicBindingPathList":[{"key":"isDisabled"}],"isDisabled":"{{ PageObjects.DisablePOItemDetailsInsertButton()}}","key":"wqh17u5h8b","labelTextSize":"0.875rem","rightColumn":45.0,"iconName":"plus","widgetId":"tjt6vsfkl0","isVisible":true,"version":1.0,"parentId":"q1zquc82b5","renderMode":"CANVAS","isLoading":false,"borderRadius":"0.375rem","buttonVariant":"TERTIARY"},{"boxShadow":"0px 0px 4px 3px rgba(0, 0, 0, 0.25)","widgetName":"POItem_Update_Button","onClick":"{{PageObjects.updatePOItem(POItem_Number_Input.text,POItem_Description_Input.text,POItem_Quantity_Input.text,POItem_Amount_Input.text,POItem_SaleTax_Input.text,PO_Item_Table.selectedRow.Id)}}","buttonColor":"#008695","dynamicPropertyPathList":[{"key":"isDisabled"},{"key":"onClick"},{"key":"boxShadow"}],"displayName":"Icon Button","iconSVG":"/static/media/icon.1a0c634a.svg","topRow":0.0,"bottomRow":4.0,"parentRowSpace":10.0,"type":"ICON_BUTTON_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":5.3359375,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":48.0,"dynamicBindingPathList":[{"key":"isDisabled"}],"isDisabled":"{{PO_Item_Table.selectedRowIndex == -1 || appsmith.store.currentStateName == 'Completed' ||GlobalVariables.disableCreateButton([POItem_Number_Input,POItem_Description_Input,POItem_Quantity_Input,POItem_Amount_Input,POItem_SaleTax_Input])}}","key":"wqh17u5h8b","labelTextSize":"0.875rem","rightColumn":53.0,"iconName":"edit","widgetId":"aaftc8zkpf","isVisible":true,"version":1.0,"parentId":"q1zquc82b5","renderMode":"CANVAS","isLoading":false,"borderRadius":"0.375rem","buttonVariant":"TERTIARY"},{"boxShadow":"0px 0px 4px 3px rgba(0, 0, 0, 0.25)","widgetName":"POItem_Delete_Button","onClick":"{{PageObjects.deletePOItem(PO_Item_Table.selectedRow.Id)}}","buttonColor":"#008695","dynamicPropertyPathList":[{"key":"isDisabled"},{"key":"onClick"},{"key":"boxShadow"}],"displayName":"Icon Button","iconSVG":"/static/media/icon.1a0c634a.svg","topRow":0.0,"bottomRow":4.0,"parentRowSpace":10.0,"type":"ICON_BUTTON_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":5.3359375,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":56.0,"dynamicBindingPathList":[{"key":"isDisabled"}],"isDisabled":"{{appsmith.store.currentStateName == 'Completed'||  PO_Item_Table.selectedRowIndex === -1 }}","key":"wqh17u5h8b","labelTextSize":"0.875rem","rightColumn":63.0,"iconName":"trash","widgetId":"h7buwd4oqc","isVisible":true,"version":1.0,"parentId":"q1zquc82b5","renderMode":"CANVAS","isLoading":false,"borderRadius":"0.375rem","buttonVariant":"TERTIARY"}],"key":"62kn4szsbb","labelTextSize":"0.875rem","rightColumn":325.7578125,"detachFromLayout":true,"widgetId":"q1zquc82b5","containerStyle":"none","isVisible":true,"version":1.0,"parentId":"kdl7qgrwco","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px"}],"borderWidth":"0","key":"zkrysm8hzk","labelTextSize":"0.875rem","backgroundColor":"#FFFFFF","rightColumn":64.0,"dynamicHeight":"FIXED","widgetId":"kdl7qgrwco","containerStyle":"card","isVisible":true,"version":1.0,"parentId":"84vmmikvyv","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","maxDynamicHeight":9000.0,"minDynamicHeight":4.0},{"boxShadow":"none","widgetName":"PO_Item_Table","defaultPageSize":0.0,"columnOrder":["Number","Description","Quantity","Amount","customColumn1","SalesTax","Id","PurchaseOrderId","Deleted"],"isVisibleDownload":false,"dynamicPropertyPathList":[],"displayName":"Table","iconSVG":"/static/media/icon.db8a9cbd.svg","topRow":4.0,"bottomRow":31.0,"isSortable":true,"parentRowSpace":10.0,"type":"TABLE_WIDGET","defaultSelectedRow":"-1","hideCard":false,"animateLoading":false,"parentColumnSpace":14.4375,"dynamicTriggerPathList":[],"dynamicBindingPathList":[{"key":"primaryColumns.Description.computedValue"},{"key":"primaryColumns.Number.computedValue"},{"key":"primaryColumns.Quantity.computedValue"},{"key":"primaryColumns.Amount.computedValue"},{"key":"primaryColumns.Id.computedValue"},{"key":"primaryColumns.PurchaseOrderId.computedValue"},{"key":"primaryColumns.Deleted.computedValue"},{"key":"tableData"},{"key":"primaryColumns.SalesTax.computedValue"},{"key":"derivedColumns.customColumn1.computedValue"},{"key":"primaryColumns.customColumn1.computedValue"},{"key":"accentColor"}],"leftColumn":21.0,"primaryColumns":{"Description":{"index":3.0,"width":150.0,"id":"Description","horizontalAlignment":"LEFT","verticalAlignment":"CENTER","columnType":"text","textSize":"0.875rem","enableFilter":true,"enableSort":true,"isVisible":true,"isDisabled":false,"isCellVisible":true,"isDerived":false,"label":"Description","computedValue":"{{PO_Item_Table.sanitizedTableData.map((currentRow) => ( currentRow.Description))}}","borderRadius":"0px","boxShadow":"none"},"Number":{"index":1.0,"width":150.0,"id":"Number","horizontalAlignment":"LEFT","verticalAlignment":"CENTER","columnType":"text","textSize":"0.875rem","enableFilter":true,"enableSort":true,"isVisible":true,"isDisabled":false,"isCellVisible":true,"isDerived":false,"label":"PO Item#","computedValue":"{{PO_Item_Table.sanitizedTableData.map((currentRow) => ( currentRow.Number))}}","borderRadius":"0px","boxShadow":"none"},"Quantity":{"index":2.0,"width":150.0,"id":"Quantity","horizontalAlignment":"LEFT","verticalAlignment":"CENTER","columnType":"text","textSize":"0.875rem","enableFilter":true,"enableSort":true,"isVisible":true,"isDisabled":false,"isCellVisible":true,"isDerived":false,"label":"Quantity","computedValue":"{{PO_Item_Table.sanitizedTableData.map((currentRow) => ( currentRow.Quantity))}}","borderRadius":"0px","boxShadow":"none"},"Amount":{"index":3.0,"width":150.0,"id":"Amount","horizontalAlignment":"LEFT","verticalAlignment":"CENTER","columnType":"text","textSize":"0.875rem","enableFilter":true,"enableSort":true,"isVisible":true,"isDisabled":false,"isCellVisible":true,"isDerived":false,"label":"Amount","computedValue":"{{PO_Item_Table.sanitizedTableData.map((currentRow) => ( currentRow.Amount))}}","borderRadius":"0px","boxShadow":"none"},"Id":{"index":0.0,"width":150.0,"id":"Id","horizontalAlignment":"LEFT","verticalAlignment":"CENTER","columnType":"text","textSize":"0.875rem","enableFilter":true,"enableSort":true,"isVisible":false,"isDisabled":false,"isCellVisible":true,"isDerived":false,"label":"Id","computedValue":"{{PO_Item_Table.sanitizedTableData.map((currentRow) => ( currentRow.Id))}}","borderRadius":"0px","boxShadow":"none"},"PurchaseOrderId":{"index":1.0,"width":150.0,"id":"PurchaseOrderId","horizontalAlignment":"LEFT","verticalAlignment":"CENTER","columnType":"text","textSize":"0.875rem","enableFilter":true,"enableSort":true,"isVisible":false,"isDisabled":false,"isCellVisible":true,"isDerived":false,"label":"PurchaseOrderId","computedValue":"{{PO_Item_Table.sanitizedTableData.map((currentRow) => ( currentRow.PurchaseOrderId))}}","borderRadius":"0px","boxShadow":"none"},"Deleted":{"index":6.0,"width":150.0,"id":"Deleted","horizontalAlignment":"LEFT","verticalAlignment":"CENTER","columnType":"text","textSize":"0.875rem","enableFilter":true,"enableSort":true,"isVisible":false,"isDisabled":false,"isCellVisible":true,"isDerived":false,"label":"Deleted","computedValue":"{{PO_Item_Table.sanitizedTableData.map((currentRow) => ( currentRow.Deleted))}}","borderRadius":"0px","boxShadow":"none"},"SalesTax":{"index":4.0,"width":150.0,"id":"SalesTax","horizontalAlignment":"LEFT","verticalAlignment":"CENTER","columnType":"text","textSize":"0.875rem","enableFilter":true,"enableSort":true,"isVisible":true,"isDisabled":false,"isCellVisible":true,"isDerived":false,"label":"SalesTax","computedValue":"{{PO_Item_Table.sanitizedTableData.map((currentRow) => ( currentRow.SalesTax))}}","borderRadius":"0px","boxShadow":"none"},"customColumn1":{"index":8.0,"width":150.0,"id":"customColumn1","columnType":"text","enableFilter":true,"enableSort":true,"isVisible":true,"isDisabled":false,"isCellVisible":true,"isDerived":true,"label":"Total","computedValue":"{{PO_Item_Table.sanitizedTableData.map((currentRow) => ( currentRow.Quantity * currentRow.Amount))}}","buttonStyle":"rgb(3, 179, 101)","buttonColor":"#03B365","menuColor":"#03B365","labelColor":"#FFFFFF","borderRadius":"0px","boxShadow":"none"}},"delimiter":",","key":"r65rbl7l5u","derivedColumns":{"customColumn1":{"index":8.0,"width":150.0,"id":"customColumn1","columnType":"text","enableFilter":true,"enableSort":true,"isVisible":true,"isDisabled":false,"isCellVisible":true,"isDerived":true,"label":"Total","computedValue":"{{PO_Item_Table.sanitizedTableData.map((currentRow) => ( currentRow.Quantity * currentRow.Amount))}}","buttonStyle":"rgb(3, 179, 101)","buttonColor":"#03B365","menuColor":"#03B365","labelColor":"#FFFFFF","borderRadius":"0px","boxShadow":"none"}},"labelTextSize":"0.875rem","rightColumn":64.0,"textSize":"0.875rem","widgetId":"0npduldf5h","accentColor":"{{appsmith.theme.colors.primaryColor}}","isVisibleFilters":false,"tableData":"{{PO_Table.selectedRowIndex ==-1?[]:PO_Item_Select.data}}","isVisible":true,"label":"Data","searchKey":"","enableClientSideSearch":false,"version":3.0,"totalRecordsCount":0.0,"parentId":"84vmmikvyv","renderMode":"CANVAS","isLoading":false,"horizontalAlignment":"LEFT","isVisibleSearch":true,"childStylesheet":{"button":{"buttonColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"menuButton":{"menuColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"iconButton":{"menuColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"}},"borderRadius":"0px","isVisiblePagination":true,"verticalAlignment":"CENTER","columnSizeMap":{"task":245.0,"step":62.0,"status":75.0,"Number":102.0,"Quantity":88.0,"Description":155.0,"Amount":94.0,"customColumn1":105.99999999999999,"SalesTax":123.0}},{"boxShadow":"none","isVisibleDownload":false,"iconSVG":"/static/media/icon.db8a9cbd.svg","topRow":4.0,"isSortable":true,"type":"TABLE_WIDGET","animateLoading":false,"dynamicBindingPathList":[{"key":"primaryColumns.Description.computedValue"},{"key":"tableData"},{"key":"primaryColumns.Id.computedValue"},{"key":"primaryColumns.PurchaseOrderNumber.computedValue"},{"key":"primaryColumns.EstimateNumber.computedValue"},{"key":"accentColor"},{"key":"primaryColumns.Taxable.computedValue"},{"key":"primaryColumns.EstId.computedValue"},{"key":"primaryColumns.SalesNumber.computedValue"},{"key":"primaryColumns.FileId.computedValue"}],"leftColumn":0.0,"delimiter":",","accentColor":"{{appsmith.theme.colors.primaryColor}}","isVisibleFilters":false,"isVisible":true,"enableClientSideSearch":false,"version":3.0,"totalRecordsCount":0.0,"isLoading":false,"childStylesheet":{"button":{"buttonColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"menuButton":{"menuColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"iconButton":{"menuColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"}},"borderRadius":"0px","columnSizeMap":{"task":245.0,"step":62.0,"status":75.0,"PO_":68.0,"Number":106.0,"PurchaseOrderNumber":164.0,"Description":196.0,"EstimateNumber":131.0,"Taxable":99.0,"SalesNumber":108.0},"widgetName":"PO_Table","defaultPageSize":0.0,"columnOrder":["Id","PurchaseOrderNumber","SalesNumber","Description","EstimateNumber","FileId","EstId","Taxable"],"dynamicPropertyPathList":[{"key":"onRowSelected"}],"displayName":"Table","bottomRow":55.0,"parentRowSpace":10.0,"defaultSelectedRow":"-1","hideCard":false,"parentColumnSpace":14.4375,"dynamicTriggerPathList":[{"key":"onRowSelected"}],"primaryColumns":{"Description":{"index":3.0,"width":150.0,"id":"Description","horizontalAlignment":"LEFT","verticalAlignment":"CENTER","columnType":"text","textSize":"0.875rem","enableFilter":true,"enableSort":true,"isVisible":true,"isDisabled":false,"isCellVisible":true,"isDerived":false,"label":"Description","computedValue":"{{PO_Table.sanitizedTableData.map((currentRow) => ( currentRow.Description))}}","borderRadius":"0px","boxShadow":"none"},"Id":{"index":0.0,"width":150.0,"id":"Id","horizontalAlignment":"LEFT","verticalAlignment":"CENTER","columnType":"text","textSize":"0.875rem","enableFilter":true,"enableSort":true,"isVisible":false,"isDisabled":false,"isCellVisible":true,"isDerived":false,"label":"Id","computedValue":"{{PO_Table.sanitizedTableData.map((currentRow) => ( currentRow.Id))}}","borderRadius":"0px","boxShadow":"none"},"PurchaseOrderNumber":{"index":1.0,"width":150.0,"id":"PurchaseOrderNumber","horizontalAlignment":"LEFT","verticalAlignment":"CENTER","columnType":"text","textSize":"0.875rem","enableFilter":true,"enableSort":true,"isVisible":true,"isDisabled":false,"isCellVisible":true,"isDerived":false,"label":"PO#","computedValue":"{{PO_Table.sanitizedTableData.map((currentRow) => ( currentRow.PurchaseOrderNumber))}}","borderRadius":"0px","boxShadow":"none"},"EstimateNumber":{"index":3.0,"width":150.0,"id":"EstimateNumber","horizontalAlignment":"LEFT","verticalAlignment":"CENTER","columnType":"text","textSize":"0.875rem","enableFilter":true,"enableSort":true,"isVisible":true,"isDisabled":false,"isCellVisible":true,"isDerived":false,"label":"Estimate#","computedValue":"{{PO_Table.sanitizedTableData.map((currentRow) => ( currentRow.EstimateNumber))}}","borderRadius":"0px","boxShadow":"none"},"Taxable":{"index":3.0,"width":150.0,"id":"Taxable","horizontalAlignment":"LEFT","verticalAlignment":"CENTER","columnType":"text","textColor":"","textSize":"0.875rem","enableFilter":true,"enableSort":true,"isVisible":true,"isDisabled":false,"isCellVisible":true,"isDerived":false,"label":"Taxable","computedValue":"{{PO_Table.sanitizedTableData.map((currentRow) => ( currentRow.Taxable))}}","cellBackground":""},"EstId":{"index":5.0,"width":150.0,"id":"EstId","horizontalAlignment":"LEFT","verticalAlignment":"CENTER","columnType":"text","textColor":"","textSize":"0.875rem","enableFilter":true,"enableSort":true,"isVisible":false,"isDisabled":false,"isCellVisible":true,"isDerived":false,"label":"EstId","computedValue":"{{PO_Table.sanitizedTableData.map((currentRow) => ( currentRow.EstId))}}","cellBackground":""},"SalesNumber":{"index":5.0,"width":150.0,"id":"SalesNumber","horizontalAlignment":"LEFT","verticalAlignment":"CENTER","columnType":"text","textColor":"","textSize":"0.875rem","enableFilter":true,"enableSort":true,"isVisible":true,"isDisabled":false,"isCellVisible":true,"isDerived":false,"label":"Sales#","computedValue":"{{PO_Table.sanitizedTableData.map((currentRow) => ( currentRow.SalesNumber))}}","cellBackground":""},"FileId":{"index":7.0,"width":150.0,"id":"FileId","horizontalAlignment":"LEFT","verticalAlignment":"CENTER","columnType":"text","textColor":"","textSize":"0.875rem","enableFilter":true,"enableSort":true,"isVisible":true,"isDisabled":false,"isCellVisible":true,"isDerived":false,"label":"FileId","computedValue":"{{PO_Table.sanitizedTableData.map((currentRow) => ( currentRow.FileId))}}","cellBackground":""}},"onRowSelected":"{{FileUpload_Check.run({'POId':PO_Table.selectedRow.Id});PO_Item_Select.run({'purchaseOrderId':PO_Table.selectedRow.Id });Estimates_POItems_Select.run({'EId':PO_Table.selectedRow.EstId})}}","key":"r65rbl7l5u","derivedColumns":{},"labelTextSize":"0.875rem","rightColumn":21.0,"textSize":"0.875rem","widgetId":"w13jcbujcw","tableData":"{{PO_Select.data}}","label":"Data","searchKey":"","parentId":"84vmmikvyv","renderMode":"CANVAS","horizontalAlignment":"LEFT","isVisibleSearch":true,"isVisiblePagination":true,"verticalAlignment":"CENTER"},{"boxShadow":"none","iconSVG":"/static/media/icon.f2c34197dbcf03595098986de898928f.svg","topRow":0.0,"labelWidth":"7","type":"INPUT_WIDGET_V2","animateLoading":false,"resetOnSubmit":true,"leftColumn":45.0,"dynamicBindingPathList":[{"key":"accentColor"},{"key":"labelTextColor"},{"key":"defaultText"}],"labelStyle":"","inputType":"TEXT","isDisabled":false,"isRequired":false,"dynamicHeight":"FIXED","accentColor":"{{appsmith.theme.colors.primaryColor}}","showStepArrows":false,"isVisible":true,"version":2.0,"tags":["Suggested","Inputs"],"isLoading":false,"borderRadius":"0.375rem","mobileBottomRow":87.0,"widgetName":"Input1","displayName":"Input","searchTags":["form","text input","number","textarea"],"bottomRow":4.0,"parentRowSpace":10.0,"autoFocus":false,"hideCard":false,"mobileRightColumn":30.0,"parentColumnSpace":10.46875,"dynamicTriggerPathList":[],"labelPosition":"Left","labelTextColor":"{{appsmith.theme.colors.primaryColor}}","key":"n83jl9ifyo","labelTextSize":"0.875rem","isDeprecated":false,"rightColumn":59.0,"widgetId":"pfj1pkkh0w","minWidth":450.0,"label":"Total PO Amount","parentId":"84vmmikvyv","labelAlignment":"left","renderMode":"CANVAS","mobileTopRow":80.0,"responsiveBehavior":"fill","mobileLeftColumn":10.0,"maxDynamicHeight":9000.0,"iconAlign":"left","defaultText":"{{PO_Item_Table.filteredTableData.reduce((total, row) => total + (Number(row.Quantity || 0) * Number(row.Amount || 0)), 0) }}\n","minDynamicHeight":4.0}],"isDisabled":false,"key":"ck656xey1j","labelTextSize":"0.875rem","tabName":"PO Item Details","rightColumn":361.5,"detachFromLayout":true,"widgetId":"84vmmikvyv","isVisible":true,"version":1.0,"parentId":"2sohwf308y","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px"}],"key":"s4m69sgoxe","labelTextSize":"0.875rem","rightColumn":64.0,"dynamicHeight":"FIXED","widgetId":"2sohwf308y","accentColor":"{{appsmith.theme.colors.primaryColor}}","defaultTab":"PO Details","onTabSelected":"{{GlobalVariables.resetWidgets([\"Estimate_PO_Table\",\"PO_Table\"]);Estimates_POItems_Select.data =''}}","shouldShowTabs":true,"tabsObj":{"tab1":{"label":"PO Details","id":"tab1","widgetId":"ilepmp3eiu","isVisible":true,"index":0.0},"tab2":{"label":"PO Item Details","id":"tab2","widgetId":"84vmmikvyv","isVisible":true,"index":1.0}},"isVisible":true,"version":3.0,"parentId":"0","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","maxDynamicHeight":9000.0,"minDynamicHeight":4.0},{"boxShadow":"none","widgetName":"Container1","borderColor":"transparent","isCanvas":true,"dynamicPropertyPathList":[{"key":"borderRadius"}],"displayName":"Container","iconSVG":"/static/media/icon.1977dca3.svg","topRow":0.0,"bottomRow":13.0,"parentRowSpace":10.0,"type":"CONTAINER_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":11.40625,"dynamicTriggerPathList":[],"leftColumn":0.0,"dynamicBindingPathList":[],"children":[{"boxShadow":"none","widgetName":"Canvas19","displayName":"Canvas","topRow":0.0,"bottomRow":130.0,"parentRowSpace":1.0,"type":"CANVAS_WIDGET","canExtend":false,"hideCard":true,"minHeight":400.0,"parentColumnSpace":1.0,"leftColumn":0.0,"children":[{"boxShadow":"0px 0px 4px 3px rgba(0, 0, 0, 0.25)none","widgetName":"Admin_Button","onClick":"{{navigateTo('Estimate State', {})}}","buttonColor":"{{appsmith.theme.colors.primaryColor}}","dynamicPropertyPathList":[{"key":"boxShadow"},{"key":"isVisible"}],"displayName":"Icon Button","iconSVG":"/static/media/icon.1a0c634ac75f9fa6b6ae7a8df882a3ba.svg","searchTags":["click","submit"],"topRow":0.0,"bottomRow":4.0,"parentRowSpace":10.0,"type":"ICON_BUTTON_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":14.0625,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":60.0,"dynamicBindingPathList":[{"key":"buttonColor"},{"key":"isVisible"}],"isDisabled":false,"key":"l5y4kk0mpp","isDeprecated":false,"rightColumn":64.0,"iconName":"settings","widgetId":"eeze0hr1hw","isVisible":"{{GlobalVariables.disableCorporateAdminButton()}}","version":1.0,"parentId":"zw45dze77r","renderMode":"CANVAS","isLoading":false,"borderRadius":"0.375rem","buttonVariant":"TERTIARY"},{"boxShadow":"none","widgetName":"Completed_EnterPO","onClick":"{{Process.clickArrow(\"Completed_EnterPO\")}}","buttonColor":"#03B365","dynamicPropertyPathList":[{"key":"isDisabled"},{"key":"onClick"}],"displayName":"Button","iconSVG":"/static/media/icon.cca02633.svg","topRow":4.0,"bottomRow":8.0,"tooltip":"Select an Estimate to move","parentRowSpace":10.0,"type":"BUTTON_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":9.59375,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":27.0,"dynamicBindingPathList":[{"key":"isDisabled"}],"text":"","isDisabled":"{{Process.disableArrow('Completed') || Tabs1.selectedTab != 'PO Details' || Estimate_PO_Table.selectedRow.POitemsNO == 0 }}","key":"tf8gjfw89k","labelTextSize":"0.875rem","rightColumn":31.0,"isDefaultClickDisabled":true,"iconName":"arrow-left","widgetId":"2igdj8y0vx","isVisible":true,"version":1.0,"recaptchaType":"V3","parentId":"zw45dze77r","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","buttonVariant":"TERTIARY","iconAlign":"left","placement":"CENTER"},{"boxShadow":"none","widgetName":"EnterPO_Completed","onClick":"{{Process.clickArrow(\"EnterPO_Completed\")}}","buttonColor":"#03B365","dynamicPropertyPathList":[{"key":"isDisabled"},{"key":"onClick"}],"displayName":"Button","iconSVG":"/static/media/icon.cca02633.svg","topRow":0.0,"bottomRow":4.0,"tooltip":"Select an Estimate to move","parentRowSpace":10.0,"type":"BUTTON_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":9.59375,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":27.0,"dynamicBindingPathList":[{"key":"isDisabled"}],"text":"","isDisabled":"{{FileUpload_Check.data==''||(Estimates_POItems_Select.data.length!=''?((Tabs1.selectedTab=='PO Details' && Estimate_PO_Table.selectedRowIndex ==-1?true:false )||(Tabs1.selectedTab=='PO Item Details' && PO_Table.selectedRowIndex == -1?true:false)):true )||appsmith.store.currentStateName!='EnterPO'\n}}","key":"tf8gjfw89k","labelTextSize":"0.875rem","rightColumn":31.0,"isDefaultClickDisabled":true,"iconName":"arrow-right","widgetId":"pf2ibvjzqr","isVisible":true,"version":1.0,"recaptchaType":"V3","parentId":"zw45dze77r","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","buttonVariant":"TERTIARY","iconAlign":"left","placement":"CENTER"},{"boxShadow":"0px 0px 4px 3px rgba(0, 0, 0, 0.25)","widgetName":"Completed","onClick":"{{ Process.clickState('Completed', Estimate_Select) }}","buttonColor":"#008695","dynamicPropertyPathList":[{"key":"onClick"},{"key":"boxShadow"}],"displayName":"Button","iconSVG":"/static/media/icon.cca02633.svg","topRow":2.0,"bottomRow":7.0,"parentRowSpace":10.0,"type":"BUTTON_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":14.75,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":33.0,"dynamicBindingPathList":[],"text":"Completed","isDisabled":false,"key":"lf7byu5aeh","labelTextSize":"0.875rem","rightColumn":45.0,"isDefaultClickDisabled":true,"widgetId":"f6c1i46pji","isVisible":true,"recaptchaType":"V3","version":1.0,"parentId":"zw45dze77r","renderMode":"CANVAS","isLoading":false,"borderRadius":"0.375rem","buttonVariant":"SECONDARY","placement":"CENTER"},{"boxShadow":"0px 0px 4px 3px rgba(0, 0, 0, 0.25)","widgetName":"Prepare","onClick":"{{ Process.clickState('EnterPO', Estimate_Select) }}","buttonColor":"#008695","dynamicPropertyPathList":[{"key":"onClick"},{"key":"boxShadow"}],"displayName":"Button","iconSVG":"/static/media/icon.cca02633.svg","topRow":2.0,"bottomRow":7.0,"parentRowSpace":10.0,"type":"BUTTON_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":14.75,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":14.0,"dynamicBindingPathList":[],"text":"Enter PO","isDisabled":false,"key":"lf7byu5aeh","labelTextSize":"0.875rem","rightColumn":26.0,"isDefaultClickDisabled":true,"widgetId":"npwi6yzv23","isVisible":true,"recaptchaType":"V3","version":1.0,"parentId":"zw45dze77r","renderMode":"CANVAS","isLoading":false,"borderRadius":"0.375rem","buttonVariant":"SECONDARY","placement":"CENTER"}],"key":"l9tzu9lcjh","labelTextSize":"0.875rem","rightColumn":273.75,"detachFromLayout":true,"widgetId":"zw45dze77r","containerStyle":"none","isVisible":true,"version":1.0,"parentId":"cqtu3h2ly9","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px"}],"borderWidth":"0","key":"qenos2nsyf","labelTextSize":"0.875rem","backgroundColor":"#FFFFFF","rightColumn":64.0,"dynamicHeight":"FIXED","widgetId":"cqtu3h2ly9","containerStyle":"card","isVisible":true,"version":1.0,"parentId":"0","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","maxDynamicHeight":9000.0,"minDynamicHeight":4.0},{"mobileBottomRow":85.0,"widgetName":"Text7","displayName":"Text","iconSVG":"/static/media/icon.a47d6d5dbbb718c4dc4b2eb4f218c1b7.svg","searchTags":["typography","paragraph","label"],"topRow":81.0,"bottomRow":85.0,"parentRowSpace":10.0,"type":"TEXT_WIDGET","hideCard":false,"mobileRightColumn":40.0,"animateLoading":true,"overflow":"NONE","fontFamily":"{{appsmith.theme.fontFamily.appFont}}","parentColumnSpace":10.46875,"dynamicTriggerPathList":[],"leftColumn":24.0,"dynamicBindingPathList":[{"key":"truncateButtonColor"},{"key":"fontFamily"},{"key":"borderRadius"},{"key":"text"}],"shouldTruncate":false,"truncateButtonColor":"{{appsmith.theme.colors.primaryColor}}","text":" {{FileUpload_Check.data==''}}","key":"tpe7370m08","isDeprecated":false,"rightColumn":40.0,"textAlign":"LEFT","dynamicHeight":"AUTO_HEIGHT","widgetId":"gn3ag5i9wn","minWidth":450.0,"isVisible":true,"fontStyle":"BOLD","textColor":"#231F20","version":1.0,"parentId":"0","tags":["Suggested","Content"],"renderMode":"CANVAS","isLoading":false,"mobileTopRow":81.0,"responsiveBehavior":"fill","originalTopRow":81.0,"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","mobileLeftColumn":24.0,"maxDynamicHeight":9000.0,"originalBottomRow":85.0,"fontSize":"1rem","minDynamicHeight":4.0}]},"layoutOnLoadActions":[[{"id":"PO Entry_PO_Details_Select","name":"PO_Details_Select","confirmBeforeExecute":false,"pluginType":"DB","jsonPathKeys":[],"timeoutInMillisecond":10000.0}],[{"id":"PO Entry_EPOAttachments_Select","name":"EPOAttachments_Select","confirmBeforeExecute":false,"pluginType":"DB","jsonPathKeys":["this.params?.POId"],"timeoutInMillisecond":10000.0},{"id":"PO Entry_FileUpload_Check","name":"FileUpload_Check","confirmBeforeExecute":false,"pluginType":"DB","jsonPathKeys":["this.params?.POId"],"timeoutInMillisecond":10000.0}],[{"id":"PO Entry_Estimate_Select","name":"Estimate_Select","confirmBeforeExecute":false,"pluginType":"DB","jsonPathKeys":[" appsmith.store?.currentStateName || 'EnterPO' ","appsmith.store.FilterRole","appsmith.user.username.split('@')[0]"],"timeoutInMillisecond":10000.0},{"id":"PO Entry_Estimates_POItems_Select","name":"Estimates_POItems_Select","confirmBeforeExecute":false,"pluginType":"DB","jsonPathKeys":["this.params?.EId"],"timeoutInMillisecond":10000.0},{"id":"PO Entry_PageObjects.accessControl","name":"PageObjects.accessControl","collectionId":"PO Entry_PageObjects","confirmBeforeExecute":false,"pluginType":"JS","jsonPathKeys":["async () => {\n  await UserRoles_Select.run();\n  let role = '';\n  if (UserRoles_Select.data.find(row => row.Name === 'Sales Manager' || row.Name === 'Accounts Receivables')) {\n    console.log('111');\n    role = 'SalesManager';\n  } else if (UserRoles_Select.data.find(row => row.Name === 'Business Manager')) {\n    console.log('222');\n    role = 'BusinessManager';\n  }\n  await storeValue('FilterRole', role, false);\n  console.log('frole', appsmith.store.FilterRole);\n  await Estimate_Select.run();\n}"],"timeoutInMillisecond":10000.0}],[{"id":"PO Entry_PO_Select","name":"PO_Select","confirmBeforeExecute":false,"pluginType":"DB","jsonPathKeys":[" appsmith.store?.currentStateName || 'EnterPO' ","appsmith.store.FilterRole","appsmith.user.username.split('@')[0]"],"timeoutInMillisecond":10000.0}],[{"id":"PO Entry_CorporateAdmin_Select","name":"CorporateAdmin_Select","confirmBeforeExecute":false,"pluginType":"DB","jsonPathKeys":["\"'\"+PageObjects.roles_with_access.join(\"','\")+\"'\""],"timeoutInMillisecond":10000.0},{"id":"PO Entry_UserRoles_Select","name":"UserRoles_Select","confirmBeforeExecute":false,"pluginType":"DB","jsonPathKeys":["appsmith.user.username.split('@')[0]"],"timeoutInMillisecond":10000.0}],[{"id":"PO Entry_PageObjects.selectInitialState","name":"PageObjects.selectInitialState","collectionId":"PO Entry_PageObjects","confirmBeforeExecute":false,"pluginType":"JS","jsonPathKeys":["async () => {\n  await Process.clickState('EnterPO', Estimate_Select);\n}"],"timeoutInMillisecond":10000.0}]],"layoutOnLoadActionErrors":[],"validOnPageLoadActions":true,"id":"PO Entry","deleted":false,"policies":[],"userPermissions":[]}],"userPermissions":[],"policies":[],"isHidden":false},"publishedPage":{"name":"PO Entry","slug":"po-entry","layouts":[{"viewMode":false,"dsl":{"widgetName":"MainContainer","backgroundColor":"none","rightColumn":742.0,"snapColumns":64.0,"detachFromLayout":true,"widgetId":"0","topRow":0.0,"bottomRow":740.0,"containerStyle":"none","snapRows":67.0,"parentRowSpace":1.0,"type":"CANVAS_WIDGET","canExtend":true,"version":89.0,"minHeight":680.0,"parentColumnSpace":1.0,"dynamicBindingPathList":[],"leftColumn":0.0,"children":[{"boxShadow":"none","widgetName":"ChangeState_Modal","isCanvas":true,"displayName":"Modal","iconSVG":"/static/media/icon.4975978e.svg","topRow":91.0,"bottomRow":115.0,"parentRowSpace":10.0,"type":"MODAL_WIDGET","hideCard":false,"shouldScrollContents":true,"animateLoading":false,"parentColumnSpace":19.8125,"dynamicTriggerPathList":[],"leftColumn":19.0,"dynamicBindingPathList":[],"children":[{"boxShadow":"none","widgetName":"Canvas2Copy","displayName":"Canvas","topRow":0.0,"bottomRow":530.0,"parentRowSpace":1.0,"type":"CANVAS_WIDGET","canExtend":true,"hideCard":true,"shouldScrollContents":false,"minHeight":532.0,"parentColumnSpace":1.0,"dynamicTriggerPathList":[],"leftColumn":0.0,"dynamicBindingPathList":[],"children":[{"boxShadow":"none","widgetName":"Icon1","onClick":"{{closeModal('ChangeState_Modal')}}","buttonColor":"#2E3D49","displayName":"Icon","iconSVG":"/static/media/icon.31d6cfe0.svg","topRow":45.0,"bottomRow":49.0,"type":"ICON_BUTTON_WIDGET","hideCard":true,"dynamicTriggerPathList":[],"leftColumn":40.0,"dynamicBindingPathList":[],"iconSize":24.0,"key":"lto10z5naf","labelTextSize":"0.875rem","rightColumn":46.0,"iconName":"cross","widgetId":"xgl8amve9y","isVisible":false,"version":1.0,"parentId":"q7w6vqv8dk","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","buttonVariant":"TERTIARY"},{"boxShadow":"none","widgetName":"Decision_Title","dynamicPropertyPathList":[{"key":"fontSize"}],"displayName":"Text","iconSVG":"/static/media/icon.97c59b52.svg","topRow":1.0,"bottomRow":5.0,"type":"TEXT_WIDGET","hideCard":false,"animateLoading":false,"dynamicTriggerPathList":[],"overflow":"NONE","fontFamily":"System Default","leftColumn":1.0,"dynamicBindingPathList":[{"key":"text"}],"text":"{{ Process.getModalTitle() }}","key":"f231c049hd","labelTextSize":"0.875rem","rightColumn":58.0,"textAlign":"LEFT","dynamicHeight":"FIXED","widgetId":"1hgnttd4j2","isVisible":true,"fontStyle":"BOLD","textColor":"#008695","version":1.0,"parentId":"q7w6vqv8dk","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","maxDynamicHeight":9000.0,"fontSize":"1.5rem","minDynamicHeight":4.0},{"boxShadow":"none","widgetName":"Button1Copy","onClick":"{{closeModal('ChangeState_Modal'); GlobalVariables.resetForm([\"CheckboxGroup1\"]) }}","buttonColor":"#008695","dynamicPropertyPathList":[{"key":"onClick"}],"displayName":"Button","iconSVG":"/static/media/icon.cca02633.svg","topRow":45.0,"bottomRow":49.0,"type":"BUTTON_WIDGET","hideCard":false,"animateLoading":false,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":15.0,"dynamicBindingPathList":[],"text":"Close","isDisabled":false,"key":"o2ddp866uc","labelTextSize":"0.875rem","rightColumn":27.0,"isDefaultClickDisabled":true,"widgetId":"cup4ni3ot4","buttonStyle":"PRIMARY","isVisible":true,"version":1.0,"recaptchaType":"V3","parentId":"q7w6vqv8dk","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","buttonVariant":"SECONDARY"},{"boxShadow":"none","widgetName":"Button2","onClick":"{{Tabs1.selectedTab=='PO Details'?(\nProcess.onModalSubmitClicked(Estimate_PO_Table.selectedRow.EstimateId)):(Process.onModalSubmitClicked(PO_Table.selectedRow.EstId)); GlobalVariables.resetForm([\"CheckboxGroup1\", \"Estimate_PO_Table\"]) }}","buttonColor":"#008695","dynamicPropertyPathList":[{"key":"onClick"}],"displayName":"Button","iconSVG":"/static/media/icon.cca02633.svg","topRow":45.0,"bottomRow":49.0,"type":"BUTTON_WIDGET","hideCard":false,"animateLoading":false,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":1.0,"dynamicBindingPathList":[],"text":"Confirm","isDisabled":false,"key":"o2ddp866uc","labelTextSize":"0.875rem","rightColumn":13.0,"isDefaultClickDisabled":true,"widgetId":"yxr7gsvpje","buttonStyle":"PRIMARY_BUTTON","isVisible":true,"version":1.0,"recaptchaType":"V3","parentId":"q7w6vqv8dk","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","buttonVariant":"SECONDARY"},{"boxShadow":"0px 1px 3px rgba(0, 0, 0, 0.25)","widgetName":"Container2Copy","borderColor":"transparent","isCanvas":true,"dynamicPropertyPathList":[{"key":"borderRadius"},{"key":"boxShadow"}],"displayName":"Container","iconSVG":"/static/media/icon.1977dca3.svg","topRow":6.0,"bottomRow":43.0,"parentRowSpace":10.0,"type":"CONTAINER_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":11.125,"dynamicTriggerPathList":[],"leftColumn":1.0,"dynamicBindingPathList":[],"children":[{"boxShadow":"none","widgetName":"Canvas3Copy1","displayName":"Canvas","topRow":0.0,"bottomRow":370.0,"parentRowSpace":1.0,"type":"CANVAS_WIDGET","canExtend":false,"hideCard":true,"minHeight":400.0,"parentColumnSpace":1.0,"leftColumn":0.0,"dynamicBindingPathList":[],"children":[{"boxShadow":"none","widgetName":"CheckboxGroup1","dynamicPropertyPathList":[{"key":"options"}],"displayName":"Checkbox Group","iconSVG":"/static/media/icon.ecb38479.svg","topRow":24.0,"bottomRow":33.0,"parentRowSpace":10.0,"type":"CHECKBOX_GROUP_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":11.125,"dynamicTriggerPathList":[],"leftColumn":1.0,"dynamicBindingPathList":[{"key":"options"}],"options":"{{ appsmith.store.currentDecision?.Confirmation.map((thisValue)=>{return({\"label\":thisValue,\"value\":thisValue})}) }}","isDisabled":false,"key":"bs9z3neqyk","optionAlignment":"unset","labelTextSize":"0.875rem","isRequired":true,"rightColumn":64.0,"defaultSelectedValues":"","dynamicHeight":"FIXED","widgetId":"8ox4074yzu","accentColor":"#03B365","isVisible":false,"version":2.0,"parentId":"khnxk2yhz6","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","maxDynamicHeight":9000.0,"isInline":false,"minDynamicHeight":4.0},{"boxShadow":"none","widgetName":"Text6","displayName":"Text","iconSVG":"/static/media/icon.97c59b52.svg","topRow":4.0,"bottomRow":22.0,"parentRowSpace":10.0,"type":"TEXT_WIDGET","hideCard":false,"animateLoading":false,"overflow":"NONE","parentColumnSpace":9.751904296874999,"dynamicTriggerPathList":[],"fontFamily":"System Default","leftColumn":1.0,"dynamicBindingPathList":[{"key":"text"}],"shouldTruncate":false,"truncateButtonColor":"#FFC13D","text":"{{ (appsmith.store.currentDecision?.Confirmation)?.join('\\n\\n\\n')}}","key":"65340ap74o","labelTextSize":"0.875rem","rightColumn":64.0,"textAlign":"LEFT","dynamicHeight":"FIXED","widgetId":"oc3sja9vdk","isVisible":true,"fontStyle":"","textColor":"#008695","version":1.0,"parentId":"khnxk2yhz6","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","maxDynamicHeight":9000.0,"fontSize":"0.875rem","minDynamicHeight":4.0}],"key":"rwedoxpb42","labelTextSize":"0.875rem","rightColumn":267.0,"detachFromLayout":true,"widgetId":"khnxk2yhz6","containerStyle":"none","isVisible":true,"version":1.0,"parentId":"2o3b9tm4e9","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px"}],"borderWidth":"0","key":"oujpihjo93","labelTextSize":"0.875rem","backgroundColor":"#F6F7F8","rightColumn":63.0,"dynamicHeight":"FIXED","widgetId":"2o3b9tm4e9","containerStyle":"card","isVisible":true,"version":1.0,"parentId":"q7w6vqv8dk","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","maxDynamicHeight":9000.0,"minDynamicHeight":4.0}],"isDisabled":false,"key":"1kfu4e4b02","labelTextSize":"0.875rem","rightColumn":475.5,"detachFromLayout":true,"widgetId":"q7w6vqv8dk","isVisible":true,"version":1.0,"parentId":"v6uo26jjs5","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px"}],"key":"tu1594ea2u","height":532.0,"labelTextSize":"0.875rem","rightColumn":43.0,"detachFromLayout":true,"dynamicHeight":"FIXED","widgetId":"v6uo26jjs5","canOutsideClickClose":true,"canEscapeKeyClose":true,"version":2.0,"parentId":"0","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","maxDynamicHeight":9000.0,"width":618.9,"minDynamicHeight":4.0},{"boxShadow":"none","mobileBottomRow":33.0,"widgetName":"FileUpload_Modal","isCanvas":true,"displayName":"Modal","iconSVG":"/static/media/icon.d2ab7de0666eaef853cc2d330f86887b.svg","searchTags":["dialog","popup","notification"],"topRow":56.0,"bottomRow":296.0,"parentRowSpace":10.0,"type":"MODAL_WIDGET","hideCard":false,"shouldScrollContents":false,"mobileRightColumn":37.0,"animateLoading":false,"parentColumnSpace":10.984375,"dynamicTriggerPathList":[],"leftColumn":13.0,"dynamicBindingPathList":[],"children":[{"mobileBottomRow":240.0,"widgetName":"Canvas19Copy","displayName":"Canvas","topRow":0.0,"bottomRow":490.0,"parentRowSpace":1.0,"type":"CANVAS_WIDGET","canExtend":true,"hideCard":true,"shouldScrollContents":false,"minHeight":494.0,"mobileRightColumn":263.625,"parentColumnSpace":1.0,"leftColumn":0.0,"dynamicBindingPathList":[],"children":[{"boxShadow":"none","widgetName":"Quote_File_Container","borderColor":"transparent","isCanvas":true,"displayName":"Container","iconSVG":"/static/media/icon.1977dca3370505e2db3a8e44cfd54907.svg","searchTags":["div","parent","group"],"topRow":0.0,"bottomRow":48.0,"parentRowSpace":10.0,"type":"CONTAINER_WIDGET","hideCard":false,"shouldScrollContents":false,"animateLoading":false,"parentColumnSpace":13.03125,"dynamicTriggerPathList":[],"leftColumn":0.0,"dynamicBindingPathList":[{"key":"borderRadius"}],"children":[{"boxShadow":"none","widgetName":"Canvas10Copy","displayName":"Canvas","topRow":0.0,"bottomRow":480.0,"parentRowSpace":1.0,"type":"CANVAS_WIDGET","canExtend":false,"hideCard":true,"minHeight":400.0,"parentColumnSpace":1.0,"leftColumn":0.0,"dynamicBindingPathList":[{"key":"borderRadius"},{"key":"accentColor"}],"children":[{"boxShadow":"0px 0px 2px 1.5px rgba(0, 0, 0, 0.25)","mobileBottomRow":4.0,"widgetName":"FileDownload_Button","onClick":"{{storeValue('disable',true).then(()=>FileUploadProcess.runDownloadFile()).then(()=>storeValue('disable',false))}}","buttonColor":"{{appsmith.theme.colors.primaryColor}}","dynamicPropertyPathList":[{"key":"boxShadow"},{"key":"isDisabled"},{"key":"onClick"}],"displayName":"Icon button","iconSVG":"/static/media/icon.80fc7466c0d7181ec0271de7fda795ec.svg","searchTags":["click","submit"],"topRow":0.0,"bottomRow":4.0,"parentRowSpace":10.0,"type":"ICON_BUTTON_WIDGET","hideCard":false,"mobileRightColumn":63.0,"animateLoading":false,"parentColumnSpace":10.1695556640625,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":34.0,"dynamicBindingPathList":[{"key":"buttonColor"},{"key":"isDisabled"}],"isDisabled":"{{POAttachments_Table.selectedRowIndex==-1||appsmith.store.disable}}","key":"9rrozn34oj","isDeprecated":false,"rightColumn":39.0,"iconName":"cloud-download","widgetId":"cliplqaxqp","minWidth":50.0,"isVisible":true,"version":1.0,"parentId":"5899xdgf2y","renderMode":"CANVAS","isLoading":false,"mobileTopRow":0.0,"responsiveBehavior":"hug","borderRadius":"0.375rem","mobileLeftColumn":59.0,"buttonVariant":"SECONDARY"},{"boxShadow":"{{appsmith.theme.boxShadow.appBoxShadow}}","isVisibleDownload":false,"iconSVG":"/static/media/icon.db8a9cbd2acd22a31ea91cc37ea2a46c.svg","topRow":25.0,"isSortable":true,"type":"TABLE_WIDGET_V2","inlineEditingSaveOption":"ROW_LEVEL","animateLoading":false,"dynamicBindingPathList":[{"key":"accentColor"},{"key":"boxShadow"},{"key":"primaryColumns.Field.computedValue"},{"key":"primaryColumns.Value.computedValue"},{"key":"tableData"}],"leftColumn":32.0,"delimiter":",","defaultSelectedRowIndex":"-1","showInlineEditingOptionDropdown":true,"accentColor":"{{appsmith.theme.colors.primaryColor}}","isVisibleFilters":false,"isVisible":true,"fontStyle":"","enableClientSideSearch":false,"version":1.0,"totalRecordsCount":0.0,"isLoading":false,"childStylesheet":{"button":{"buttonColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"menuButton":{"menuColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"iconButton":{"buttonColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"editActions":{"saveButtonColor":"{{appsmith.theme.colors.primaryColor}}","saveBorderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","discardButtonColor":"{{appsmith.theme.colors.primaryColor}}","discardBorderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}"}},"borderRadius":"0.375rem","columnUpdatedAt":1.700722281829E12,"defaultSelectedRowIndices":[0.0],"widgetName":"FilesMetadata_Table","defaultPageSize":0.0,"columnOrder":["Field","Value"],"dynamicPropertyPathList":[{"key":"tableData"}],"displayName":"Table","bottomRow":46.0,"columnWidthMap":{"task":245.0,"step":62.0,"status":75.0,"Field":189.0},"parentRowSpace":10.0,"hideCard":false,"parentColumnSpace":11.29609375,"dynamicTriggerPathList":[],"primaryColumns":{"Field":{"allowCellWrapping":false,"index":3.0,"width":150.0,"originalId":"Field","id":"Field","alias":"Field","horizontalAlignment":"LEFT","verticalAlignment":"CENTER","columnType":"text","textSize":"0.875rem","enableFilter":true,"enableSort":true,"isVisible":true,"isDisabled":false,"isCellEditable":false,"isEditable":false,"isCellVisible":true,"isDerived":false,"label":"Field","isSaveVisible":true,"isDiscardVisible":true,"computedValue":"{{FilesMetadata_Table.processedTableData.map((currentRow, currentIndex) => ( currentRow[\"Field\"]))}}","fontStyle":"","validation":{},"sticky":""},"Value":{"allowCellWrapping":false,"index":1.0,"width":150.0,"originalId":"Value","id":"Value","alias":"Value","horizontalAlignment":"LEFT","verticalAlignment":"CENTER","columnType":"text","textColor":"","textSize":"0.875rem","fontStyle":"","enableFilter":true,"enableSort":true,"isVisible":true,"isDisabled":false,"isCellEditable":false,"isEditable":false,"isCellVisible":true,"isDerived":false,"label":"Value","isSaveVisible":true,"isDiscardVisible":true,"computedValue":"{{FilesMetadata_Table.processedTableData.map((currentRow, currentIndex) => ( currentRow[\"Value\"]))}}","cellBackground":"","validation":{},"sticky":""}},"borderWidth":"1","key":"tr6i18pzj9","canFreezeColumn":false,"isDeprecated":false,"rightColumn":64.0,"textSize":"0.875rem","widgetId":"zpy912sy5o","enableServerSideFiltering":false,"tableData":"{{POAttachments_Table.selectedRowIndex==-1?\"\":appsmith.store.tabledata}}","label":"Data","searchKey":"","parentId":"5899xdgf2y","renderMode":"CANVAS","horizontalAlignment":"LEFT","isVisibleSearch":true,"isVisiblePagination":true,"verticalAlignment":"CENTER"},{"boxShadow":"0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06)","isVisibleDownload":false,"iconSVG":"/static/media/icon.db8a9cbd2acd22a31ea91cc37ea2a46c.svg","topRow":5.0,"isSortable":true,"type":"TABLE_WIDGET_V2","inlineEditingSaveOption":"ROW_LEVEL","animateLoading":false,"dynamicBindingPathList":[{"key":"accentColor"},{"key":"primaryColumns.Id.computedValue"},{"key":"primaryColumns.FileName.computedValue"},{"key":"primaryColumns.Comments.computedValue"},{"key":"tableData"},{"key":"primaryColumns.POId.computedValue"}],"leftColumn":0.0,"delimiter":",","defaultSelectedRowIndex":"-1","showInlineEditingOptionDropdown":true,"accentColor":"{{appsmith.theme.colors.primaryColor}}","isVisibleFilters":false,"isVisible":true,"fontStyle":"","enableClientSideSearch":false,"version":1.0,"totalRecordsCount":0.0,"isLoading":false,"childStylesheet":{"button":{"buttonColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"menuButton":{"menuColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"iconButton":{"buttonColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"editActions":{"saveButtonColor":"{{appsmith.theme.colors.primaryColor}}","saveBorderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","discardButtonColor":"{{appsmith.theme.colors.primaryColor}}","discardBorderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}"}},"borderRadius":"0.375rem","columnUpdatedAt":1.745383866678E12,"originalBottomRow":46.0,"defaultSelectedRowIndices":[0.0],"widgetName":"POAttachments_Table","defaultPageSize":0.0,"columnOrder":["Id","FileName","Comments","POId"],"dynamicPropertyPathList":[{"key":"tableData"},{"key":"onRowSelected"}],"displayName":"Table","bottomRow":46.0,"columnWidthMap":{"task":245.0,"step":62.0,"status":75.0,"Field":189.0,"FileName":183.0},"parentRowSpace":10.0,"hideCard":false,"parentColumnSpace":11.29609375,"dynamicTriggerPathList":[{"key":"onRowSelected"}],"primaryColumns":{"Id":{"allowCellWrapping":false,"allowSameOptionsInNewRow":true,"index":0.0,"width":150.0,"originalId":"Id","id":"Id","alias":"Id","horizontalAlignment":"LEFT","verticalAlignment":"CENTER","columnType":"number","textColor":"","textSize":"0.875rem","fontStyle":"","enableFilter":true,"enableSort":true,"isVisible":false,"isDisabled":false,"isCellEditable":false,"isEditable":false,"isCellVisible":true,"isDerived":false,"label":"Id","isSaveVisible":true,"isDiscardVisible":true,"computedValue":"{{POAttachments_Table.processedTableData.map((currentRow, currentIndex) => ( currentRow[\"Id\"]))}}","sticky":"","validation":{},"cellBackground":""},"FileName":{"allowCellWrapping":false,"allowSameOptionsInNewRow":true,"index":2.0,"width":150.0,"originalId":"FileName","id":"FileName","alias":"FileName","horizontalAlignment":"LEFT","verticalAlignment":"CENTER","columnType":"text","textColor":"","textSize":"0.875rem","fontStyle":"","enableFilter":true,"enableSort":true,"isVisible":true,"isDisabled":false,"isCellEditable":false,"isEditable":false,"isCellVisible":true,"isDerived":false,"label":"FileName","isSaveVisible":true,"isDiscardVisible":true,"computedValue":"{{POAttachments_Table.processedTableData.map((currentRow, currentIndex) => ( currentRow[\"FileName\"]))}}","sticky":"","validation":{},"cellBackground":""},"Comments":{"allowCellWrapping":false,"allowSameOptionsInNewRow":true,"index":3.0,"width":150.0,"originalId":"Comments","id":"Comments","alias":"Comments","horizontalAlignment":"LEFT","verticalAlignment":"CENTER","columnType":"text","textColor":"","textSize":"0.875rem","fontStyle":"","enableFilter":true,"enableSort":true,"isVisible":true,"isDisabled":false,"isCellEditable":false,"isEditable":false,"isCellVisible":true,"isDerived":false,"label":"Comments","isSaveVisible":true,"isDiscardVisible":true,"computedValue":"{{POAttachments_Table.processedTableData.map((currentRow, currentIndex) => ( currentRow[\"Comments\"]))}}","sticky":"","validation":{},"cellBackground":""},"POId":{"allowCellWrapping":false,"allowSameOptionsInNewRow":true,"index":1.0,"width":150.0,"originalId":"POId","id":"POId","alias":"POId","horizontalAlignment":"LEFT","verticalAlignment":"CENTER","columnType":"number","textColor":"","textSize":"0.875rem","fontStyle":"","enableFilter":true,"enableSort":true,"isVisible":true,"isDisabled":false,"isCellEditable":false,"isEditable":false,"isCellVisible":true,"isDerived":false,"label":"POId","isSaveVisible":true,"isDiscardVisible":true,"computedValue":"{{POAttachments_Table.processedTableData.map((currentRow, currentIndex) => ( currentRow[\"POId\"]))}}","sticky":"","validation":{},"currencyCode":"USD","decimals":0.0,"thousandSeparator":true,"notation":"standard","cellBackground":""}},"borderWidth":"1","onRowSelected":"{{FileUploadProcess.onUploadModalClick();storeValue(\"ActualFileName\",POAttachments_Table.selectedRow.FileName)}}","key":"tr6i18pzj9","canFreezeColumn":false,"isDeprecated":false,"rightColumn":32.0,"textSize":"0.875rem","widgetId":"h1srwhdxd3","enableServerSideFiltering":false,"tableData":"{{EPOAttachments_Select.data}}","label":"Data","searchKey":"","parentId":"5899xdgf2y","renderMode":"CANVAS","horizontalAlignment":"LEFT","isVisibleSearch":true,"originalTopRow":5.0,"isVisiblePagination":true,"verticalAlignment":"CENTER"},{"boxShadow":"none","widgetName":"FileComments_Input","displayName":"Input","iconSVG":"/static/media/icon.9f505595da61a34f563dba82adeb06ec.svg","searchTags":["form","text input","number","textarea"],"topRow":17.0,"bottomRow":25.0,"parentRowSpace":10.0,"labelWidth":5.0,"autoFocus":false,"type":"INPUT_WIDGET_V2","hideCard":false,"animateLoading":false,"parentColumnSpace":7.82265625,"dynamicTriggerPathList":[],"resetOnSubmit":true,"leftColumn":32.0,"dynamicBindingPathList":[{"key":"accentColor"},{"key":"labelTextColor"},{"key":"defaultText"}],"labelPosition":"Top","labelStyle":"","labelTextColor":"{{appsmith.theme.colors.primaryColor}}","inputType":"MULTI_LINE_TEXT","maxChars":"255","isDisabled":false,"key":"fnbeggozqq","labelTextSize":"0.875rem","isRequired":false,"isDeprecated":false,"rightColumn":64.0,"dynamicHeight":"FIXED","widgetId":"hl9n9irwwn","accentColor":"{{appsmith.theme.colors.primaryColor}}","isVisible":true,"label":"Comments","version":2.0,"parentId":"5899xdgf2y","labelAlignment":"left","renderMode":"CANVAS","isLoading":false,"borderRadius":"0.375rem","maxDynamicHeight":9000.0,"iconAlign":"left","defaultText":"{{POAttachments_Table.selectedRowIndex==-1?\"\":POAttachments_Table.selectedRow.Comments}}","minDynamicHeight":4.0},{"boxShadow":"none","widgetName":"ActualFileName_Input","displayName":"Input","iconSVG":"/static/media/icon.9f505595da61a34f563dba82adeb06ec.svg","searchTags":["form","text input","number","textarea"],"topRow":9.0,"bottomRow":13.0,"parentRowSpace":10.0,"labelWidth":"8","autoFocus":false,"type":"INPUT_WIDGET_V2","hideCard":false,"animateLoading":false,"parentColumnSpace":11.29609375,"dynamicTriggerPathList":[],"resetOnSubmit":true,"leftColumn":32.0,"dynamicBindingPathList":[{"key":"accentColor"},{"key":"defaultText"}],"labelPosition":"Left","labelStyle":"","inputType":"TEXT","maxChars":"50","isDisabled":true,"key":"fmqlbw0c9w","labelTextSize":"0.875rem","isRequired":false,"isDeprecated":false,"rightColumn":64.0,"dynamicHeight":"FIXED","widgetId":"ato0dyica5","accentColor":"{{appsmith.theme.colors.primaryColor}}","isVisible":true,"label":"File Name","version":2.0,"parentId":"5899xdgf2y","labelAlignment":"left","renderMode":"CANVAS","isLoading":false,"borderRadius":"0.375rem","maxDynamicHeight":9000.0,"iconAlign":"left","defaultText":"{{appsmith.store.ActualFileName}}","minDynamicHeight":4.0},{"boxShadow":"none","iconSVG":"/static/media/icon.9f505595da61a34f563dba82adeb06ec.svg","topRow":5.0,"labelWidth":"8","type":"INPUT_WIDGET_V2","animateLoading":false,"resetOnSubmit":true,"leftColumn":32.0,"dynamicBindingPathList":[{"key":"accentColor"},{"key":"labelTextColor"},{"key":"isDisabled"}],"labelStyle":"","inputType":"TEXT","maxChars":"25","isDisabled":"{{POAttachments_Table.selectedRowIndex!=-1}}","validation":"","isRequired":false,"dynamicHeight":"FIXED","accentColor":"{{appsmith.theme.colors.primaryColor}}","isVisible":true,"version":2.0,"isLoading":false,"regex":"^[0-9a-zA-Z]+$","borderRadius":"0.375rem","widgetName":"UserText_Input","dynamicPropertyPathList":[{"key":"onTextChanged"},{"key":"isDisabled"}],"displayName":"Input","searchTags":["form","text input","number","textarea"],"bottomRow":9.0,"parentRowSpace":10.0,"autoFocus":false,"hideCard":false,"parentColumnSpace":10.0322265625,"dynamicTriggerPathList":[{"key":"onTextChanged"}],"labelPosition":"Left","labelTextColor":"{{appsmith.theme.colors.primaryColor}}","key":"fmqlbw0c9w","labelTextSize":"0.875rem","onTextChanged":"{{FileUploadProcess.getFileName()}}","isDeprecated":false,"rightColumn":64.0,"widgetId":"xnd4maqb0e","errorMessage":"Spaces and special characters are not allowed!!","label":"User Text","parentId":"5899xdgf2y","labelAlignment":"left","renderMode":"CANVAS","maxDynamicHeight":9000.0,"iconAlign":"left","defaultText":"","minDynamicHeight":4.0},{"boxShadow":"0px 0px 2px 1.5px rgba(0, 0, 0, 0.25)","widgetName":"FileUploadReset_Button","onClick":"{{storeValue('ActualFileName','');GlobalVariables.resetForm(['Quote_File_Container']);storeValue('ErrorMessage','');storeValue('disable',false)}} ","buttonColor":"{{appsmith.theme.colors.primaryColor}}","dynamicPropertyPathList":[{"key":"boxShadow"},{"key":"onClick"}],"displayName":"Icon Button","iconSVG":"/static/media/icon.1a0c634ac75f9fa6b6ae7a8df882a3ba.svg","searchTags":["click","submit"],"topRow":0.0,"bottomRow":4.0,"tooltip":"Reset Files","parentRowSpace":10.0,"type":"ICON_BUTTON_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":10.0322265625,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":39.0,"dynamicBindingPathList":[{"key":"buttonColor"}],"isDisabled":false,"key":"z13en9py0b","isDeprecated":false,"rightColumn":44.0,"iconName":"refresh","widgetId":"rmb96q429i","isVisible":true,"version":1.0,"parentId":"5899xdgf2y","renderMode":"CANVAS","isLoading":false,"borderRadius":"0.375rem","buttonVariant":"SECONDARY"},{"boxShadow":"0px 0px 2px 1.5px rgba(0, 0, 0, 0.25)","widgetName":"FileUploadCreate_Button","onClick":"{{storeValue('disable',true).then(()=>storeValue('add',1))\n.then(()=>FileUploadProcess.runCreateFile(PO_Table.selectedRow.Id,FileComments_Input.text)).then(()=>storeValue('disable',false))}}","buttonColor":"{{appsmith.theme.colors.primaryColor}}","dynamicPropertyPathList":[{"key":"isDisabled"},{"key":"boxShadow"},{"key":"onClick"}],"displayName":"Icon Button","iconSVG":"/static/media/icon.1a0c634ac75f9fa6b6ae7a8df882a3ba.svg","searchTags":["click","submit"],"topRow":0.0,"bottomRow":4.0,"tooltip":"Create Files","parentRowSpace":10.0,"type":"ICON_BUTTON_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":10.0322265625,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":44.0,"dynamicBindingPathList":[{"key":"buttonColor"},{"key":"isDisabled"}],"isDisabled":"{{ FilePicker.files.length == 0 || appsmith.store.ErrorMessage.length != 0 || POAttachments_Table.selectedRowIndex!=-1 || appsmith.store.ActualFileName==\"\"}}","key":"z13en9py0b","isDeprecated":false,"rightColumn":49.0,"iconName":"plus","widgetId":"leea5mikyv","isVisible":true,"version":1.0,"parentId":"5899xdgf2y","renderMode":"CANVAS","isLoading":false,"borderRadius":"0.375rem","buttonVariant":"SECONDARY"},{"boxShadow":"0px 0px 2px 1.5px rgba(0, 0, 0, 0.25)","widgetName":"FileUploadModify_Button","onClick":"{{storeValue('Disable','True').then(()=>storeValue('add',2))\n.then(()=>\nFileUploadProcess.runModifyFile(POAttachments_Table.selectedRow.Id,FileComments_Input.text)).then(()=>storeValue('Disable','False'))}} ","buttonColor":"{{appsmith.theme.colors.primaryColor}}","dynamicPropertyPathList":[{"key":"boxShadow"},{"key":"onClick"},{"key":"isDisabled"}],"displayName":"Icon Button","iconSVG":"/static/media/icon.1a0c634ac75f9fa6b6ae7a8df882a3ba.svg","searchTags":["click","submit"],"topRow":0.0,"bottomRow":4.0,"tooltip":"Edit Files","parentRowSpace":10.0,"type":"ICON_BUTTON_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":10.0322265625,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":49.0,"dynamicBindingPathList":[{"key":"buttonColor"},{"key":"isDisabled"}],"isDisabled":"{{POAttachments_Table.selectedRowIndex==-1||appsmith.store.disable}}","key":"z13en9py0b","isDeprecated":false,"rightColumn":54.0,"iconName":"edit","widgetId":"q4652h7a2e","isVisible":true,"version":1.0,"parentId":"5899xdgf2y","renderMode":"CANVAS","isLoading":false,"borderRadius":"0.375rem","buttonVariant":"SECONDARY"},{"boxShadow":"0px 0px 2px 1.5px rgba(0, 0, 0, 0.25)","widgetName":"FileUploadDelete_Button","onClick":"{{storeValue('disable',true).then(()=>FileUploadProcess.runDeleteFile(POAttachments_Table.selectedRow.Id)).then(()=>storeValue('disable',false))}}","buttonColor":"{{appsmith.theme.colors.primaryColor}}","dynamicPropertyPathList":[{"key":"boxShadow"},{"key":"isDisabled"},{"key":"onClick"}],"displayName":"Icon Button","iconSVG":"/static/media/icon.1a0c634ac75f9fa6b6ae7a8df882a3ba.svg","searchTags":["click","submit"],"topRow":0.0,"bottomRow":4.0,"tooltip":"Delete Files","parentRowSpace":10.0,"type":"ICON_BUTTON_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":10.0322265625,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":54.0,"dynamicBindingPathList":[{"key":"buttonColor"},{"key":"isDisabled"}],"isDisabled":"{{POAttachments_Table.selectedRowIndex==-1||appsmith.store.disable}}","key":"z13en9py0b","isDeprecated":false,"rightColumn":59.0,"iconName":"trash","widgetId":"yxepik9l13","isVisible":true,"version":1.0,"parentId":"5899xdgf2y","renderMode":"CANVAS","isLoading":false,"borderRadius":"0.375rem","buttonVariant":"SECONDARY"},{"boxShadow":"0px 0px 2px 1.5px rgba(0, 0, 0, 0.25)","widgetName":"FileUploadClose_Button","onClick":"{{PO_Select.run(); closeModal('FileUpload_Modal');GlobalVariables.resetForm(['Quote_File_Container'])}} ","buttonColor":"{{appsmith.theme.colors.primaryColor}}","dynamicPropertyPathList":[{"key":"boxShadow"},{"key":"isDisabled"},{"key":"onClick"}],"displayName":"Icon Button","iconSVG":"/static/media/icon.1a0c634ac75f9fa6b6ae7a8df882a3ba.svg","searchTags":["click","submit"],"topRow":0.0,"bottomRow":4.0,"tooltip":"","parentRowSpace":10.0,"type":"ICON_BUTTON_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":10.0322265625,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":59.0,"dynamicBindingPathList":[{"key":"buttonColor"}],"isDisabled":"","key":"z13en9py0b","isDeprecated":false,"rightColumn":64.0,"iconName":"cross","widgetId":"ivpo0ou3td","isVisible":true,"version":1.0,"parentId":"5899xdgf2y","renderMode":"CANVAS","isLoading":false,"borderRadius":"0.375rem","buttonVariant":"SECONDARY"},{"boxShadow":"none","widgetName":"FilePicker","buttonColor":"{{appsmith.theme.colors.primaryColor}}","dynamicPropertyPathList":[{"key":"onFilesSelected"},{"key":"isDisabled"}],"displayName":"FilePicker","iconSVG":"/static/media/icon.7c5ad9c357928c6ff5701bf51a56c2e5.svg","searchTags":["upload"],"topRow":0.0,"bottomRow":4.0,"parentRowSpace":10.0,"allowedFileTypes":[],"type":"FILE_PICKER_WIDGET_V2","hideCard":false,"animateLoading":false,"parentColumnSpace":19.05,"dynamicTriggerPathList":[{"key":"onFilesSelected"}],"leftColumn":0.0,"dynamicBindingPathList":[{"key":"buttonColor"}],"isDisabled":"","key":"cjvgnpr682","onFilesSelected":"{{FileUploadProcess.getFileName().then(()=>FileUploadProcess.onfileselect())\n}}","isRequired":false,"isDeprecated":false,"rightColumn":14.0,"isDefaultClickDisabled":true,"widgetId":"7kubap181a","isVisible":true,"label":"Select Files","maxFileSize":"100","version":1.0,"fileDataType":"Binary","parentId":"5899xdgf2y","selectedFiles":[],"renderMode":"CANVAS","isLoading":false,"borderRadius":"0.375rem","files":[],"maxNumFiles":"1"},{"boxShadow":"none","widgetName":"Error_input","dynamicPropertyPathList":[],"displayName":"Input","iconSVG":"/static/media/icon.9f505595da61a34f563dba82adeb06ec.svg","searchTags":["form","text input","number","textarea"],"topRow":13.0,"bottomRow":17.0,"tooltip":"Display an error message","parentRowSpace":10.0,"labelWidth":"8","autoFocus":false,"type":"INPUT_WIDGET_V2","hideCard":false,"animateLoading":false,"parentColumnSpace":6.15087890625,"dynamicTriggerPathList":[],"resetOnSubmit":true,"leftColumn":32.0,"dynamicBindingPathList":[{"key":"accentColor"},{"key":"defaultText"}],"labelPosition":"Left","labelStyle":"","labelTextColor":"","inputType":"TEXT","isDisabled":true,"key":"zgqucosmsy","labelTextSize":"0.875rem","isRequired":false,"isDeprecated":false,"rightColumn":64.0,"dynamicHeight":"FIXED","widgetId":"ffd121sqf6","accentColor":"{{appsmith.theme.colors.primaryColor}}","isVisible":true,"label":"Error Msg","version":2.0,"parentId":"5899xdgf2y","labelAlignment":"left","renderMode":"CANVAS","isLoading":false,"borderRadius":"0.375rem","maxDynamicHeight":9000.0,"iconAlign":"left","defaultText":"{{appsmith.store.ErrorMessage}}","minDynamicHeight":4.0}],"key":"8jj9ozjiq8","isDeprecated":false,"rightColumn":312.75,"detachFromLayout":true,"widgetId":"5899xdgf2y","accentColor":"{{appsmith.theme.colors.primaryColor}}","containerStyle":"none","isVisible":true,"version":1.0,"parentId":"pu1f0t0bbg","renderMode":"CANVAS","isLoading":false,"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}"}],"borderWidth":"0","key":"9508m2tat7","backgroundColor":"#FFFFFF","isDeprecated":false,"rightColumn":64.0,"dynamicHeight":"FIXED","widgetId":"pu1f0t0bbg","containerStyle":"card","isVisible":true,"version":1.0,"parentId":"rgbf0dn9js","renderMode":"CANVAS","isLoading":false,"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","maxDynamicHeight":9000.0,"minDynamicHeight":4.0}],"isDisabled":false,"key":"y47ei2f6i0","isDeprecated":false,"rightColumn":263.625,"detachFromLayout":true,"widgetId":"rgbf0dn9js","minWidth":450.0,"isVisible":true,"version":1.0,"parentId":"aesh21d5j7","renderMode":"CANVAS","isLoading":false,"mobileTopRow":0.0,"responsiveBehavior":"fill","mobileLeftColumn":0.0,"flexLayers":[]}],"key":"n0xf4585ut","height":494.0,"isDeprecated":false,"rightColumn":37.0,"detachFromLayout":true,"dynamicHeight":"FIXED","widgetId":"aesh21d5j7","canOutsideClickClose":true,"canEscapeKeyClose":true,"version":2.0,"parentId":"0","renderMode":"CANVAS","isLoading":false,"mobileTopRow":9.0,"borderRadius":"0.375rem","mobileLeftColumn":13.0,"maxDynamicHeight":9000.0,"width":647.9,"minDynamicHeight":24.0},{"boxShadow":"none","mobileBottomRow":38.0,"widgetName":"File_Alert_Modal","isCanvas":true,"displayName":"Modal","iconSVG":"/static/media/icon.d2ab7de0666eaef853cc2d330f86887b.svg","searchTags":["dialog","popup","notification"],"topRow":56.0,"bottomRow":296.0,"parentRowSpace":10.0,"type":"MODAL_WIDGET","hideCard":false,"shouldScrollContents":false,"mobileRightColumn":36.0,"animateLoading":false,"parentColumnSpace":10.41015625,"dynamicTriggerPathList":[],"leftColumn":12.0,"dynamicBindingPathList":[{"key":"borderRadius"}],"children":[{"mobileBottomRow":240.0,"widgetName":"Canvas20","displayName":"Canvas","topRow":0.0,"bottomRow":180.0,"parentRowSpace":1.0,"type":"CANVAS_WIDGET","canExtend":true,"hideCard":true,"shouldScrollContents":false,"minHeight":182.0,"mobileRightColumn":249.84375,"parentColumnSpace":1.0,"leftColumn":0.0,"dynamicBindingPathList":[],"children":[{"boxShadow":"none","widgetName":"File_Alert_CloseButton","onClick":"{{resetWidget('FilePicker').then(()=>closeModal('File_Alert_Modal'))}}","buttonColor":"{{appsmith.theme.colors.primaryColor}}","dynamicPropertyPathList":[{"key":"onClick"}],"displayName":"Button","iconSVG":"/static/media/icon.cca026338f1c8eb6df8ba03d084c2fca.svg","searchTags":["click","submit"],"topRow":12.0,"bottomRow":16.0,"type":"BUTTON_WIDGET","hideCard":false,"animateLoading":true,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":51.0,"dynamicBindingPathList":[{"key":"buttonColor"},{"key":"borderRadius"}],"text":"Okay","isDisabled":false,"key":"nu57m82z50","isDeprecated":false,"rightColumn":63.0,"isDefaultClickDisabled":true,"widgetId":"aooarde4a3","buttonStyle":"PRIMARY_BUTTON","isVisible":true,"recaptchaType":"V3","version":1.0,"parentId":"fd794f3gd8","renderMode":"CANVAS","isLoading":false,"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","buttonVariant":"PRIMARY","placement":"CENTER"},{"widgetName":"File_Alert_Text","displayName":"Text","iconSVG":"/static/media/icon.97c59b523e6f70ba6f40a10fc2c7c5b5.svg","searchTags":["typography","paragraph","label"],"topRow":2.0,"bottomRow":11.0,"type":"TEXT_WIDGET","hideCard":false,"animateLoading":false,"overflow":"NONE","fontFamily":"{{appsmith.theme.fontFamily.appFont}}","dynamicTriggerPathList":[],"leftColumn":0.0,"dynamicBindingPathList":[{"key":"fontFamily"},{"key":"borderRadius"},{"key":"textColor"}],"shouldTruncate":false,"truncateButtonColor":"#FFC13D","text":"File is large, Use other application to upload the file.\nNote: appsmith supports file size less than 20mb and zip file of 4mb","key":"16xe830bkl","isDeprecated":false,"rightColumn":64.0,"textAlign":"CENTER","dynamicHeight":"FIXED","widgetId":"pobazzwekz","isVisible":true,"fontStyle":"BOLD","textColor":"{{appsmith.theme.colors.primaryColor}}","version":1.0,"parentId":"fd794f3gd8","renderMode":"CANVAS","isLoading":false,"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","maxDynamicHeight":9000.0,"fontSize":"1.5rem","minDynamicHeight":4.0}],"isDisabled":false,"key":"unr6cvaqjz","isDeprecated":false,"rightColumn":249.84375,"detachFromLayout":true,"widgetId":"fd794f3gd8","minWidth":450.0,"isVisible":true,"version":1.0,"parentId":"48tw7ek0q8","renderMode":"CANVAS","isLoading":false,"mobileTopRow":0.0,"responsiveBehavior":"fill","mobileLeftColumn":0.0,"flexLayers":[]}],"key":"2nsq1idgqj","height":182.0,"isDeprecated":false,"rightColumn":36.0,"detachFromLayout":true,"dynamicHeight":"FIXED","widgetId":"48tw7ek0q8","canOutsideClickClose":true,"canEscapeKeyClose":true,"version":2.0,"parentId":"0","renderMode":"CANVAS","isLoading":false,"mobileTopRow":14.0,"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","mobileLeftColumn":12.0,"maxDynamicHeight":9000.0,"width":698.25,"minDynamicHeight":24.0},{"boxShadow":"none","mobileBottomRow":27.0,"widgetName":"ShowAlert_Modal","isCanvas":true,"displayName":"Modal","iconSVG":"/static/media/icon.d2ab7de0666eaef853cc2d330f86887b.svg","searchTags":["dialog","popup","notification"],"topRow":56.0,"bottomRow":306.0,"parentRowSpace":10.0,"type":"MODAL_WIDGET","hideCard":false,"shouldScrollContents":false,"mobileRightColumn":39.0,"animateLoading":false,"parentColumnSpace":10.984375,"dynamicTriggerPathList":[],"leftColumn":15.0,"dynamicBindingPathList":[{"key":"borderRadius"}],"children":[{"mobileBottomRow":240.0,"widgetName":"Canvas24","displayName":"Canvas","topRow":0.0,"bottomRow":160.0,"parentRowSpace":1.0,"type":"CANVAS_WIDGET","canExtend":true,"hideCard":true,"shouldScrollContents":false,"minHeight":164.0,"mobileRightColumn":263.625,"parentColumnSpace":1.0,"leftColumn":0.0,"dynamicBindingPathList":[],"children":[{"mobileBottomRow":5.0,"widgetName":"Text5","displayName":"Text","iconSVG":"/static/media/icon.c3b6033f570046f8c6288d911333a827.svg","searchTags":["typography","paragraph","label"],"topRow":4.0,"bottomRow":8.0,"type":"TEXT_WIDGET","hideCard":false,"mobileRightColumn":41.0,"animateLoading":false,"overflow":"NONE","fontFamily":"{{appsmith.theme.fontFamily.appFont}}","dynamicTriggerPathList":[],"leftColumn":0.0,"dynamicBindingPathList":[{"key":"truncateButtonColor"},{"key":"fontFamily"},{"key":"borderRadius"},{"key":"text"},{"key":"textColor"}],"shouldTruncate":false,"truncateButtonColor":"{{appsmith.theme.colors.primaryColor}}","text":"{{ActualFileName_Input.text.concat(\"   Does not exist in SharePoint!!!\")}}","key":"u1eb8unlsk","isDeprecated":false,"rightColumn":63.0,"textAlign":"CENTER","dynamicHeight":"FIXED","widgetId":"z76fes7q8n","minWidth":450.0,"isVisible":true,"fontStyle":"BOLD","textColor":"{{appsmith.theme.colors.primaryColor}}","version":1.0,"parentId":"n97ot9wet5","renderMode":"CANVAS","isLoading":false,"mobileTopRow":1.0,"responsiveBehavior":"fill","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","mobileLeftColumn":1.0,"maxDynamicHeight":9000.0,"fontSize":"1.25rem","minDynamicHeight":4.0},{"resetFormOnClick":false,"boxShadow":"none","mobileBottomRow":22.0,"widgetName":"Close_ButtonCopy","onClick":"{{closeModal('ShowAlert_Modal')}}","buttonColor":"{{appsmith.theme.colors.primaryColor}}","dynamicPropertyPathList":[{"key":"onClick"}],"displayName":"Button","iconSVG":"/static/media/icon.7beb9123fb53027d9d6b778cdfe4caed.svg","searchTags":["click","submit"],"topRow":9.0,"bottomRow":13.0,"type":"BUTTON_WIDGET","hideCard":false,"mobileRightColumn":47.0,"animateLoading":true,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":47.0,"dynamicBindingPathList":[{"key":"buttonColor"},{"key":"borderRadius"}],"text":"Okay","isDisabled":false,"key":"a8byd68sd0","isDeprecated":false,"rightColumn":63.0,"isDefaultClickDisabled":true,"widgetId":"zfzct0mao3","buttonStyle":"PRIMARY","minWidth":120.0,"isVisible":true,"recaptchaType":"V3","version":1.0,"parentId":"n97ot9wet5","renderMode":"CANVAS","isLoading":false,"mobileTopRow":18.0,"responsiveBehavior":"hug","disabledWhenInvalid":false,"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","mobileLeftColumn":31.0,"placement":"CENTER"}],"isDisabled":false,"key":"zrwmtap8cw","isDeprecated":false,"rightColumn":263.625,"detachFromLayout":true,"widgetId":"n97ot9wet5","minWidth":450.0,"isVisible":true,"version":1.0,"parentId":"fv6vhtjrdt","renderMode":"CANVAS","isLoading":false,"mobileTopRow":0.0,"responsiveBehavior":"fill","mobileLeftColumn":0.0,"flexLayers":[]}],"key":"ts2tav54bq","height":164.0,"isDeprecated":false,"rightColumn":39.0,"detachFromLayout":true,"dynamicHeight":"FIXED","widgetId":"fv6vhtjrdt","canOutsideClickClose":true,"canEscapeKeyClose":true,"version":2.0,"parentId":"0","renderMode":"CANVAS","isLoading":false,"mobileTopRow":3.0,"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","mobileLeftColumn":15.0,"maxDynamicHeight":9000.0,"width":698.25,"minDynamicHeight":24.0},{"boxShadow":"none","widgetName":"Progress_Modal","isCanvas":true,"displayName":"Modal","iconSVG":"/static/media/icon.4975978e9a961fb0bfb4e38de7ecc7c5.svg","searchTags":["dialog","popup","notification"],"topRow":56.0,"bottomRow":80.0,"parentRowSpace":10.0,"type":"MODAL_WIDGET","hideCard":false,"shouldScrollContents":false,"animateLoading":false,"parentColumnSpace":14.0625,"dynamicTriggerPathList":[],"leftColumn":14.0,"dynamicBindingPathList":[{"key":"borderRadius"}],"children":[{"boxShadow":"none","widgetName":"Canvas12Copy","displayName":"Canvas","topRow":0.0,"bottomRow":240.0,"parentRowSpace":1.0,"type":"CANVAS_WIDGET","canExtend":true,"hideCard":true,"shouldScrollContents":false,"minHeight":244.0,"parentColumnSpace":1.0,"dynamicTriggerPathList":[],"leftColumn":0.0,"dynamicBindingPathList":[{"key":"borderRadius"},{"key":"accentColor"}],"children":[{"boxShadow":"none","widgetName":"retry_Button","onClick":"{{FileUploadProcess.retryfunction()}}","buttonColor":"{{appsmith.theme.colors.primaryColor}}","dynamicPropertyPathList":[{"key":"isDisabled"},{"key":"onClick"}],"displayName":"Button","iconSVG":"/static/media/icon.cca026338f1c8eb6df8ba03d084c2fca.svg","searchTags":["click","submit"],"topRow":18.0,"bottomRow":22.0,"type":"BUTTON_WIDGET","hideCard":false,"animateLoading":true,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":31.0,"dynamicBindingPathList":[{"key":"buttonColor"},{"key":"borderRadius"},{"key":"isDisabled"}],"text":"Retry","isDisabled":"{{appsmith.store.closedisable=='False'}}","key":"5g8c8gayqk","isDeprecated":false,"rightColumn":47.0,"isDefaultClickDisabled":true,"widgetId":"531nvanhk8","buttonStyle":"PRIMARY","isVisible":true,"recaptchaType":"V3","version":1.0,"parentId":"6gsurmuvw7","renderMode":"CANVAS","isLoading":false,"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","buttonVariant":"SECONDARY","placement":"CENTER"},{"widgetName":"Error_text","displayName":"Text","iconSVG":"/static/media/icon.97c59b523e6f70ba6f40a10fc2c7c5b5.svg","searchTags":["typography","paragraph","label"],"topRow":13.0,"bottomRow":17.0,"type":"TEXT_WIDGET","hideCard":false,"animateLoading":false,"overflow":"NONE","fontFamily":"{{appsmith.theme.fontFamily.appFont}}","dynamicTriggerPathList":[],"leftColumn":3.0,"dynamicBindingPathList":[{"key":"fontFamily"},{"key":"borderRadius"},{"key":"text"}],"shouldTruncate":false,"truncateButtonColor":"#FFC13D","text":"{{appsmith.store.ErrorMessage}}","key":"dcsz6tjc0b","isDeprecated":false,"rightColumn":62.0,"textAlign":"LEFT","dynamicHeight":"FIXED","widgetId":"033bys4j2w","isVisible":true,"fontStyle":"BOLD","textColor":"#f87171","version":1.0,"parentId":"6gsurmuvw7","renderMode":"CANVAS","isLoading":false,"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","maxDynamicHeight":9000.0,"fontSize":"0.875rem","minDynamicHeight":4.0},{"widgetName":"Statename_text","displayName":"Text","iconSVG":"/static/media/icon.97c59b523e6f70ba6f40a10fc2c7c5b5.svg","searchTags":["typography","paragraph","label"],"topRow":2.0,"bottomRow":6.0,"type":"TEXT_WIDGET","hideCard":false,"animateLoading":false,"overflow":"NONE","fontFamily":"{{appsmith.theme.fontFamily.appFont}}","dynamicTriggerPathList":[],"leftColumn":3.0,"dynamicBindingPathList":[{"key":"fontFamily"},{"key":"borderRadius"},{"key":"text"},{"key":"textColor"}],"shouldTruncate":false,"truncateButtonColor":"#FFC13D","text":"{{appsmith.store.statename}}","key":"dcsz6tjc0b","isDeprecated":false,"rightColumn":43.0,"textAlign":"LEFT","dynamicHeight":"FIXED","widgetId":"e3ht1smss4","isVisible":true,"fontStyle":"BOLD","textColor":"{{appsmith.theme.colors.primaryColor}}","version":1.0,"parentId":"6gsurmuvw7","renderMode":"CANVAS","isLoading":false,"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","maxDynamicHeight":9000.0,"fontSize":"1.5rem","minDynamicHeight":4.0},{"boxShadow":"none","widgetName":"FileClose_Button","onClick":"{{storeValue('statename','Completed');await FileUploadProcess.runRefreshFunc().then(()=>closeModal('Progress_Modal'))}}","buttonColor":"{{appsmith.theme.colors.primaryColor}}","dynamicPropertyPathList":[{"key":"isDisabled"},{"key":"onClick"}],"displayName":"Button","iconSVG":"/static/media/icon.cca026338f1c8eb6df8ba03d084c2fca.svg","searchTags":["click","submit"],"topRow":18.0,"bottomRow":22.0,"type":"BUTTON_WIDGET","hideCard":false,"animateLoading":true,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":47.0,"dynamicBindingPathList":[{"key":"buttonColor"},{"key":"borderRadius"},{"key":"isDisabled"}],"text":"Close","isDisabled":"{{Error_text.text.length==0||appsmith.store.closedisable=='False'}}","key":"5g8c8gayqk","isDeprecated":false,"rightColumn":63.0,"isDefaultClickDisabled":true,"widgetId":"o1z5n0uf57","buttonStyle":"PRIMARY","isVisible":true,"recaptchaType":"V3","version":1.0,"parentId":"6gsurmuvw7","renderMode":"CANVAS","isLoading":false,"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","buttonVariant":"SECONDARY","placement":"CENTER"},{"widgetName":"Upload_Progress","progressType":"linear","isCanvas":false,"dynamicPropertyPathList":[{"key":"progress"}],"displayName":"Progress","iconSVG":"/static/media/icon.9b0d7b96a0223e8120bf6f14aca4154a.svg","searchTags":["percent"],"topRow":7.0,"bottomRow":13.0,"parentRowSpace":10.0,"type":"PROGRESS_WIDGET","isIndeterminate":false,"hideCard":false,"fillColor":"{{appsmith.theme.colors.primaryColor}}","parentColumnSpace":8.25,"dynamicTriggerPathList":[],"leftColumn":3.0,"dynamicBindingPathList":[{"key":"fillColor"},{"key":"borderRadius"},{"key":"progress"}],"key":"0kuaqx9xvs","showResult":true,"isDeprecated":false,"rightColumn":62.0,"counterClosewise":false,"widgetId":"ouoxhwdmz6","isVisible":true,"steps":"1","version":1.0,"parentId":"6gsurmuvw7","renderMode":"CANVAS","isLoading":false,"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","progress":"{{appsmith.store.progressstatus}}"}],"isDisabled":false,"key":"yu9isw81na","isDeprecated":false,"rightColumn":337.5,"detachFromLayout":true,"widgetId":"6gsurmuvw7","accentColor":"{{appsmith.theme.colors.primaryColor}}","isVisible":true,"version":1.0,"parentId":"eafrlxgvz5","renderMode":"CANVAS","isLoading":false,"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}"}],"key":"52gxsk3uoi","height":244.0,"isDeprecated":false,"rightColumn":38.0,"detachFromLayout":true,"dynamicHeight":"FIXED","widgetId":"eafrlxgvz5","canOutsideClickClose":true,"canEscapeKeyClose":true,"version":2.0,"parentId":"0","renderMode":"CANVAS","isLoading":false,"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","maxDynamicHeight":9000.0,"width":540.0,"minDynamicHeight":4.0},{"boxShadow":"none","widgetName":"Tabs1","isCanvas":true,"dynamicPropertyPathList":[{"key":"onTabSelected"}],"displayName":"Tabs","iconSVG":"/static/media/icon.74a6d653.svg","topRow":13.0,"bottomRow":74.0,"parentRowSpace":10.0,"type":"TABS_WIDGET","hideCard":false,"shouldScrollContents":false,"animateLoading":false,"parentColumnSpace":15.0625,"dynamicTriggerPathList":[{"key":"onTabSelected"}],"leftColumn":0.0,"dynamicBindingPathList":[{"key":"accentColor"}],"children":[{"tabId":"tab1","boxShadow":"none","widgetName":"Canvas1","displayName":"Canvas","topRow":0.0,"bottomRow":570.0,"parentRowSpace":1.0,"type":"CANVAS_WIDGET","canExtend":true,"hideCard":true,"shouldScrollContents":false,"minHeight":400.0,"parentColumnSpace":1.0,"dynamicTriggerPathList":[],"leftColumn":0.0,"dynamicBindingPathList":[],"children":[{"boxShadow":"none","widgetName":"Text4","borderColor":"transparent","dynamicPropertyPathList":[{"key":"textColor"},{"key":"fontSize"}],"displayName":"Text","iconSVG":"/static/media/icon.97c59b52.svg","topRow":0.0,"bottomRow":5.0,"parentRowSpace":10.0,"type":"TEXT_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":14.75,"dynamicTriggerPathList":[],"overflow":"NONE","fontFamily":"System Default","leftColumn":0.0,"dynamicBindingPathList":[{"key":"textColor"},{"key":"text"}],"borderWidth":"1","truncateButtonColor":"#FFC13D","text":"Estimate in {{ appsmith.store.currentStateName }} state","key":"0l7d6pdzs3","labelTextSize":"0.875rem","rightColumn":30.0,"textAlign":"CENTER","dynamicHeight":"FIXED","widgetId":"1ta1t1wzwn","isVisible":true,"fontStyle":"ITALIC,BOLD","textColor":"{{ GlobalVariables.LabelColor }}","version":1.0,"parentId":"ilepmp3eiu","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","maxDynamicHeight":9000.0,"fontSize":"1.125rem","minDynamicHeight":4.0},{"boxShadow":"none","widgetName":"PO_Details_Container","borderColor":"transparent","isCanvas":true,"dynamicPropertyPathList":[{"key":"borderRadius"}],"displayName":"Container","iconSVG":"/static/media/icon.1977dca3.svg","topRow":6.0,"bottomRow":54.0,"parentRowSpace":10.0,"type":"CONTAINER_WIDGET","hideCard":false,"animateLoading":true,"parentColumnSpace":16.125,"leftColumn":34.0,"children":[{"boxShadow":"none","widgetName":"Canvas18","displayName":"Canvas","topRow":0.0,"bottomRow":480.0,"parentRowSpace":1.0,"type":"CANVAS_WIDGET","canExtend":false,"hideCard":true,"minHeight":400.0,"parentColumnSpace":1.0,"leftColumn":0.0,"children":[{"mobileBottomRow":88.0,"widgetName":"Taxable_Checkbox","dynamicPropertyPathList":[{"key":"defaultCheckedState"}],"displayName":"Checkbox","iconSVG":"/static/media/icon.7b004ee098ca948e952234e7baec6d11.svg","searchTags":["boolean"],"topRow":40.0,"bottomRow":45.0,"parentRowSpace":10.0,"type":"CHECKBOX_WIDGET","alignWidget":"LEFT","hideCard":false,"mobileRightColumn":50.0,"animateLoading":false,"parentColumnSpace":10.46875,"dynamicTriggerPathList":[],"leftColumn":43.0,"dynamicBindingPathList":[{"key":"accentColor"},{"key":"borderRadius"},{"key":"defaultCheckedState"}],"labelPosition":"Left","labelTextColor":"#008695","isDisabled":false,"key":"ahxvw90zks","isRequired":false,"isDeprecated":false,"rightColumn":59.0,"dynamicHeight":"FIXED","widgetId":"bg2jzsolxi","accentColor":"{{appsmith.theme.colors.primaryColor}}","minWidth":450.0,"isVisible":true,"label":"Taxable","version":1.0,"parentId":"93hmypgv2l","tags":["Toggles"],"renderMode":"CANVAS","isLoading":false,"mobileTopRow":84.0,"responsiveBehavior":"fill","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","mobileLeftColumn":38.0,"defaultCheckedState":"{{Estimate_PO_Table.selectedRowIndex==-1?true:Estimate_PO_Table.selectedRow.Taxable}}","maxDynamicHeight":9000.0,"minDynamicHeight":4.0},{"boxShadow":"none","widgetName":"PO_PaymentTerm_Input","displayName":"Input","iconSVG":"/static/media/icon.9f505595.svg","topRow":39.0,"bottomRow":45.0,"parentRowSpace":10.0,"autoFocus":false,"type":"INPUT_WIDGET_V2","hideCard":false,"animateLoading":false,"parentColumnSpace":16.125,"dynamicTriggerPathList":[],"resetOnSubmit":true,"leftColumn":3.0,"dynamicBindingPathList":[{"key":"validation"},{"key":"defaultText"},{"key":"accentColor"}],"labelStyle":"","labelTextColor":"#008695","inputType":"TEXT","maxChars":"10","isDisabled":false,"key":"z664xfowd2","validation":"{{PO_PaymentTerm_Input.text.length>0 && PO_PaymentTerm_Input.text.length<=10}}","labelTextSize":"0.875rem","isRequired":true,"rightColumn":39.0,"dynamicHeight":"FIXED","widgetId":"y9ilpe0vli","accentColor":"{{appsmith.theme.colors.primaryColor}}","isVisible":true,"label":"Payment Term","version":2.0,"parentId":"93hmypgv2l","renderMode":"CANVAS","isLoading":false,"originalTopRow":42.0,"borderRadius":"0px","maxDynamicHeight":9000.0,"originalBottomRow":48.0,"iconAlign":"left","defaultText":"{{ PO_Details_Select.data?.find((row) => row.EId == Estimate_PO_Table.selectedRow.EstimateId)?.PaymentTerm || \"\" }}","minDynamicHeight":4.0},{"boxShadow":"none","widgetName":"PO_Number_Input","displayName":"Input","iconSVG":"/static/media/icon.9f505595.svg","topRow":0.0,"bottomRow":6.0,"parentRowSpace":10.0,"autoFocus":false,"type":"INPUT_WIDGET_V2","hideCard":false,"animateLoading":false,"parentColumnSpace":16.125,"dynamicTriggerPathList":[],"resetOnSubmit":true,"leftColumn":3.0,"dynamicBindingPathList":[{"key":"validation"},{"key":"defaultText"},{"key":"accentColor"}],"labelStyle":"","labelTextColor":"#008695","inputType":"TEXT","maxChars":"20","isDisabled":false,"key":"z664xfowd2","validation":"{{PO_Number_Input.text.length> 0 && PO_Number_Input.text.length<=20}}","labelTextSize":"0.875rem","isRequired":true,"rightColumn":59.0,"dynamicHeight":"FIXED","widgetId":"zc407062ij","accentColor":"{{appsmith.theme.colors.primaryColor}}","isVisible":true,"label":"PO #","version":2.0,"parentId":"93hmypgv2l","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","maxDynamicHeight":9000.0,"iconAlign":"left","defaultText":"{{ PO_Details_Select.data?.find((row) => row.EId == Estimate_PO_Table.selectedRow.EstimateId)?.PurchaseOrderNumber || \"\" }}","minDynamicHeight":4.0},{"boxShadow":"none","widgetName":"PO_Description_Input","displayName":"Input","iconSVG":"/static/media/icon.9f505595.svg","topRow":7.0,"bottomRow":22.0,"parentRowSpace":10.0,"autoFocus":false,"type":"INPUT_WIDGET_V2","hideCard":false,"animateLoading":false,"parentColumnSpace":16.125,"dynamicTriggerPathList":[],"resetOnSubmit":true,"leftColumn":3.0,"dynamicBindingPathList":[{"key":"validation"},{"key":"accentColor"},{"key":"defaultText"}],"labelStyle":"","labelTextColor":"#008695","inputType":"MULTI_LINE_TEXT","isDisabled":false,"key":"z664xfowd2","validation":"{{PO_Description_Input.text.length>0}}","labelTextSize":"0.875rem","isRequired":true,"rightColumn":59.0,"dynamicHeight":"FIXED","widgetId":"3bbvjjbuya","accentColor":"{{appsmith.theme.colors.primaryColor}}","isVisible":true,"label":"PO Description","version":2.0,"parentId":"93hmypgv2l","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","maxDynamicHeight":9000.0,"shouldAllowAutofill":false,"iconAlign":"left","defaultText":"{{ PO_Details_Select.data?.find((row) => row.EId == Estimate_PO_Table.selectedRow.EstimateId)?.PurchaseOrderDescription || \"\" }}","minDynamicHeight":4.0},{"boxShadow":"none","widgetName":"PO_BillTo_Input","displayName":"Input","iconSVG":"/static/media/icon.9f505595.svg","topRow":23.0,"bottomRow":30.0,"parentRowSpace":10.0,"autoFocus":false,"type":"INPUT_WIDGET_V2","hideCard":false,"animateLoading":false,"parentColumnSpace":16.125,"dynamicTriggerPathList":[],"resetOnSubmit":true,"leftColumn":3.0,"dynamicBindingPathList":[{"key":"validation"},{"key":"accentColor"},{"key":"defaultText"}],"labelStyle":"","labelTextColor":"#008695","inputType":"TEXT","isDisabled":false,"key":"z664xfowd2","validation":"{{PO_BillTo_Input.text.length>0}}","labelTextSize":"0.875rem","isRequired":true,"rightColumn":59.0,"dynamicHeight":"FIXED","widgetId":"x4zht876og","accentColor":"{{appsmith.theme.colors.primaryColor}}","isVisible":true,"label":"Bill To","version":2.0,"parentId":"93hmypgv2l","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","maxDynamicHeight":9000.0,"shouldAllowAutofill":false,"iconAlign":"left","defaultText":"{{ PO_Details_Select.data?.find((row) => row.EId == Estimate_PO_Table.selectedRow.EstimateId)?.BillTo || \"\" }}","minDynamicHeight":4.0},{"boxShadow":"none","widgetName":"PO_ShipTo_Input","displayName":"Input","iconSVG":"/static/media/icon.9f505595.svg","topRow":31.0,"bottomRow":38.0,"parentRowSpace":10.0,"autoFocus":false,"type":"INPUT_WIDGET_V2","hideCard":false,"animateLoading":false,"parentColumnSpace":16.125,"dynamicTriggerPathList":[],"resetOnSubmit":true,"leftColumn":3.0,"dynamicBindingPathList":[{"key":"validation"},{"key":"defaultText"},{"key":"accentColor"}],"labelStyle":"","labelTextColor":"#008695","inputType":"TEXT","isDisabled":false,"key":"z664xfowd2","validation":"{{PO_ShipTo_Input.text.length>0}}","labelTextSize":"0.875rem","isRequired":true,"rightColumn":59.0,"dynamicHeight":"FIXED","widgetId":"1jx3jjxz3x","accentColor":"{{appsmith.theme.colors.primaryColor}}","isVisible":true,"label":"Ship To","version":2.0,"parentId":"93hmypgv2l","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","maxDynamicHeight":9000.0,"shouldAllowAutofill":false,"iconAlign":"left","defaultText":"{{ PO_Details_Select.data?.find((row) => row.EId == Estimate_PO_Table.selectedRow.EstimateId)?.ShipTo || \"\" }}","minDynamicHeight":4.0}],"key":"f3ddq5yh0c","labelTextSize":"0.875rem","rightColumn":387.0,"detachFromLayout":true,"widgetId":"93hmypgv2l","containerStyle":"none","isVisible":true,"version":1.0,"parentId":"ue54cidlum","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px"}],"borderWidth":"0","key":"h92fjhihn7","labelTextSize":"0.875rem","backgroundColor":"#FFFFFF","rightColumn":64.0,"dynamicHeight":"FIXED","widgetId":"ue54cidlum","containerStyle":"card","isVisible":true,"version":1.0,"parentId":"ilepmp3eiu","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","maxDynamicHeight":9000.0,"minDynamicHeight":4.0},{"boxShadow":"none","widgetName":"PO_Details_Buttons_Container","borderColor":"transparent","isCanvas":true,"dynamicPropertyPathList":[{"key":"borderRadius"}],"displayName":"Container","iconSVG":"/static/media/icon.1977dca3.svg","topRow":0.0,"bottomRow":6.0,"parentRowSpace":10.0,"type":"CONTAINER_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":13.5732421875,"dynamicTriggerPathList":[],"leftColumn":43.0,"dynamicBindingPathList":[],"children":[{"boxShadow":"none","widgetName":"SalesDetails_Buttons_CanvasCopy","displayName":"Canvas","topRow":0.0,"bottomRow":60.0,"parentRowSpace":1.0,"type":"CANVAS_WIDGET","canExtend":false,"hideCard":true,"minHeight":400.0,"parentColumnSpace":1.0,"leftColumn":0.0,"dynamicBindingPathList":[],"children":[{"boxShadow":"0px 0px 4px 3px rgba(0, 0, 0, 0.25)","widgetName":"PO_Reset_Button","onClick":"{{ GlobalVariables.resetForm([\"Estimate_PO_Table\",\"PO_Details_Container\"]) }}","buttonColor":"#008695","dynamicPropertyPathList":[{"key":"onClick"},{"key":"boxShadow"}],"displayName":"Icon Button","iconSVG":"/static/media/icon.1a0c634a.svg","topRow":0.0,"bottomRow":4.0,"parentRowSpace":10.0,"type":"ICON_BUTTON_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":15.0625,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":21.0,"dynamicBindingPathList":[],"isDisabled":false,"key":"x5byygbcp7","labelTextSize":"0.875rem","rightColumn":28.0,"iconName":"reset","widgetId":"cv0ug4qrov","isVisible":true,"version":1.0,"parentId":"zzop00kun4","renderMode":"CANVAS","isLoading":false,"borderRadius":"0.375rem","buttonVariant":"TERTIARY"},{"boxShadow":"0px 0px 4px 3px rgba(0, 0, 0, 0.25)","widgetName":"PO_Create_Button","onClick":"{{PageObjects.insertPO(Estimate_PO_Table.selectedRow.EstimateId,PO_Number_Input.text,PO_Description_Input.text,PO_BillTo_Input.text,PO_ShipTo_Input.text,PO_PaymentTerm_Input.text,Taxable_Checkbox.isChecked)}}","buttonColor":"#008695","dynamicPropertyPathList":[{"key":"isDisabled"},{"key":"onClick"},{"key":"boxShadow"}],"displayName":"Icon Button","iconSVG":"/static/media/icon.1a0c634a.svg","topRow":0.0,"bottomRow":4.0,"parentRowSpace":10.0,"type":"ICON_BUTTON_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":5.3359375,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":29.0,"dynamicBindingPathList":[{"key":"isDisabled"}],"isDisabled":"{{PageObjects.DisablePODetailsInsertButton() || PO_Details_Select.data?.find((row) => row.EId == Estimate_PO_Table.selectedRow.EstimateId)!=null}}","key":"wqh17u5h8b","labelTextSize":"0.875rem","rightColumn":39.0,"iconName":"plus","widgetId":"rruwge6tjr","isVisible":true,"version":1.0,"parentId":"zzop00kun4","renderMode":"CANVAS","isLoading":false,"borderRadius":"0.375rem","buttonVariant":"TERTIARY"},{"boxShadow":"0px 0px 4px 3px rgba(0, 0, 0, 0.25)","widgetName":"PO_Update_Button","onClick":"{{PageObjects.updatePO(PO_Number_Input.text,PO_Description_Input.text,PO_BillTo_Input.text,PO_ShipTo_Input.text,PO_PaymentTerm_Input.text,Taxable_Checkbox.isChecked)}}","buttonColor":"#008695","dynamicPropertyPathList":[{"key":"isDisabled"},{"key":"onClick"},{"key":"boxShadow"}],"displayName":"Icon Button","iconSVG":"/static/media/icon.1a0c634a.svg","topRow":0.0,"bottomRow":4.0,"parentRowSpace":10.0,"type":"ICON_BUTTON_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":5.3359375,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":41.0,"dynamicBindingPathList":[{"key":"isDisabled"}],"isDisabled":"{{PageObjects.DisablePODetailsUpdateButton() || PO_Details_Select.data?.find((row) => row.EId == Estimate_PO_Table.selectedRow.EstimateId)==null}}","key":"wqh17u5h8b","labelTextSize":"0.875rem","rightColumn":46.0,"iconName":"edit","widgetId":"zbv8egi0gm","isVisible":true,"version":1.0,"parentId":"zzop00kun4","renderMode":"CANVAS","isLoading":false,"borderRadius":"0.375rem","buttonVariant":"TERTIARY"},{"boxShadow":"0px 0px 4px 3px rgba(0, 0, 0, 0.25)","widgetName":"PO_Delete_Button","onClick":"{{PageObjects.deletePO(PO_Details_Select.data?.find((row) => row.EId == Estimate_PO_Table.selectedRow.EstimateId)?.PurchaseOrderId)}}","buttonColor":"#008695","dynamicPropertyPathList":[{"key":"isDisabled"},{"key":"onClick"},{"key":"boxShadow"}],"displayName":"Icon Button","iconSVG":"/static/media/icon.1a0c634a.svg","topRow":0.0,"bottomRow":4.0,"parentRowSpace":10.0,"type":"ICON_BUTTON_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":5.3359375,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":52.0,"dynamicBindingPathList":[{"key":"isDisabled"}],"isDisabled":"{{Estimate_PO_Table.selectedRowIndex == -1 || appsmith.store.currentStateName == 'Completed' || PO_Details_Select.data?.find((row) => row.EId == Estimate_PO_Table.selectedRow.EstimateId)==null}}","key":"wqh17u5h8b","labelTextSize":"0.875rem","rightColumn":54.0,"iconName":"trash","widgetId":"b35dpnnmds","isVisible":true,"version":1.0,"parentId":"zzop00kun4","renderMode":"CANVAS","isLoading":false,"borderRadius":"0.375rem","buttonVariant":"TERTIARY"}],"key":"62kn4szsbb","labelTextSize":"0.875rem","rightColumn":325.7578125,"detachFromLayout":true,"widgetId":"zzop00kun4","containerStyle":"none","isVisible":true,"version":1.0,"parentId":"ehqrrxy8em","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px"}],"borderWidth":"0","key":"zkrysm8hzk","labelTextSize":"0.875rem","backgroundColor":"#FFFFFF","rightColumn":64.0,"dynamicHeight":"FIXED","widgetId":"ehqrrxy8em","containerStyle":"card","isVisible":true,"version":1.0,"parentId":"ilepmp3eiu","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","maxDynamicHeight":9000.0,"minDynamicHeight":4.0},{"boxShadow":"none","isVisibleDownload":false,"iconSVG":"/static/media/icon.db8a9cbd.svg","topRow":6.0,"isSortable":true,"type":"TABLE_WIDGET","animateLoading":false,"dynamicBindingPathList":[{"key":"tableData"},{"key":"accentColor"},{"key":"primaryColumns.EstimateNumber.computedValue"},{"key":"primaryColumns.SalesNumber.computedValue"},{"key":"primaryColumns.EstimateId.computedValue"},{"key":"primaryColumns.SalesDescription.computedValue"},{"key":"primaryColumns.Taxable.computedValue"}],"leftColumn":0.0,"delimiter":",","accentColor":"{{appsmith.theme.colors.primaryColor}}","isVisibleFilters":false,"isVisible":true,"enableClientSideSearch":false,"version":3.0,"totalRecordsCount":0.0,"isLoading":false,"childStylesheet":{"button":{"buttonColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"menuButton":{"menuColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"iconButton":{"menuColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"}},"borderRadius":"0px","columnSizeMap":{"task":245.0,"step":62.0,"status":75.0,"sales_":83.0,"Client":66.0,"Description":712.375,"Number":94.0,"customColumn1":142.0,"EstimateId":112.0,"EstimateNumber":100.0,"SalesNumber":93.0,"Taxable":99.0,"SalesDescription":393.0},"widgetName":"Estimate_PO_Table","defaultPageSize":0.0,"columnOrder":["EstimateNumber","SalesNumber","EstimateId","SalesDescription","Taxable"],"dynamicPropertyPathList":[{"key":"onRowSelected"}],"displayName":"Table","bottomRow":54.0,"parentRowSpace":10.0,"defaultSelectedRow":"-1","hideCard":false,"parentColumnSpace":14.4375,"dynamicTriggerPathList":[{"key":"onRowSelected"}],"primaryColumns":{"EstimateNumber":{"index":1.0,"width":150.0,"id":"EstimateNumber","horizontalAlignment":"LEFT","verticalAlignment":"CENTER","columnType":"text","textColor":"","textSize":"0.875rem","enableFilter":true,"enableSort":true,"isVisible":true,"isDisabled":false,"isCellVisible":true,"isDerived":false,"label":"Estimate#","computedValue":"{{Estimate_PO_Table.sanitizedTableData.map((currentRow) => ( currentRow.EstimateNumber))}}","cellBackground":""},"SalesNumber":{"index":2.0,"width":150.0,"id":"SalesNumber","horizontalAlignment":"LEFT","verticalAlignment":"CENTER","columnType":"text","textColor":"","textSize":"0.875rem","enableFilter":true,"enableSort":true,"isVisible":true,"isDisabled":false,"isCellVisible":true,"isDerived":false,"label":"Sales#","computedValue":"{{Estimate_PO_Table.sanitizedTableData.map((currentRow) => ( currentRow.SalesNumber))}}","cellBackground":""},"EstimateId":{"index":2.0,"width":150.0,"id":"EstimateId","horizontalAlignment":"LEFT","verticalAlignment":"CENTER","columnType":"text","textSize":"0.875rem","enableFilter":true,"enableSort":true,"isVisible":false,"isDisabled":false,"isCellVisible":true,"isDerived":false,"label":"EstimateId","computedValue":"{{Estimate_PO_Table.sanitizedTableData.map((currentRow) => ( currentRow.EstimateId))}}"},"SalesDescription":{"index":3.0,"width":150.0,"id":"SalesDescription","horizontalAlignment":"LEFT","verticalAlignment":"CENTER","columnType":"text","textSize":"0.875rem","enableFilter":true,"enableSort":true,"isVisible":true,"isDisabled":false,"isCellVisible":true,"isDerived":false,"label":"Sales Description","computedValue":"{{Estimate_PO_Table.sanitizedTableData.map((currentRow) => ( currentRow.SalesDescription))}}"},"Taxable":{"index":4.0,"width":150.0,"id":"Taxable","horizontalAlignment":"LEFT","verticalAlignment":"CENTER","columnType":"text","textSize":"0.875rem","enableFilter":true,"enableSort":true,"isVisible":true,"isDisabled":false,"isCellVisible":true,"isDerived":false,"label":"Taxable","computedValue":"{{Estimate_PO_Table.sanitizedTableData.map((currentRow) => ( currentRow.Taxable))}}"}},"onRowSelected":"{{Estimates_POItems_Select.run({'EId':Estimate_PO_Table.selectedRow.EstimateId});PO_Details_Select.run()}}","key":"r65rbl7l5u","derivedColumns":{},"labelTextSize":"0.875rem","rightColumn":34.0,"textSize":"0.875rem","widgetId":"p0r23vkzza","tableData":"{{Estimate_Select.data}}","label":"Data","searchKey":"","parentId":"ilepmp3eiu","renderMode":"CANVAS","horizontalAlignment":"LEFT","isVisibleSearch":true,"isVisiblePagination":true,"verticalAlignment":"CENTER"}],"isDisabled":false,"key":"ck656xey1j","labelTextSize":"0.875rem","tabName":"PO Details","rightColumn":361.5,"detachFromLayout":true,"widgetId":"ilepmp3eiu","isVisible":true,"version":1.0,"parentId":"2sohwf308y","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px"},{"tabId":"tab2","boxShadow":"none","widgetName":"Canvas2","displayName":"Canvas","topRow":0.0,"bottomRow":570.0,"parentRowSpace":1.0,"type":"CANVAS_WIDGET","canExtend":true,"hideCard":true,"shouldScrollContents":false,"minHeight":400.0,"parentColumnSpace":1.0,"dynamicTriggerPathList":[],"leftColumn":0.0,"dynamicBindingPathList":[],"children":[{"boxShadow":"0px 0px 2px 1.5px rgba(0, 0, 0, 0.25)","mobileBottomRow":4.0,"widgetName":"PopUp_Button","onClick":"{{storeValue('progressstatus','0');showModal('FileUpload_Modal');EPOAttachments_Select.run({\"POId\":PO_Table.selectedRow.Id});storeValue('ActualFileName','');storeValue('POId',PO_Table.selectedRow.Id);storeValue('statename','FileCheck');storeValue('progressstatus',0);}}","buttonColor":"{{appsmith.theme.colors.primaryColor}}","dynamicPropertyPathList":[{"key":"isDisabled"},{"key":"onClick"},{"key":"boxShadow"},{"key":"isVisible"}],"displayName":"Icon button","iconSVG":"/static/media/icon.80fc7466c0d7181ec0271de7fda795ec.svg","searchTags":["click","submit"],"topRow":0.0,"bottomRow":4.0,"tooltip":"Upload Estimate Files","parentRowSpace":10.0,"type":"ICON_BUTTON_WIDGET","hideCard":false,"mobileRightColumn":62.0,"animateLoading":false,"parentColumnSpace":17.625,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":61.0,"dynamicBindingPathList":[{"key":"buttonColor"},{"key":"isDisabled"},{"key":"isVisible"}],"isDisabled":"{{PO_Table.selectedRowIndex==-1}}","key":"dhazzocl7v","isDeprecated":false,"rightColumn":64.0,"iconName":"cloud-upload","widgetId":"10ymql1gow","minWidth":50.0,"isVisible":"{{appsmith.store.currentStateName=='EnterPO'||appsmith.store.currentStateName=='Completed'}}","version":1.0,"parentId":"84vmmikvyv","renderMode":"CANVAS","isLoading":false,"mobileTopRow":0.0,"responsiveBehavior":"hug","borderRadius":"0.375rem","mobileLeftColumn":58.0,"buttonVariant":"SECONDARY"},{"boxShadow":"none","widgetName":"Text4Copy","borderColor":"","dynamicPropertyPathList":[{"key":"textColor"},{"key":"fontSize"}],"displayName":"Text","iconSVG":"/static/media/icon.97c59b52.svg","topRow":0.0,"bottomRow":4.0,"parentRowSpace":10.0,"type":"TEXT_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":14.75,"dynamicTriggerPathList":[],"overflow":"NONE","fontFamily":"System Default","leftColumn":0.0,"dynamicBindingPathList":[{"key":"textColor"},{"key":"text"}],"borderWidth":"5","truncateButtonColor":"#FFC13D","text":"Estimate in {{ Process.getInitialState() }} state","key":"0l7d6pdzs3","labelTextSize":"0.875rem","rightColumn":20.0,"textAlign":"LEFT","dynamicHeight":"FIXED","widgetId":"w72rzls4oj","isVisible":true,"fontStyle":"ITALIC,BOLD","textColor":"{{ GlobalVariables.LabelColor }}","version":1.0,"parentId":"84vmmikvyv","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","maxDynamicHeight":9000.0,"fontSize":"1.125rem","minDynamicHeight":4.0},{"boxShadow":"none","widgetName":"PO_Item_Container","borderColor":"transparent","isCanvas":true,"dynamicPropertyPathList":[{"key":"borderRadius"}],"displayName":"Container","iconSVG":"/static/media/icon.1977dca3.svg","topRow":37.0,"bottomRow":55.0,"parentRowSpace":10.0,"type":"CONTAINER_WIDGET","hideCard":false,"shouldScrollContents":false,"animateLoading":true,"parentColumnSpace":16.125,"dynamicTriggerPathList":[],"leftColumn":21.0,"dynamicBindingPathList":[],"children":[{"boxShadow":"none","widgetName":"Canvas10","displayName":"Canvas","topRow":0.0,"bottomRow":180.0,"parentRowSpace":1.0,"type":"CANVAS_WIDGET","canExtend":false,"hideCard":true,"minHeight":400.0,"parentColumnSpace":1.0,"leftColumn":0.0,"children":[{"boxShadow":"none","widgetName":"POItem_SaleTax_Input","dynamicPropertyPathList":[{"key":"isDisabled"}],"displayName":"Input","iconSVG":"/static/media/icon.9f505595.svg","topRow":1.0,"bottomRow":8.0,"parentRowSpace":10.0,"autoFocus":false,"type":"INPUT_WIDGET_V2","hideCard":false,"animateLoading":false,"parentColumnSpace":16.125,"dynamicTriggerPathList":[],"resetOnSubmit":true,"leftColumn":43.0,"dynamicBindingPathList":[{"key":"validation"},{"key":"defaultText"},{"key":"accentColor"},{"key":"isDisabled"}],"labelStyle":"","labelTextColor":"#008695","inputType":"TEXT","maxChars":"10","isDisabled":"{{PO_Table.selectedRow.Taxable==false}}","key":"z664xfowd2","validation":"{{POItem_SaleTax_Input.text.length>0}}","labelTextSize":"0.875rem","isRequired":true,"rightColumn":63.0,"dynamicHeight":"FIXED","widgetId":"n2slwgjd5l","accentColor":"{{appsmith.theme.colors.primaryColor}}","isVisible":true,"label":"Sales Tax","version":2.0,"parentId":"n7l4yn62tq","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","maxDynamicHeight":9000.0,"iconAlign":"left","defaultText":"{{PO_Item_Table.selectedRowIndex == -1 ? 0 :PO_Item_Table.selectedRow.SalesTax}}","minDynamicHeight":4.0},{"boxShadow":"none","widgetName":"POItem_Number_Input","displayName":"Input","iconSVG":"/static/media/icon.9f505595.svg","topRow":1.0,"bottomRow":8.0,"parentRowSpace":10.0,"autoFocus":false,"type":"INPUT_WIDGET_V2","hideCard":false,"animateLoading":false,"parentColumnSpace":16.125,"dynamicTriggerPathList":[],"resetOnSubmit":true,"leftColumn":0.0,"dynamicBindingPathList":[{"key":"validation"},{"key":"defaultText"},{"key":"accentColor"}],"labelStyle":"","labelTextColor":"#008695","inputType":"TEXT","maxChars":"10","isDisabled":false,"key":"z664xfowd2","validation":"{{POItem_Number_Input.text.length>0}}","labelTextSize":"0.875rem","isRequired":true,"rightColumn":20.0,"dynamicHeight":"FIXED","widgetId":"6y95tht36c","accentColor":"{{appsmith.theme.colors.primaryColor}}","isVisible":true,"label":"PO Item #","version":2.0,"parentId":"n7l4yn62tq","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","maxDynamicHeight":9000.0,"iconAlign":"left","defaultText":"{{PO_Item_Table.selectedRowIndex == -1 ? \"\" : PO_Item_Table.selectedRow.Number}}","minDynamicHeight":4.0},{"boxShadow":"none","widgetName":"POItem_Description_Input","displayName":"Input","iconSVG":"/static/media/icon.9f505595.svg","topRow":8.0,"bottomRow":16.0,"parentRowSpace":10.0,"autoFocus":false,"type":"INPUT_WIDGET_V2","hideCard":false,"animateLoading":false,"parentColumnSpace":16.125,"dynamicTriggerPathList":[],"resetOnSubmit":true,"leftColumn":0.0,"dynamicBindingPathList":[{"key":"defaultText"},{"key":"validation"},{"key":"accentColor"}],"labelStyle":"","labelTextColor":"#008695","inputType":"MULTI_LINE_TEXT","isDisabled":false,"key":"z664xfowd2","validation":"{{POItem_Description_Input.text.length > 0}}","labelTextSize":"0.875rem","isRequired":true,"rightColumn":41.0,"dynamicHeight":"FIXED","widgetId":"6156vuvfwn","accentColor":"{{appsmith.theme.colors.primaryColor}}","isVisible":true,"label":"Description","version":2.0,"parentId":"n7l4yn62tq","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","maxDynamicHeight":9000.0,"iconAlign":"left","defaultText":"{{PO_Item_Table.selectedRowIndex == -1 ? \"\" :PO_Item_Table.selectedRow.Description}}","minDynamicHeight":4.0},{"boxShadow":"none","widgetName":"POItem_Quantity_Input","displayName":"Input","iconSVG":"/static/media/icon.9f505595.svg","topRow":1.0,"bottomRow":8.0,"parentRowSpace":10.0,"autoFocus":false,"type":"INPUT_WIDGET_V2","hideCard":false,"animateLoading":false,"parentColumnSpace":16.125,"dynamicTriggerPathList":[],"resetOnSubmit":true,"leftColumn":23.0,"dynamicBindingPathList":[{"key":"validation"},{"key":"defaultText"},{"key":"accentColor"}],"labelStyle":"","labelTextColor":"#008695","inputType":"TEXT","isDisabled":false,"key":"z664xfowd2","validation":"{{POItem_Quantity_Input.text.length>0 && parseFloat(POItem_Quantity_Input.text) >=0}}","labelTextSize":"0.875rem","isRequired":true,"rightColumn":41.0,"dynamicHeight":"FIXED","widgetId":"oz2xzclo5d","accentColor":"{{appsmith.theme.colors.primaryColor}}","isVisible":true,"label":"Quantity","version":2.0,"parentId":"n7l4yn62tq","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","maxDynamicHeight":9000.0,"iconAlign":"left","defaultText":"{{PO_Item_Table.selectedRowIndex == -1 ? \"\" :PO_Item_Table.selectedRow.Quantity}}","minDynamicHeight":4.0},{"boxShadow":"none","widgetName":"POItem_Amount_Input","displayName":"Input","iconSVG":"/static/media/icon.9f505595.svg","topRow":8.0,"bottomRow":16.0,"parentRowSpace":10.0,"autoFocus":false,"type":"INPUT_WIDGET_V2","hideCard":false,"animateLoading":false,"parentColumnSpace":16.125,"dynamicTriggerPathList":[],"resetOnSubmit":true,"leftColumn":43.0,"dynamicBindingPathList":[{"key":"validation"},{"key":"defaultText"},{"key":"accentColor"}],"labelStyle":"","labelTextColor":"#008695","inputType":"MULTI_LINE_TEXT","isDisabled":false,"key":"z664xfowd2","validation":"{{POItem_Amount_Input.text.length>0 && parseFloat(POItem_Amount_Input.text) >= 0}}","labelTextSize":"0.875rem","isRequired":true,"rightColumn":63.0,"dynamicHeight":"FIXED","widgetId":"8cpcjnp55e","accentColor":"{{appsmith.theme.colors.primaryColor}}","isVisible":true,"label":"Amount","version":2.0,"parentId":"n7l4yn62tq","renderMode":"CANVAS","isLoading":false,"regex":"","borderRadius":"0px","maxDynamicHeight":9000.0,"iconAlign":"left","defaultText":"{{PO_Item_Table.selectedRowIndex == -1 ? \"\" :PO_Item_Table.selectedRow.Amount}}","minDynamicHeight":4.0}],"key":"pbcqjqrggx","labelTextSize":"0.875rem","rightColumn":387.0,"detachFromLayout":true,"widgetId":"n7l4yn62tq","containerStyle":"none","isVisible":true,"version":1.0,"parentId":"npsbqbw9pm","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px"}],"borderWidth":"0","key":"hfhwafj66g","labelTextSize":"0.875rem","backgroundColor":"#FFFFFF","rightColumn":64.0,"dynamicHeight":"FIXED","widgetId":"npsbqbw9pm","containerStyle":"card","isVisible":true,"version":1.0,"parentId":"84vmmikvyv","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","maxDynamicHeight":9000.0,"minDynamicHeight":4.0},{"boxShadow":"none","widgetName":"POItem_Buttons_Container","borderColor":"transparent","isCanvas":true,"dynamicPropertyPathList":[{"key":"borderRadius"}],"displayName":"Container","iconSVG":"/static/media/icon.1977dca3.svg","topRow":31.0,"bottomRow":37.0,"parentRowSpace":10.0,"type":"CONTAINER_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":13.5732421875,"dynamicTriggerPathList":[],"leftColumn":44.0,"dynamicBindingPathList":[],"children":[{"boxShadow":"none","widgetName":"SalesDetails_Buttons_CanvasCopyCopy","displayName":"Canvas","topRow":0.0,"bottomRow":60.0,"parentRowSpace":1.0,"type":"CANVAS_WIDGET","canExtend":false,"hideCard":true,"minHeight":400.0,"parentColumnSpace":1.0,"leftColumn":0.0,"dynamicBindingPathList":[],"children":[{"boxShadow":"0px 0px 4px 3px rgba(0, 0, 0, 0.25)","widgetName":"POItem_Reset_Button","onClick":"{{ GlobalVariables.resetForm([\"PO_Item_Table\",\"PO_Item_Container\",\"PO_Table\"]) }}","buttonColor":"#008695","dynamicPropertyPathList":[{"key":"onClick"},{"key":"boxShadow"}],"displayName":"Icon Button","iconSVG":"/static/media/icon.1a0c634a.svg","topRow":0.0,"bottomRow":4.0,"parentRowSpace":10.0,"type":"ICON_BUTTON_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":15.0625,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":29.0,"dynamicBindingPathList":[],"isDisabled":false,"key":"x5byygbcp7","labelTextSize":"0.875rem","rightColumn":36.0,"iconName":"reset","widgetId":"5agntcp0dr","isVisible":true,"version":1.0,"parentId":"q1zquc82b5","renderMode":"CANVAS","isLoading":false,"borderRadius":"0.375rem","buttonVariant":"TERTIARY"},{"boxShadow":"0px 0px 4px 3px rgba(0, 0, 0, 0.25)","widgetName":"POItem_Create_Button","onClick":"{{PageObjects.insertPOItem(PO_Table.selectedRow.Id,POItem_Number_Input.text,POItem_Description_Input.text,POItem_Quantity_Input.text,POItem_Amount_Input.text,POItem_SaleTax_Input.text)}}","buttonColor":"#008695","dynamicPropertyPathList":[{"key":"isDisabled"},{"key":"onClick"},{"key":"boxShadow"}],"displayName":"Icon Button","iconSVG":"/static/media/icon.1a0c634a.svg","topRow":0.0,"bottomRow":4.0,"parentRowSpace":10.0,"type":"ICON_BUTTON_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":5.3359375,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":38.0,"dynamicBindingPathList":[{"key":"isDisabled"}],"isDisabled":"{{ PageObjects.DisablePOItemDetailsInsertButton()}}","key":"wqh17u5h8b","labelTextSize":"0.875rem","rightColumn":45.0,"iconName":"plus","widgetId":"tjt6vsfkl0","isVisible":true,"version":1.0,"parentId":"q1zquc82b5","renderMode":"CANVAS","isLoading":false,"borderRadius":"0.375rem","buttonVariant":"TERTIARY"},{"boxShadow":"0px 0px 4px 3px rgba(0, 0, 0, 0.25)","widgetName":"POItem_Update_Button","onClick":"{{PageObjects.updatePOItem(POItem_Number_Input.text,POItem_Description_Input.text,POItem_Quantity_Input.text,POItem_Amount_Input.text,POItem_SaleTax_Input.text,PO_Item_Table.selectedRow.Id)}}","buttonColor":"#008695","dynamicPropertyPathList":[{"key":"isDisabled"},{"key":"onClick"},{"key":"boxShadow"}],"displayName":"Icon Button","iconSVG":"/static/media/icon.1a0c634a.svg","topRow":0.0,"bottomRow":4.0,"parentRowSpace":10.0,"type":"ICON_BUTTON_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":5.3359375,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":48.0,"dynamicBindingPathList":[{"key":"isDisabled"}],"isDisabled":"{{PO_Item_Table.selectedRowIndex == -1 || appsmith.store.currentStateName == 'Completed' ||GlobalVariables.disableCreateButton([POItem_Number_Input,POItem_Description_Input,POItem_Quantity_Input,POItem_Amount_Input,POItem_SaleTax_Input])}}","key":"wqh17u5h8b","labelTextSize":"0.875rem","rightColumn":53.0,"iconName":"edit","widgetId":"aaftc8zkpf","isVisible":true,"version":1.0,"parentId":"q1zquc82b5","renderMode":"CANVAS","isLoading":false,"borderRadius":"0.375rem","buttonVariant":"TERTIARY"},{"boxShadow":"0px 0px 4px 3px rgba(0, 0, 0, 0.25)","widgetName":"POItem_Delete_Button","onClick":"{{PageObjects.deletePOItem(PO_Item_Table.selectedRow.Id)}}","buttonColor":"#008695","dynamicPropertyPathList":[{"key":"isDisabled"},{"key":"onClick"},{"key":"boxShadow"}],"displayName":"Icon Button","iconSVG":"/static/media/icon.1a0c634a.svg","topRow":0.0,"bottomRow":4.0,"parentRowSpace":10.0,"type":"ICON_BUTTON_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":5.3359375,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":56.0,"dynamicBindingPathList":[{"key":"isDisabled"}],"isDisabled":"{{appsmith.store.currentStateName == 'Completed'||  PO_Item_Table.selectedRowIndex === -1 }}","key":"wqh17u5h8b","labelTextSize":"0.875rem","rightColumn":63.0,"iconName":"trash","widgetId":"h7buwd4oqc","isVisible":true,"version":1.0,"parentId":"q1zquc82b5","renderMode":"CANVAS","isLoading":false,"borderRadius":"0.375rem","buttonVariant":"TERTIARY"}],"key":"62kn4szsbb","labelTextSize":"0.875rem","rightColumn":325.7578125,"detachFromLayout":true,"widgetId":"q1zquc82b5","containerStyle":"none","isVisible":true,"version":1.0,"parentId":"kdl7qgrwco","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px"}],"borderWidth":"0","key":"zkrysm8hzk","labelTextSize":"0.875rem","backgroundColor":"#FFFFFF","rightColumn":64.0,"dynamicHeight":"FIXED","widgetId":"kdl7qgrwco","containerStyle":"card","isVisible":true,"version":1.0,"parentId":"84vmmikvyv","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","maxDynamicHeight":9000.0,"minDynamicHeight":4.0},{"boxShadow":"none","widgetName":"PO_Item_Table","defaultPageSize":0.0,"columnOrder":["Number","Description","Quantity","Amount","customColumn1","SalesTax","Id","PurchaseOrderId","Deleted"],"isVisibleDownload":false,"dynamicPropertyPathList":[],"displayName":"Table","iconSVG":"/static/media/icon.db8a9cbd.svg","topRow":4.0,"bottomRow":31.0,"isSortable":true,"parentRowSpace":10.0,"type":"TABLE_WIDGET","defaultSelectedRow":"-1","hideCard":false,"animateLoading":false,"parentColumnSpace":14.4375,"dynamicTriggerPathList":[],"dynamicBindingPathList":[{"key":"primaryColumns.Description.computedValue"},{"key":"primaryColumns.Number.computedValue"},{"key":"primaryColumns.Quantity.computedValue"},{"key":"primaryColumns.Amount.computedValue"},{"key":"primaryColumns.Id.computedValue"},{"key":"primaryColumns.PurchaseOrderId.computedValue"},{"key":"primaryColumns.Deleted.computedValue"},{"key":"tableData"},{"key":"primaryColumns.SalesTax.computedValue"},{"key":"derivedColumns.customColumn1.computedValue"},{"key":"primaryColumns.customColumn1.computedValue"},{"key":"accentColor"}],"leftColumn":21.0,"primaryColumns":{"Description":{"index":3.0,"width":150.0,"id":"Description","horizontalAlignment":"LEFT","verticalAlignment":"CENTER","columnType":"text","textSize":"0.875rem","enableFilter":true,"enableSort":true,"isVisible":true,"isDisabled":false,"isCellVisible":true,"isDerived":false,"label":"Description","computedValue":"{{PO_Item_Table.sanitizedTableData.map((currentRow) => ( currentRow.Description))}}","borderRadius":"0px","boxShadow":"none"},"Number":{"index":1.0,"width":150.0,"id":"Number","horizontalAlignment":"LEFT","verticalAlignment":"CENTER","columnType":"text","textSize":"0.875rem","enableFilter":true,"enableSort":true,"isVisible":true,"isDisabled":false,"isCellVisible":true,"isDerived":false,"label":"PO Item#","computedValue":"{{PO_Item_Table.sanitizedTableData.map((currentRow) => ( currentRow.Number))}}","borderRadius":"0px","boxShadow":"none"},"Quantity":{"index":2.0,"width":150.0,"id":"Quantity","horizontalAlignment":"LEFT","verticalAlignment":"CENTER","columnType":"text","textSize":"0.875rem","enableFilter":true,"enableSort":true,"isVisible":true,"isDisabled":false,"isCellVisible":true,"isDerived":false,"label":"Quantity","computedValue":"{{PO_Item_Table.sanitizedTableData.map((currentRow) => ( currentRow.Quantity))}}","borderRadius":"0px","boxShadow":"none"},"Amount":{"index":3.0,"width":150.0,"id":"Amount","horizontalAlignment":"LEFT","verticalAlignment":"CENTER","columnType":"text","textSize":"0.875rem","enableFilter":true,"enableSort":true,"isVisible":true,"isDisabled":false,"isCellVisible":true,"isDerived":false,"label":"Amount","computedValue":"{{PO_Item_Table.sanitizedTableData.map((currentRow) => ( currentRow.Amount))}}","borderRadius":"0px","boxShadow":"none"},"Id":{"index":0.0,"width":150.0,"id":"Id","horizontalAlignment":"LEFT","verticalAlignment":"CENTER","columnType":"text","textSize":"0.875rem","enableFilter":true,"enableSort":true,"isVisible":false,"isDisabled":false,"isCellVisible":true,"isDerived":false,"label":"Id","computedValue":"{{PO_Item_Table.sanitizedTableData.map((currentRow) => ( currentRow.Id))}}","borderRadius":"0px","boxShadow":"none"},"PurchaseOrderId":{"index":1.0,"width":150.0,"id":"PurchaseOrderId","horizontalAlignment":"LEFT","verticalAlignment":"CENTER","columnType":"text","textSize":"0.875rem","enableFilter":true,"enableSort":true,"isVisible":false,"isDisabled":false,"isCellVisible":true,"isDerived":false,"label":"PurchaseOrderId","computedValue":"{{PO_Item_Table.sanitizedTableData.map((currentRow) => ( currentRow.PurchaseOrderId))}}","borderRadius":"0px","boxShadow":"none"},"Deleted":{"index":6.0,"width":150.0,"id":"Deleted","horizontalAlignment":"LEFT","verticalAlignment":"CENTER","columnType":"text","textSize":"0.875rem","enableFilter":true,"enableSort":true,"isVisible":false,"isDisabled":false,"isCellVisible":true,"isDerived":false,"label":"Deleted","computedValue":"{{PO_Item_Table.sanitizedTableData.map((currentRow) => ( currentRow.Deleted))}}","borderRadius":"0px","boxShadow":"none"},"SalesTax":{"index":4.0,"width":150.0,"id":"SalesTax","horizontalAlignment":"LEFT","verticalAlignment":"CENTER","columnType":"text","textSize":"0.875rem","enableFilter":true,"enableSort":true,"isVisible":true,"isDisabled":false,"isCellVisible":true,"isDerived":false,"label":"SalesTax","computedValue":"{{PO_Item_Table.sanitizedTableData.map((currentRow) => ( currentRow.SalesTax))}}","borderRadius":"0px","boxShadow":"none"},"customColumn1":{"index":8.0,"width":150.0,"id":"customColumn1","columnType":"text","enableFilter":true,"enableSort":true,"isVisible":true,"isDisabled":false,"isCellVisible":true,"isDerived":true,"label":"Total","computedValue":"{{PO_Item_Table.sanitizedTableData.map((currentRow) => ( currentRow.Quantity * currentRow.Amount))}}","buttonStyle":"rgb(3, 179, 101)","buttonColor":"#03B365","menuColor":"#03B365","labelColor":"#FFFFFF","borderRadius":"0px","boxShadow":"none"}},"delimiter":",","key":"r65rbl7l5u","derivedColumns":{"customColumn1":{"index":8.0,"width":150.0,"id":"customColumn1","columnType":"text","enableFilter":true,"enableSort":true,"isVisible":true,"isDisabled":false,"isCellVisible":true,"isDerived":true,"label":"Total","computedValue":"{{PO_Item_Table.sanitizedTableData.map((currentRow) => ( currentRow.Quantity * currentRow.Amount))}}","buttonStyle":"rgb(3, 179, 101)","buttonColor":"#03B365","menuColor":"#03B365","labelColor":"#FFFFFF","borderRadius":"0px","boxShadow":"none"}},"labelTextSize":"0.875rem","rightColumn":64.0,"textSize":"0.875rem","widgetId":"0npduldf5h","accentColor":"{{appsmith.theme.colors.primaryColor}}","isVisibleFilters":false,"tableData":"{{PO_Table.selectedRowIndex ==-1?[]:PO_Item_Select.data}}","isVisible":true,"label":"Data","searchKey":"","enableClientSideSearch":false,"version":3.0,"totalRecordsCount":0.0,"parentId":"84vmmikvyv","renderMode":"CANVAS","isLoading":false,"horizontalAlignment":"LEFT","isVisibleSearch":true,"childStylesheet":{"button":{"buttonColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"menuButton":{"menuColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"iconButton":{"menuColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"}},"borderRadius":"0px","isVisiblePagination":true,"verticalAlignment":"CENTER","columnSizeMap":{"task":245.0,"step":62.0,"status":75.0,"Number":102.0,"Quantity":88.0,"Description":155.0,"Amount":94.0,"customColumn1":105.99999999999999,"SalesTax":123.0}},{"boxShadow":"none","isVisibleDownload":false,"iconSVG":"/static/media/icon.db8a9cbd.svg","topRow":4.0,"isSortable":true,"type":"TABLE_WIDGET","animateLoading":false,"dynamicBindingPathList":[{"key":"primaryColumns.Description.computedValue"},{"key":"tableData"},{"key":"primaryColumns.Id.computedValue"},{"key":"primaryColumns.PurchaseOrderNumber.computedValue"},{"key":"primaryColumns.EstimateNumber.computedValue"},{"key":"accentColor"},{"key":"primaryColumns.Taxable.computedValue"},{"key":"primaryColumns.EstId.computedValue"},{"key":"primaryColumns.SalesNumber.computedValue"},{"key":"primaryColumns.FileId.computedValue"}],"leftColumn":0.0,"delimiter":",","accentColor":"{{appsmith.theme.colors.primaryColor}}","isVisibleFilters":false,"isVisible":true,"enableClientSideSearch":false,"version":3.0,"totalRecordsCount":0.0,"isLoading":false,"childStylesheet":{"button":{"buttonColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"menuButton":{"menuColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"iconButton":{"menuColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"}},"borderRadius":"0px","columnSizeMap":{"task":245.0,"step":62.0,"status":75.0,"PO_":68.0,"Number":106.0,"PurchaseOrderNumber":118.0,"Description":196.0,"EstimateNumber":131.0,"Taxable":99.0,"SalesNumber":108.0},"widgetName":"PO_Table","defaultPageSize":0.0,"columnOrder":["Id","PurchaseOrderNumber","SalesNumber","Description","EstimateNumber","FileId","EstId","Taxable"],"dynamicPropertyPathList":[{"key":"onRowSelected"}],"displayName":"Table","bottomRow":55.0,"parentRowSpace":10.0,"defaultSelectedRow":"-1","hideCard":false,"parentColumnSpace":14.4375,"dynamicTriggerPathList":[{"key":"onRowSelected"}],"primaryColumns":{"Description":{"index":3.0,"width":150.0,"id":"Description","horizontalAlignment":"LEFT","verticalAlignment":"CENTER","columnType":"text","textSize":"0.875rem","enableFilter":true,"enableSort":true,"isVisible":true,"isDisabled":false,"isCellVisible":true,"isDerived":false,"label":"Description","computedValue":"{{PO_Table.sanitizedTableData.map((currentRow) => ( currentRow.Description))}}","borderRadius":"0px","boxShadow":"none"},"Id":{"index":0.0,"width":150.0,"id":"Id","horizontalAlignment":"LEFT","verticalAlignment":"CENTER","columnType":"text","textSize":"0.875rem","enableFilter":true,"enableSort":true,"isVisible":false,"isDisabled":false,"isCellVisible":true,"isDerived":false,"label":"Id","computedValue":"{{PO_Table.sanitizedTableData.map((currentRow) => ( currentRow.Id))}}","borderRadius":"0px","boxShadow":"none"},"PurchaseOrderNumber":{"index":1.0,"width":150.0,"id":"PurchaseOrderNumber","horizontalAlignment":"LEFT","verticalAlignment":"CENTER","columnType":"text","textSize":"0.875rem","enableFilter":true,"enableSort":true,"isVisible":true,"isDisabled":false,"isCellVisible":true,"isDerived":false,"label":"PO#","computedValue":"{{PO_Table.sanitizedTableData.map((currentRow) => ( currentRow.PurchaseOrderNumber))}}","borderRadius":"0px","boxShadow":"none"},"EstimateNumber":{"index":3.0,"width":150.0,"id":"EstimateNumber","horizontalAlignment":"LEFT","verticalAlignment":"CENTER","columnType":"text","textSize":"0.875rem","enableFilter":true,"enableSort":true,"isVisible":true,"isDisabled":false,"isCellVisible":true,"isDerived":false,"label":"Estimate#","computedValue":"{{PO_Table.sanitizedTableData.map((currentRow) => ( currentRow.EstimateNumber))}}","borderRadius":"0px","boxShadow":"none"},"Taxable":{"index":3.0,"width":150.0,"id":"Taxable","horizontalAlignment":"LEFT","verticalAlignment":"CENTER","columnType":"text","textColor":"","textSize":"0.875rem","enableFilter":true,"enableSort":true,"isVisible":true,"isDisabled":false,"isCellVisible":true,"isDerived":false,"label":"Taxable","computedValue":"{{PO_Table.sanitizedTableData.map((currentRow) => ( currentRow.Taxable))}}","cellBackground":""},"EstId":{"index":5.0,"width":150.0,"id":"EstId","horizontalAlignment":"LEFT","verticalAlignment":"CENTER","columnType":"text","textColor":"","textSize":"0.875rem","enableFilter":true,"enableSort":true,"isVisible":false,"isDisabled":false,"isCellVisible":true,"isDerived":false,"label":"EstId","computedValue":"{{PO_Table.sanitizedTableData.map((currentRow) => ( currentRow.EstId))}}","cellBackground":""},"SalesNumber":{"index":5.0,"width":150.0,"id":"SalesNumber","horizontalAlignment":"LEFT","verticalAlignment":"CENTER","columnType":"text","textColor":"","textSize":"0.875rem","enableFilter":true,"enableSort":true,"isVisible":true,"isDisabled":false,"isCellVisible":true,"isDerived":false,"label":"Sales#","computedValue":"{{PO_Table.sanitizedTableData.map((currentRow) => ( currentRow.SalesNumber))}}","cellBackground":""},"FileId":{"index":7.0,"width":150.0,"id":"FileId","horizontalAlignment":"LEFT","verticalAlignment":"CENTER","columnType":"text","textColor":"","textSize":"0.875rem","enableFilter":true,"enableSort":true,"isVisible":true,"isDisabled":false,"isCellVisible":true,"isDerived":false,"label":"FileId","computedValue":"{{PO_Table.sanitizedTableData.map((currentRow) => ( currentRow.FileId))}}","cellBackground":""}},"onRowSelected":"{{PO_Item_Select.run({'purchaseOrderId':PO_Table.selectedRow.Id });Estimates_POItems_Select.run({'EId':PO_Table.selectedRow.EstId})}}","key":"r65rbl7l5u","derivedColumns":{},"labelTextSize":"0.875rem","rightColumn":21.0,"textSize":"0.875rem","widgetId":"w13jcbujcw","tableData":"{{PO_Select.data}}","label":"Data","searchKey":"","parentId":"84vmmikvyv","renderMode":"CANVAS","horizontalAlignment":"LEFT","isVisibleSearch":true,"isVisiblePagination":true,"verticalAlignment":"CENTER"},{"boxShadow":"none","iconSVG":"/static/media/icon.f2c34197dbcf03595098986de898928f.svg","topRow":0.0,"labelWidth":"7","type":"INPUT_WIDGET_V2","animateLoading":false,"resetOnSubmit":true,"leftColumn":45.0,"dynamicBindingPathList":[{"key":"accentColor"},{"key":"labelTextColor"},{"key":"defaultText"}],"labelStyle":"","inputType":"TEXT","isDisabled":false,"isRequired":false,"dynamicHeight":"FIXED","accentColor":"{{appsmith.theme.colors.primaryColor}}","showStepArrows":false,"isVisible":true,"version":2.0,"tags":["Suggested","Inputs"],"isLoading":false,"borderRadius":"0.375rem","mobileBottomRow":87.0,"widgetName":"Input1","displayName":"Input","searchTags":["form","text input","number","textarea"],"bottomRow":4.0,"parentRowSpace":10.0,"autoFocus":false,"hideCard":false,"mobileRightColumn":30.0,"parentColumnSpace":10.46875,"dynamicTriggerPathList":[],"labelPosition":"Left","labelTextColor":"{{appsmith.theme.colors.primaryColor}}","key":"n83jl9ifyo","labelTextSize":"0.875rem","isDeprecated":false,"rightColumn":59.0,"widgetId":"pfj1pkkh0w","minWidth":450.0,"label":"Total PO Amount","parentId":"84vmmikvyv","labelAlignment":"left","renderMode":"CANVAS","mobileTopRow":80.0,"responsiveBehavior":"fill","mobileLeftColumn":10.0,"maxDynamicHeight":9000.0,"iconAlign":"left","defaultText":"{{PO_Item_Table.filteredTableData.reduce((total, row) => total + (Number(row.Quantity || 0) * Number(row.Amount || 0)), 0) }}\n","minDynamicHeight":4.0}],"isDisabled":false,"key":"ck656xey1j","labelTextSize":"0.875rem","tabName":"PO Item Details","rightColumn":361.5,"detachFromLayout":true,"widgetId":"84vmmikvyv","isVisible":true,"version":1.0,"parentId":"2sohwf308y","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px"}],"key":"s4m69sgoxe","labelTextSize":"0.875rem","rightColumn":64.0,"dynamicHeight":"FIXED","widgetId":"2sohwf308y","accentColor":"{{appsmith.theme.colors.primaryColor}}","defaultTab":"PO Details","onTabSelected":"{{GlobalVariables.resetWidgets([\"Estimate_PO_Table\",\"PO_Table\"]);Estimates_POItems_Select.data =''}}","shouldShowTabs":true,"tabsObj":{"tab1":{"label":"PO Details","id":"tab1","widgetId":"ilepmp3eiu","isVisible":true,"index":0.0},"tab2":{"label":"PO Item Details","id":"tab2","widgetId":"84vmmikvyv","isVisible":true,"index":1.0}},"isVisible":true,"version":3.0,"parentId":"0","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","maxDynamicHeight":9000.0,"minDynamicHeight":4.0},{"boxShadow":"none","widgetName":"Container1","borderColor":"transparent","isCanvas":true,"dynamicPropertyPathList":[{"key":"borderRadius"}],"displayName":"Container","iconSVG":"/static/media/icon.1977dca3.svg","topRow":0.0,"bottomRow":13.0,"parentRowSpace":10.0,"type":"CONTAINER_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":11.40625,"dynamicTriggerPathList":[],"leftColumn":0.0,"dynamicBindingPathList":[],"children":[{"boxShadow":"none","widgetName":"Canvas19","displayName":"Canvas","topRow":0.0,"bottomRow":130.0,"parentRowSpace":1.0,"type":"CANVAS_WIDGET","canExtend":false,"hideCard":true,"minHeight":400.0,"parentColumnSpace":1.0,"leftColumn":0.0,"children":[{"boxShadow":"0px 0px 4px 3px rgba(0, 0, 0, 0.25)none","widgetName":"Admin_Button","onClick":"{{navigateTo('Estimate State', {})}}","buttonColor":"{{appsmith.theme.colors.primaryColor}}","dynamicPropertyPathList":[{"key":"boxShadow"},{"key":"isVisible"}],"displayName":"Icon Button","iconSVG":"/static/media/icon.1a0c634ac75f9fa6b6ae7a8df882a3ba.svg","searchTags":["click","submit"],"topRow":0.0,"bottomRow":4.0,"parentRowSpace":10.0,"type":"ICON_BUTTON_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":14.0625,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":60.0,"dynamicBindingPathList":[{"key":"buttonColor"},{"key":"isVisible"}],"isDisabled":false,"key":"l5y4kk0mpp","isDeprecated":false,"rightColumn":64.0,"iconName":"settings","widgetId":"eeze0hr1hw","isVisible":"{{GlobalVariables.disableCorporateAdminButton()}}","version":1.0,"parentId":"zw45dze77r","renderMode":"CANVAS","isLoading":false,"borderRadius":"0.375rem","buttonVariant":"TERTIARY"},{"boxShadow":"none","widgetName":"Completed_EnterPO","onClick":"{{Process.clickArrow(\"Completed_EnterPO\")}}","buttonColor":"#03B365","dynamicPropertyPathList":[{"key":"isDisabled"},{"key":"onClick"}],"displayName":"Button","iconSVG":"/static/media/icon.cca02633.svg","topRow":4.0,"bottomRow":8.0,"tooltip":"Select an Estimate to move","parentRowSpace":10.0,"type":"BUTTON_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":9.59375,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":27.0,"dynamicBindingPathList":[{"key":"isDisabled"}],"text":"","isDisabled":"{{Process.disableArrow('Completed') || Tabs1.selectedTab != 'PO Details' || Estimate_PO_Table.selectedRow.POitemsNO == 0 }}","key":"tf8gjfw89k","labelTextSize":"0.875rem","rightColumn":31.0,"isDefaultClickDisabled":true,"iconName":"arrow-left","widgetId":"2igdj8y0vx","isVisible":true,"version":1.0,"recaptchaType":"V3","parentId":"zw45dze77r","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","buttonVariant":"TERTIARY","iconAlign":"left","placement":"CENTER"},{"boxShadow":"none","widgetName":"EnterPO_Completed","onClick":"{{Process.clickArrow(\"EnterPO_Completed\")}}","buttonColor":"#03B365","dynamicPropertyPathList":[{"key":"isDisabled"},{"key":"onClick"}],"displayName":"Button","iconSVG":"/static/media/icon.cca02633.svg","topRow":0.0,"bottomRow":4.0,"tooltip":"Select an Estimate to move","parentRowSpace":10.0,"type":"BUTTON_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":9.59375,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":27.0,"dynamicBindingPathList":[{"key":"isDisabled"}],"text":"","isDisabled":"{{(Estimates_POItems_Select.data.length!=''?((Tabs1.selectedTab=='PO Details' && Estimate_PO_Table.selectedRowIndex ==-1?true:false )||(Tabs1.selectedTab=='PO Item Details' && PO_Table.selectedRowIndex == -1?true:false)):true )||appsmith.store.currentStateName!='EnterPO'\n}}","key":"tf8gjfw89k","labelTextSize":"0.875rem","rightColumn":31.0,"isDefaultClickDisabled":true,"iconName":"arrow-right","widgetId":"pf2ibvjzqr","isVisible":true,"version":1.0,"recaptchaType":"V3","parentId":"zw45dze77r","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","buttonVariant":"TERTIARY","iconAlign":"left","placement":"CENTER"},{"boxShadow":"0px 0px 4px 3px rgba(0, 0, 0, 0.25)","widgetName":"Completed","onClick":"{{ Process.clickState('Completed', Estimate_Select) }}","buttonColor":"#008695","dynamicPropertyPathList":[{"key":"onClick"},{"key":"boxShadow"}],"displayName":"Button","iconSVG":"/static/media/icon.cca02633.svg","topRow":2.0,"bottomRow":7.0,"parentRowSpace":10.0,"type":"BUTTON_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":14.75,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":33.0,"dynamicBindingPathList":[],"text":"Completed","isDisabled":false,"key":"lf7byu5aeh","labelTextSize":"0.875rem","rightColumn":45.0,"isDefaultClickDisabled":true,"widgetId":"f6c1i46pji","isVisible":true,"recaptchaType":"V3","version":1.0,"parentId":"zw45dze77r","renderMode":"CANVAS","isLoading":false,"borderRadius":"0.375rem","buttonVariant":"SECONDARY","placement":"CENTER"},{"boxShadow":"0px 0px 4px 3px rgba(0, 0, 0, 0.25)","widgetName":"Prepare","onClick":"{{ Process.clickState('EnterPO', Estimate_Select) }}","buttonColor":"#008695","dynamicPropertyPathList":[{"key":"onClick"},{"key":"boxShadow"}],"displayName":"Button","iconSVG":"/static/media/icon.cca02633.svg","topRow":2.0,"bottomRow":7.0,"parentRowSpace":10.0,"type":"BUTTON_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":14.75,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":14.0,"dynamicBindingPathList":[],"text":"Enter PO","isDisabled":false,"key":"lf7byu5aeh","labelTextSize":"0.875rem","rightColumn":26.0,"isDefaultClickDisabled":true,"widgetId":"npwi6yzv23","isVisible":true,"recaptchaType":"V3","version":1.0,"parentId":"zw45dze77r","renderMode":"CANVAS","isLoading":false,"borderRadius":"0.375rem","buttonVariant":"SECONDARY","placement":"CENTER"}],"key":"l9tzu9lcjh","labelTextSize":"0.875rem","rightColumn":273.75,"detachFromLayout":true,"widgetId":"zw45dze77r","containerStyle":"none","isVisible":true,"version":1.0,"parentId":"cqtu3h2ly9","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px"}],"borderWidth":"0","key":"qenos2nsyf","labelTextSize":"0.875rem","backgroundColor":"#FFFFFF","rightColumn":64.0,"dynamicHeight":"FIXED","widgetId":"cqtu3h2ly9","containerStyle":"card","isVisible":true,"version":1.0,"parentId":"0","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","maxDynamicHeight":9000.0,"minDynamicHeight":4.0}]},"layoutOnLoadActions":[[{"id":"PO Entry_Estimate_Select","name":"Estimate_Select","confirmBeforeExecute":false,"pluginType":"DB","jsonPathKeys":[" appsmith.store?.currentStateName || 'EnterPO' ","appsmith.store.FilterRole","appsmith.user.username.split('@')[0]"],"timeoutInMillisecond":10000.0},{"id":"PO Entry_PO_Details_Select","name":"PO_Details_Select","confirmBeforeExecute":false,"pluginType":"DB","jsonPathKeys":[],"timeoutInMillisecond":10000.0}],[{"id":"PO Entry_EPOAttachments_Select","name":"EPOAttachments_Select","confirmBeforeExecute":false,"pluginType":"DB","jsonPathKeys":["this.params?.POId"],"timeoutInMillisecond":10000.0},{"id":"PO Entry_PO_Select","name":"PO_Select","confirmBeforeExecute":false,"pluginType":"DB","jsonPathKeys":[" appsmith.store?.currentStateName || 'EnterPO' ","appsmith.store.FilterRole","appsmith.user.username.split('@')[0]"],"timeoutInMillisecond":10000.0}],[{"id":"PO Entry_CorporateAdmin_Select","name":"CorporateAdmin_Select","confirmBeforeExecute":false,"pluginType":"DB","jsonPathKeys":["\"'\"+PageObjects.roles_with_access.join(\"','\")+\"'\""],"timeoutInMillisecond":10000.0},{"id":"PO Entry_Estimates_POItems_Select","name":"Estimates_POItems_Select","confirmBeforeExecute":false,"pluginType":"DB","jsonPathKeys":["this.params?.EId"],"timeoutInMillisecond":10000.0},{"id":"PO Entry_UserRoles_Select","name":"UserRoles_Select","confirmBeforeExecute":false,"pluginType":"DB","jsonPathKeys":["appsmith.user.username.split('@')[0]"],"timeoutInMillisecond":10000.0}],[{"id":"PO Entry_PageObjects.accessControl","name":"PageObjects.accessControl","collectionId":"PO Entry_PageObjects","confirmBeforeExecute":false,"pluginType":"JS","jsonPathKeys":["async () => {\n  await UserRoles_Select.run();\n  let role = '';\n  if (UserRoles_Select.data.find(row => row.Name === 'Sales Manager' || row.Name === 'Accounts Receivables')) {\n    console.log('111');\n    role = 'SalesManager';\n  } else if (UserRoles_Select.data.find(row => row.Name === 'Business Manager')) {\n    console.log('222');\n    role = 'BusinessManager';\n  }\n  await storeValue('FilterRole', role, false);\n  console.log('frole', appsmith.store.FilterRole);\n  await Estimate_Select.run();\n}"],"timeoutInMillisecond":10000.0}],[{"id":"PO Entry_PageObjects.selectInitialState","name":"PageObjects.selectInitialState","collectionId":"PO Entry_PageObjects","confirmBeforeExecute":false,"pluginType":"JS","jsonPathKeys":["async () => {\n  await Process.clickState('EnterPO', Estimate_Select);\n}"],"timeoutInMillisecond":10000.0}]],"layoutOnLoadActionErrors":[],"validOnPageLoadActions":true,"id":"PO Entry","deleted":false,"policies":[],"userPermissions":[]}],"userPermissions":[],"policies":[],"isHidden":false},"deleted":false,"gitSyncId":"62c6dd94aa3be20812d63927_62c6dd94aa3be20812d6392c"},{"unpublishedPage":{"name":"Estimate Process","slug":"estimate-process","layouts":[{"viewMode":false,"dsl":{"widgetName":"MainContainer","backgroundColor":"none","rightColumn":742.0,"snapColumns":64.0,"detachFromLayout":true,"widgetId":"0","topRow":0.0,"bottomRow":880.0,"containerStyle":"none","snapRows":67.0,"parentRowSpace":1.0,"type":"CANVAS_WIDGET","canExtend":true,"version":89.0,"minHeight":680.0,"parentColumnSpace":1.0,"dynamicBindingPathList":[],"leftColumn":0.0,"children":[{"boxShadow":"none","mobileBottomRow":33.0,"widgetName":"FileUpload_Modal","isCanvas":true,"displayName":"Modal","iconSVG":"/static/media/icon.d2ab7de0666eaef853cc2d330f86887b.svg","searchTags":["dialog","popup","notification"],"topRow":60.0,"bottomRow":300.0,"parentRowSpace":10.0,"type":"MODAL_WIDGET","hideCard":false,"shouldScrollContents":false,"mobileRightColumn":37.0,"animateLoading":false,"parentColumnSpace":10.984375,"dynamicTriggerPathList":[],"leftColumn":13.0,"dynamicBindingPathList":[],"children":[{"mobileBottomRow":240.0,"widgetName":"Canvas19","displayName":"Canvas","topRow":0.0,"bottomRow":530.0,"parentRowSpace":1.0,"type":"CANVAS_WIDGET","canExtend":true,"hideCard":true,"shouldScrollContents":false,"minHeight":530.0,"mobileRightColumn":263.625,"parentColumnSpace":1.0,"leftColumn":0.0,"dynamicBindingPathList":[],"children":[{"boxShadow":"none","widgetName":"Quote_File_Container","borderColor":"transparent","isCanvas":true,"displayName":"Container","iconSVG":"/static/media/icon.1977dca3370505e2db3a8e44cfd54907.svg","searchTags":["div","parent","group"],"topRow":0.0,"bottomRow":48.0,"parentRowSpace":10.0,"type":"CONTAINER_WIDGET","hideCard":false,"shouldScrollContents":false,"animateLoading":false,"parentColumnSpace":13.03125,"dynamicTriggerPathList":[],"leftColumn":0.0,"dynamicBindingPathList":[{"key":"borderRadius"}],"children":[{"boxShadow":"none","widgetName":"Canvas10Copy","displayName":"Canvas","topRow":0.0,"bottomRow":480.0,"parentRowSpace":1.0,"type":"CANVAS_WIDGET","canExtend":false,"hideCard":true,"minHeight":400.0,"parentColumnSpace":1.0,"leftColumn":0.0,"dynamicBindingPathList":[{"key":"borderRadius"},{"key":"accentColor"}],"children":[{"boxShadow":"0px 0px 2px 1.5px rgba(0, 0, 0, 0.25)","mobileBottomRow":4.0,"widgetName":"FileDownload_Button","onClick":"{{storeValue('disable',true).then(()=>FileUploadProcess.runDownloadFile()).then(()=>storeValue('disable',false))}}","buttonColor":"{{appsmith.theme.colors.primaryColor}}","dynamicPropertyPathList":[{"key":"boxShadow"},{"key":"isDisabled"},{"key":"onClick"}],"displayName":"Icon button","iconSVG":"/static/media/icon.80fc7466c0d7181ec0271de7fda795ec.svg","searchTags":["click","submit"],"topRow":0.0,"bottomRow":4.0,"parentRowSpace":10.0,"type":"ICON_BUTTON_WIDGET","hideCard":false,"mobileRightColumn":63.0,"animateLoading":false,"parentColumnSpace":10.1695556640625,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":34.0,"dynamicBindingPathList":[{"key":"buttonColor"},{"key":"isDisabled"}],"isDisabled":"{{EstimateAttachments_Table.selectedRowIndex==-1||appsmith.store.disable}}","key":"9rrozn34oj","isDeprecated":false,"rightColumn":39.0,"iconName":"cloud-download","widgetId":"s65kcv5m1v","minWidth":50.0,"isVisible":true,"version":1.0,"parentId":"2dmkum63wd","renderMode":"CANVAS","isLoading":false,"mobileTopRow":0.0,"responsiveBehavior":"hug","borderRadius":"0.375rem","mobileLeftColumn":59.0,"buttonVariant":"SECONDARY"},{"boxShadow":"{{appsmith.theme.boxShadow.appBoxShadow}}","isVisibleDownload":false,"iconSVG":"/static/media/icon.db8a9cbd2acd22a31ea91cc37ea2a46c.svg","topRow":25.0,"isSortable":true,"type":"TABLE_WIDGET_V2","inlineEditingSaveOption":"ROW_LEVEL","animateLoading":false,"dynamicBindingPathList":[{"key":"accentColor"},{"key":"boxShadow"},{"key":"primaryColumns.Field.computedValue"},{"key":"primaryColumns.Value.computedValue"},{"key":"tableData"}],"leftColumn":32.0,"delimiter":",","defaultSelectedRowIndex":"-1","showInlineEditingOptionDropdown":true,"accentColor":"{{appsmith.theme.colors.primaryColor}}","isVisibleFilters":false,"isVisible":true,"fontStyle":"","enableClientSideSearch":false,"version":1.0,"totalRecordsCount":0.0,"isLoading":false,"childStylesheet":{"button":{"buttonColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"menuButton":{"menuColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"iconButton":{"buttonColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"editActions":{"saveButtonColor":"{{appsmith.theme.colors.primaryColor}}","saveBorderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","discardButtonColor":"{{appsmith.theme.colors.primaryColor}}","discardBorderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}"}},"borderRadius":"0.375rem","columnUpdatedAt":1.700722281829E12,"defaultSelectedRowIndices":[0.0],"widgetName":"FilesMetadata_Table","defaultPageSize":0.0,"columnOrder":["Field","Value"],"dynamicPropertyPathList":[{"key":"tableData"}],"displayName":"Table","bottomRow":46.0,"columnWidthMap":{"task":245.0,"step":62.0,"status":75.0,"Field":189.0},"parentRowSpace":10.0,"hideCard":false,"parentColumnSpace":11.29609375,"dynamicTriggerPathList":[],"primaryColumns":{"Field":{"allowCellWrapping":false,"index":3.0,"width":150.0,"originalId":"Field","id":"Field","alias":"Field","horizontalAlignment":"LEFT","verticalAlignment":"CENTER","columnType":"text","textSize":"0.875rem","enableFilter":true,"enableSort":true,"isVisible":true,"isDisabled":false,"isCellEditable":false,"isEditable":false,"isCellVisible":true,"isDerived":false,"label":"Field","isSaveVisible":true,"isDiscardVisible":true,"computedValue":"{{FilesMetadata_Table.processedTableData.map((currentRow, currentIndex) => ( currentRow[\"Field\"]))}}","fontStyle":"","validation":{},"sticky":""},"Value":{"allowCellWrapping":false,"index":1.0,"width":150.0,"originalId":"Value","id":"Value","alias":"Value","horizontalAlignment":"LEFT","verticalAlignment":"CENTER","columnType":"text","textColor":"","textSize":"0.875rem","fontStyle":"","enableFilter":true,"enableSort":true,"isVisible":true,"isDisabled":false,"isCellEditable":false,"isEditable":false,"isCellVisible":true,"isDerived":false,"label":"Value","isSaveVisible":true,"isDiscardVisible":true,"computedValue":"{{FilesMetadata_Table.processedTableData.map((currentRow, currentIndex) => ( currentRow[\"Value\"]))}}","cellBackground":"","validation":{},"sticky":""}},"borderWidth":"1","key":"tr6i18pzj9","canFreezeColumn":false,"isDeprecated":false,"rightColumn":64.0,"textSize":"0.875rem","widgetId":"u5irlceq9d","enableServerSideFiltering":false,"tableData":"{{EstimateAttachments_Table.selectedRowIndex==-1?\"\":appsmith.store.tabledata}}","label":"Data","searchKey":"","parentId":"2dmkum63wd","renderMode":"CANVAS","horizontalAlignment":"LEFT","isVisibleSearch":true,"isVisiblePagination":true,"verticalAlignment":"CENTER"},{"boxShadow":"0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06)","isVisibleDownload":false,"iconSVG":"/static/media/icon.db8a9cbd2acd22a31ea91cc37ea2a46c.svg","topRow":5.0,"isSortable":true,"type":"TABLE_WIDGET_V2","inlineEditingSaveOption":"ROW_LEVEL","animateLoading":false,"dynamicBindingPathList":[{"key":"accentColor"},{"key":"primaryColumns.Id.computedValue"},{"key":"primaryColumns.FileName.computedValue"},{"key":"primaryColumns.Comments.computedValue"},{"key":"tableData"},{"key":"primaryColumns.EstimateId.computedValue"}],"leftColumn":0.0,"delimiter":",","defaultSelectedRowIndex":"-1","showInlineEditingOptionDropdown":true,"accentColor":"{{appsmith.theme.colors.primaryColor}}","isVisibleFilters":false,"isVisible":true,"fontStyle":"","enableClientSideSearch":false,"version":1.0,"totalRecordsCount":0.0,"isLoading":false,"childStylesheet":{"button":{"buttonColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"menuButton":{"menuColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"iconButton":{"buttonColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"editActions":{"saveButtonColor":"{{appsmith.theme.colors.primaryColor}}","saveBorderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","discardButtonColor":"{{appsmith.theme.colors.primaryColor}}","discardBorderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}"}},"borderRadius":"0.375rem","columnUpdatedAt":1.745831104723E12,"originalBottomRow":46.0,"defaultSelectedRowIndices":[0.0],"widgetName":"EstimateAttachments_Table","defaultPageSize":0.0,"columnOrder":["Id","FileName","Comments","EstimateId"],"dynamicPropertyPathList":[{"key":"tableData"},{"key":"onRowSelected"}],"displayName":"Table","bottomRow":46.0,"columnWidthMap":{"task":245.0,"step":62.0,"status":75.0,"Field":189.0,"FileName":183.0},"parentRowSpace":10.0,"hideCard":false,"parentColumnSpace":11.29609375,"dynamicTriggerPathList":[{"key":"onRowSelected"}],"primaryColumns":{"Id":{"allowCellWrapping":false,"allowSameOptionsInNewRow":true,"index":0.0,"width":150.0,"originalId":"Id","id":"Id","alias":"Id","horizontalAlignment":"LEFT","verticalAlignment":"CENTER","columnType":"number","textColor":"","textSize":"0.875rem","fontStyle":"","enableFilter":true,"enableSort":true,"isVisible":false,"isDisabled":false,"isCellEditable":false,"isEditable":false,"isCellVisible":true,"isDerived":false,"label":"Id","isSaveVisible":true,"isDiscardVisible":true,"computedValue":"{{EstimateAttachments_Table.processedTableData.map((currentRow, currentIndex) => ( currentRow[\"Id\"]))}}","sticky":"","validation":{},"cellBackground":""},"FileName":{"allowCellWrapping":false,"allowSameOptionsInNewRow":true,"index":2.0,"width":150.0,"originalId":"FileName","id":"FileName","alias":"FileName","horizontalAlignment":"LEFT","verticalAlignment":"CENTER","columnType":"text","textColor":"","textSize":"0.875rem","fontStyle":"","enableFilter":true,"enableSort":true,"isVisible":true,"isDisabled":false,"isCellEditable":false,"isEditable":false,"isCellVisible":true,"isDerived":false,"label":"FileName","isSaveVisible":true,"isDiscardVisible":true,"computedValue":"{{EstimateAttachments_Table.processedTableData.map((currentRow, currentIndex) => ( currentRow[\"FileName\"]))}}","sticky":"","validation":{},"cellBackground":""},"Comments":{"allowCellWrapping":false,"allowSameOptionsInNewRow":true,"index":3.0,"width":150.0,"originalId":"Comments","id":"Comments","alias":"Comments","horizontalAlignment":"LEFT","verticalAlignment":"CENTER","columnType":"text","textColor":"","textSize":"0.875rem","fontStyle":"","enableFilter":true,"enableSort":true,"isVisible":true,"isDisabled":false,"isCellEditable":false,"isEditable":false,"isCellVisible":true,"isDerived":false,"label":"Comments","isSaveVisible":true,"isDiscardVisible":true,"computedValue":"{{EstimateAttachments_Table.processedTableData.map((currentRow, currentIndex) => ( currentRow[\"Comments\"]))}}","sticky":"","validation":{},"cellBackground":""},"EstimateId":{"allowCellWrapping":false,"allowSameOptionsInNewRow":true,"index":1.0,"width":150.0,"originalId":"EstimateId","id":"EstimateId","alias":"EstimateId","horizontalAlignment":"LEFT","verticalAlignment":"CENTER","columnType":"number","textColor":"","textSize":"0.875rem","fontStyle":"","enableFilter":true,"enableSort":true,"isVisible":false,"isDisabled":false,"isCellEditable":false,"isEditable":false,"isCellVisible":true,"isDerived":false,"label":"EstimateId","isSaveVisible":true,"isDiscardVisible":true,"computedValue":"{{EstimateAttachments_Table.processedTableData.map((currentRow, currentIndex) => ( currentRow[\"EstimateId\"]))}}","sticky":"","validation":{},"currencyCode":"USD","decimals":0.0,"thousandSeparator":true,"notation":"standard","cellBackground":""}},"borderWidth":"1","onRowSelected":"{{FileUploadProcess.onUploadModalClick();storeValue(\"ActualFileName\",EstimateAttachments_Table.selectedRow.FileName)}}","key":"tr6i18pzj9","canFreezeColumn":false,"isDeprecated":false,"rightColumn":32.0,"textSize":"0.875rem","widgetId":"ux0nn8k565","enableServerSideFiltering":false,"tableData":"{{EAttachments_Select.data}}","label":"Data","searchKey":"","parentId":"2dmkum63wd","renderMode":"CANVAS","horizontalAlignment":"LEFT","isVisibleSearch":true,"originalTopRow":5.0,"isVisiblePagination":true,"verticalAlignment":"CENTER"},{"boxShadow":"none","widgetName":"FileComments_Input","displayName":"Input","iconSVG":"/static/media/icon.9f505595da61a34f563dba82adeb06ec.svg","searchTags":["form","text input","number","textarea"],"topRow":17.0,"bottomRow":25.0,"parentRowSpace":10.0,"labelWidth":5.0,"autoFocus":false,"type":"INPUT_WIDGET_V2","hideCard":false,"animateLoading":false,"parentColumnSpace":7.82265625,"dynamicTriggerPathList":[],"resetOnSubmit":true,"leftColumn":32.0,"dynamicBindingPathList":[{"key":"accentColor"},{"key":"labelTextColor"},{"key":"defaultText"}],"labelPosition":"Top","labelStyle":"","labelTextColor":"{{appsmith.theme.colors.primaryColor}}","inputType":"MULTI_LINE_TEXT","maxChars":"255","isDisabled":false,"key":"fnbeggozqq","labelTextSize":"0.875rem","isRequired":false,"isDeprecated":false,"rightColumn":64.0,"dynamicHeight":"FIXED","widgetId":"latn23wns4","accentColor":"{{appsmith.theme.colors.primaryColor}}","isVisible":true,"label":"Comments","version":2.0,"parentId":"2dmkum63wd","labelAlignment":"left","renderMode":"CANVAS","isLoading":false,"borderRadius":"0.375rem","maxDynamicHeight":9000.0,"iconAlign":"left","defaultText":"{{EstimateAttachments_Table.selectedRowIndex==-1?\"\":EstimateAttachments_Table.selectedRow.Comments}}","minDynamicHeight":4.0},{"boxShadow":"none","widgetName":"ActualFileName_Input","displayName":"Input","iconSVG":"/static/media/icon.9f505595da61a34f563dba82adeb06ec.svg","searchTags":["form","text input","number","textarea"],"topRow":9.0,"bottomRow":13.0,"parentRowSpace":10.0,"labelWidth":"8","autoFocus":false,"type":"INPUT_WIDGET_V2","hideCard":false,"animateLoading":false,"parentColumnSpace":11.29609375,"dynamicTriggerPathList":[],"resetOnSubmit":true,"leftColumn":32.0,"dynamicBindingPathList":[{"key":"accentColor"},{"key":"defaultText"}],"labelPosition":"Left","labelStyle":"","inputType":"TEXT","maxChars":"50","isDisabled":true,"key":"fmqlbw0c9w","labelTextSize":"0.875rem","isRequired":false,"isDeprecated":false,"rightColumn":64.0,"dynamicHeight":"FIXED","widgetId":"5ksdunj0z1","accentColor":"{{appsmith.theme.colors.primaryColor}}","isVisible":true,"label":"File Name","version":2.0,"parentId":"2dmkum63wd","labelAlignment":"left","renderMode":"CANVAS","isLoading":false,"borderRadius":"0.375rem","maxDynamicHeight":9000.0,"iconAlign":"left","defaultText":"{{appsmith.store.ActualFileName}}","minDynamicHeight":4.0},{"boxShadow":"none","iconSVG":"/static/media/icon.9f505595da61a34f563dba82adeb06ec.svg","topRow":5.0,"labelWidth":"8","type":"INPUT_WIDGET_V2","animateLoading":false,"resetOnSubmit":true,"leftColumn":32.0,"dynamicBindingPathList":[{"key":"accentColor"},{"key":"labelTextColor"},{"key":"isDisabled"}],"labelStyle":"","inputType":"TEXT","maxChars":"25","isDisabled":"{{EstimateAttachments_Table.selectedRowIndex!=-1}}","validation":"","isRequired":false,"dynamicHeight":"FIXED","accentColor":"{{appsmith.theme.colors.primaryColor}}","isVisible":true,"version":2.0,"isLoading":false,"regex":"^[0-9a-zA-Z]+$","borderRadius":"0.375rem","widgetName":"UserText_Input","dynamicPropertyPathList":[{"key":"onTextChanged"},{"key":"isDisabled"}],"displayName":"Input","searchTags":["form","text input","number","textarea"],"bottomRow":9.0,"parentRowSpace":10.0,"autoFocus":false,"hideCard":false,"parentColumnSpace":10.0322265625,"dynamicTriggerPathList":[{"key":"onTextChanged"}],"labelPosition":"Left","labelTextColor":"{{appsmith.theme.colors.primaryColor}}","key":"fmqlbw0c9w","labelTextSize":"0.875rem","onTextChanged":"{{FileUploadProcess.getFileName()}}","isDeprecated":false,"rightColumn":64.0,"widgetId":"hs6sry3hkg","errorMessage":"Spaces and special characters are not allowed!!","label":"User Text","parentId":"2dmkum63wd","labelAlignment":"left","renderMode":"CANVAS","maxDynamicHeight":9000.0,"iconAlign":"left","defaultText":"","minDynamicHeight":4.0},{"boxShadow":"0px 0px 2px 1.5px rgba(0, 0, 0, 0.25)","widgetName":"FileUploadReset_Button","onClick":"{{storeValue('ActualFileName','');GlobalVariables.resetForm(['Quote_File_Container']);storeValue('ErrorMessage','');storeValue('disable',false)}} ","buttonColor":"{{appsmith.theme.colors.primaryColor}}","dynamicPropertyPathList":[{"key":"boxShadow"},{"key":"onClick"}],"displayName":"Icon Button","iconSVG":"/static/media/icon.1a0c634ac75f9fa6b6ae7a8df882a3ba.svg","searchTags":["click","submit"],"topRow":0.0,"bottomRow":4.0,"tooltip":"Reset Files","parentRowSpace":10.0,"type":"ICON_BUTTON_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":10.0322265625,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":39.0,"dynamicBindingPathList":[{"key":"buttonColor"}],"isDisabled":false,"key":"z13en9py0b","isDeprecated":false,"rightColumn":44.0,"iconName":"refresh","widgetId":"o39tbh4jw7","isVisible":true,"version":1.0,"parentId":"2dmkum63wd","renderMode":"CANVAS","isLoading":false,"borderRadius":"0.375rem","buttonVariant":"SECONDARY"},{"boxShadow":"0px 0px 2px 1.5px rgba(0, 0, 0, 0.25)","widgetName":"FileUploadCreate_Button","onClick":"{{storeValue('disable',true).then(()=>storeValue('add',1))\n.then(()=>FileUploadProcess.runCreateFile(Estimate_Table.selectedRow.EId,FileComments_Input.text)).then(()=>storeValue('disable',false))}}","buttonColor":"{{appsmith.theme.colors.primaryColor}}","dynamicPropertyPathList":[{"key":"isDisabled"},{"key":"boxShadow"},{"key":"onClick"}],"displayName":"Icon Button","iconSVG":"/static/media/icon.1a0c634ac75f9fa6b6ae7a8df882a3ba.svg","searchTags":["click","submit"],"topRow":0.0,"bottomRow":4.0,"tooltip":"Create Files","parentRowSpace":10.0,"type":"ICON_BUTTON_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":10.0322265625,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":44.0,"dynamicBindingPathList":[{"key":"buttonColor"},{"key":"isDisabled"}],"isDisabled":"{{ FilePicker.files.length == 0 || appsmith.store.ErrorMessage.length != 0 || EstimateAttachments_Table.selectedRowIndex!=-1 || appsmith.store.ActualFileName==\"\"}}","key":"z13en9py0b","isDeprecated":false,"rightColumn":49.0,"iconName":"plus","widgetId":"4nykygagv2","isVisible":true,"version":1.0,"parentId":"2dmkum63wd","renderMode":"CANVAS","isLoading":false,"borderRadius":"0.375rem","buttonVariant":"SECONDARY"},{"boxShadow":"0px 0px 2px 1.5px rgba(0, 0, 0, 0.25)","widgetName":"FileUploadModify_Button","onClick":"{{storeValue('Disable','True').then(()=>storeValue('add',2))\n.then(()=>\nFileUploadProcess.runModifyFile(EstimateAttachments_Table.selectedRow.Id,FileComments_Input.text)).then(()=>storeValue('Disable','False'))}} ","buttonColor":"{{appsmith.theme.colors.primaryColor}}","dynamicPropertyPathList":[{"key":"boxShadow"},{"key":"onClick"},{"key":"isDisabled"}],"displayName":"Icon Button","iconSVG":"/static/media/icon.1a0c634ac75f9fa6b6ae7a8df882a3ba.svg","searchTags":["click","submit"],"topRow":0.0,"bottomRow":4.0,"tooltip":"Edit Files","parentRowSpace":10.0,"type":"ICON_BUTTON_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":10.0322265625,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":49.0,"dynamicBindingPathList":[{"key":"buttonColor"},{"key":"isDisabled"}],"isDisabled":"{{EstimateAttachments_Table.selectedRowIndex==-1||appsmith.store.disable}}","key":"z13en9py0b","isDeprecated":false,"rightColumn":54.0,"iconName":"edit","widgetId":"hwhrnd4rfu","isVisible":true,"version":1.0,"parentId":"2dmkum63wd","renderMode":"CANVAS","isLoading":false,"borderRadius":"0.375rem","buttonVariant":"SECONDARY"},{"boxShadow":"0px 0px 2px 1.5px rgba(0, 0, 0, 0.25)","widgetName":"FileUploadDelete_Button","onClick":"{{storeValue('disable',true).then(()=>FileUploadProcess.runDeleteFile(EstimateAttachments_Table.selectedRow.Id)).then(()=>storeValue('disable',false))}}","buttonColor":"{{appsmith.theme.colors.primaryColor}}","dynamicPropertyPathList":[{"key":"boxShadow"},{"key":"isDisabled"},{"key":"onClick"}],"displayName":"Icon Button","iconSVG":"/static/media/icon.1a0c634ac75f9fa6b6ae7a8df882a3ba.svg","searchTags":["click","submit"],"topRow":0.0,"bottomRow":4.0,"tooltip":"Delete Files","parentRowSpace":10.0,"type":"ICON_BUTTON_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":10.0322265625,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":54.0,"dynamicBindingPathList":[{"key":"buttonColor"},{"key":"isDisabled"}],"isDisabled":"{{EstimateAttachments_Table.selectedRowIndex==-1||appsmith.store.disable}}","key":"z13en9py0b","isDeprecated":false,"rightColumn":59.0,"iconName":"trash","widgetId":"1yf53zuomg","isVisible":true,"version":1.0,"parentId":"2dmkum63wd","renderMode":"CANVAS","isLoading":false,"borderRadius":"0.375rem","buttonVariant":"SECONDARY"},{"boxShadow":"0px 0px 2px 1.5px rgba(0, 0, 0, 0.25)","widgetName":"FileUploadClose_Button","onClick":"{{closeModal('FileUpload_Modal');GlobalVariables.resetForm(['Quote_File_Container'])}} ","buttonColor":"{{appsmith.theme.colors.primaryColor}}","dynamicPropertyPathList":[{"key":"boxShadow"},{"key":"isDisabled"},{"key":"onClick"}],"displayName":"Icon Button","iconSVG":"/static/media/icon.1a0c634ac75f9fa6b6ae7a8df882a3ba.svg","searchTags":["click","submit"],"topRow":0.0,"bottomRow":4.0,"tooltip":"","parentRowSpace":10.0,"type":"ICON_BUTTON_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":10.0322265625,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":59.0,"dynamicBindingPathList":[{"key":"buttonColor"}],"isDisabled":"","key":"z13en9py0b","isDeprecated":false,"rightColumn":64.0,"iconName":"cross","widgetId":"z1np49dlwo","isVisible":true,"version":1.0,"parentId":"2dmkum63wd","renderMode":"CANVAS","isLoading":false,"borderRadius":"0.375rem","buttonVariant":"SECONDARY"},{"boxShadow":"none","widgetName":"FilePicker","buttonColor":"{{appsmith.theme.colors.primaryColor}}","dynamicPropertyPathList":[{"key":"onFilesSelected"},{"key":"isDisabled"}],"displayName":"FilePicker","iconSVG":"/static/media/icon.7c5ad9c357928c6ff5701bf51a56c2e5.svg","searchTags":["upload"],"topRow":0.0,"bottomRow":4.0,"parentRowSpace":10.0,"allowedFileTypes":[],"type":"FILE_PICKER_WIDGET_V2","hideCard":false,"animateLoading":false,"parentColumnSpace":19.05,"dynamicTriggerPathList":[{"key":"onFilesSelected"}],"leftColumn":0.0,"dynamicBindingPathList":[{"key":"buttonColor"}],"isDisabled":"","key":"cjvgnpr682","onFilesSelected":"{{FileUploadProcess.getFileName().then(()=>FileUploadProcess.onfileselect())\n}}","isRequired":false,"isDeprecated":false,"rightColumn":14.0,"isDefaultClickDisabled":true,"widgetId":"bvw25zprze","isVisible":true,"label":"Select File","maxFileSize":"100","version":1.0,"fileDataType":"Binary","parentId":"2dmkum63wd","selectedFiles":[],"renderMode":"CANVAS","isLoading":false,"borderRadius":"0.375rem","files":[],"maxNumFiles":"1"},{"boxShadow":"none","widgetName":"Error_input","dynamicPropertyPathList":[],"displayName":"Input","iconSVG":"/static/media/icon.9f505595da61a34f563dba82adeb06ec.svg","searchTags":["form","text input","number","textarea"],"topRow":13.0,"bottomRow":17.0,"tooltip":"Display an error message","parentRowSpace":10.0,"labelWidth":"8","autoFocus":false,"type":"INPUT_WIDGET_V2","hideCard":false,"animateLoading":false,"parentColumnSpace":6.15087890625,"dynamicTriggerPathList":[],"resetOnSubmit":true,"leftColumn":32.0,"dynamicBindingPathList":[{"key":"accentColor"},{"key":"defaultText"}],"labelPosition":"Left","labelStyle":"","labelTextColor":"","inputType":"TEXT","isDisabled":true,"key":"zgqucosmsy","labelTextSize":"0.875rem","isRequired":false,"isDeprecated":false,"rightColumn":64.0,"dynamicHeight":"FIXED","widgetId":"km9fj0szgz","accentColor":"{{appsmith.theme.colors.primaryColor}}","isVisible":true,"label":"Error Msg","version":2.0,"parentId":"2dmkum63wd","labelAlignment":"left","renderMode":"CANVAS","isLoading":false,"borderRadius":"0.375rem","maxDynamicHeight":9000.0,"iconAlign":"left","defaultText":"{{appsmith.store.ErrorMessage}}","minDynamicHeight":4.0}],"key":"8jj9ozjiq8","isDeprecated":false,"rightColumn":312.75,"detachFromLayout":true,"widgetId":"2dmkum63wd","accentColor":"{{appsmith.theme.colors.primaryColor}}","containerStyle":"none","isVisible":true,"version":1.0,"parentId":"nuuohbt69t","renderMode":"CANVAS","isLoading":false,"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}"}],"borderWidth":"0","key":"9508m2tat7","backgroundColor":"#FFFFFF","isDeprecated":false,"rightColumn":64.0,"dynamicHeight":"FIXED","widgetId":"nuuohbt69t","containerStyle":"card","isVisible":true,"version":1.0,"parentId":"danfbxdzgn","renderMode":"CANVAS","isLoading":false,"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","maxDynamicHeight":9000.0,"minDynamicHeight":4.0}],"isDisabled":false,"key":"y47ei2f6i0","isDeprecated":false,"rightColumn":263.625,"detachFromLayout":true,"widgetId":"danfbxdzgn","minWidth":450.0,"isVisible":true,"version":1.0,"parentId":"3rhrpiq3er","renderMode":"CANVAS","isLoading":false,"mobileTopRow":0.0,"responsiveBehavior":"fill","mobileLeftColumn":0.0,"flexLayers":[]}],"key":"n0xf4585ut","height":530.0,"isDeprecated":false,"rightColumn":37.0,"detachFromLayout":true,"dynamicHeight":"FIXED","widgetId":"3rhrpiq3er","canOutsideClickClose":true,"canEscapeKeyClose":true,"version":2.0,"parentId":"0","renderMode":"CANVAS","isLoading":false,"mobileTopRow":9.0,"borderRadius":"0.375rem","mobileLeftColumn":13.0,"maxDynamicHeight":9000.0,"width":647.9,"minDynamicHeight":24.0},{"boxShadow":"none","mobileBottomRow":38.0,"widgetName":"File_Alert_Modal","isCanvas":true,"displayName":"Modal","iconSVG":"/static/media/icon.d2ab7de0666eaef853cc2d330f86887b.svg","searchTags":["dialog","popup","notification"],"topRow":60.0,"bottomRow":300.0,"parentRowSpace":10.0,"type":"MODAL_WIDGET","hideCard":false,"shouldScrollContents":false,"mobileRightColumn":36.0,"animateLoading":false,"parentColumnSpace":10.41015625,"dynamicTriggerPathList":[],"leftColumn":12.0,"dynamicBindingPathList":[{"key":"borderRadius"}],"children":[{"mobileBottomRow":240.0,"widgetName":"Canvas20","displayName":"Canvas","topRow":0.0,"bottomRow":180.0,"parentRowSpace":1.0,"type":"CANVAS_WIDGET","canExtend":true,"hideCard":true,"shouldScrollContents":false,"minHeight":182.0,"mobileRightColumn":249.84375,"parentColumnSpace":1.0,"leftColumn":0.0,"dynamicBindingPathList":[],"children":[{"boxShadow":"none","widgetName":"File_Alert_CloseButton","onClick":"{{resetWidget('FilePicker').then(()=>closeModal('File_Alert_Modal'))}}","buttonColor":"{{appsmith.theme.colors.primaryColor}}","dynamicPropertyPathList":[{"key":"onClick"}],"displayName":"Button","iconSVG":"/static/media/icon.cca026338f1c8eb6df8ba03d084c2fca.svg","searchTags":["click","submit"],"topRow":12.0,"bottomRow":16.0,"type":"BUTTON_WIDGET","hideCard":false,"animateLoading":true,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":51.0,"dynamicBindingPathList":[{"key":"buttonColor"},{"key":"borderRadius"}],"text":"Okay","isDisabled":false,"key":"nu57m82z50","isDeprecated":false,"rightColumn":63.0,"isDefaultClickDisabled":true,"widgetId":"26s17uyo4z","buttonStyle":"PRIMARY_BUTTON","isVisible":true,"recaptchaType":"V3","version":1.0,"parentId":"9so3axikw5","renderMode":"CANVAS","isLoading":false,"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","buttonVariant":"PRIMARY","placement":"CENTER"},{"widgetName":"File_Alert_Text","displayName":"Text","iconSVG":"/static/media/icon.97c59b523e6f70ba6f40a10fc2c7c5b5.svg","searchTags":["typography","paragraph","label"],"topRow":2.0,"bottomRow":11.0,"type":"TEXT_WIDGET","hideCard":false,"animateLoading":false,"overflow":"NONE","fontFamily":"{{appsmith.theme.fontFamily.appFont}}","dynamicTriggerPathList":[],"leftColumn":0.0,"dynamicBindingPathList":[{"key":"fontFamily"},{"key":"borderRadius"},{"key":"textColor"}],"shouldTruncate":false,"truncateButtonColor":"#FFC13D","text":"File is large, Use other application to upload the file.\nNote: appsmith supports file size less than 20mb and zip file of 4mb","key":"16xe830bkl","isDeprecated":false,"rightColumn":64.0,"textAlign":"CENTER","dynamicHeight":"FIXED","widgetId":"vw2m3eokhu","isVisible":true,"fontStyle":"BOLD","textColor":"{{appsmith.theme.colors.primaryColor}}","version":1.0,"parentId":"9so3axikw5","renderMode":"CANVAS","isLoading":false,"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","maxDynamicHeight":9000.0,"fontSize":"1.5rem","minDynamicHeight":4.0}],"isDisabled":false,"key":"unr6cvaqjz","isDeprecated":false,"rightColumn":249.84375,"detachFromLayout":true,"widgetId":"9so3axikw5","minWidth":450.0,"isVisible":true,"version":1.0,"parentId":"3gj6srdyag","renderMode":"CANVAS","isLoading":false,"mobileTopRow":0.0,"responsiveBehavior":"fill","mobileLeftColumn":0.0,"flexLayers":[]}],"key":"2nsq1idgqj","height":182.0,"isDeprecated":false,"rightColumn":36.0,"detachFromLayout":true,"dynamicHeight":"FIXED","widgetId":"3gj6srdyag","canOutsideClickClose":true,"canEscapeKeyClose":true,"version":2.0,"parentId":"0","renderMode":"CANVAS","isLoading":false,"mobileTopRow":14.0,"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","mobileLeftColumn":12.0,"maxDynamicHeight":9000.0,"width":698.25,"minDynamicHeight":24.0},{"boxShadow":"none","mobileBottomRow":27.0,"widgetName":"ShowAlert_Modal","isCanvas":true,"displayName":"Modal","iconSVG":"/static/media/icon.d2ab7de0666eaef853cc2d330f86887b.svg","searchTags":["dialog","popup","notification"],"topRow":60.0,"bottomRow":310.0,"parentRowSpace":10.0,"type":"MODAL_WIDGET","hideCard":false,"shouldScrollContents":false,"mobileRightColumn":39.0,"animateLoading":false,"parentColumnSpace":10.984375,"dynamicTriggerPathList":[],"leftColumn":15.0,"dynamicBindingPathList":[{"key":"borderRadius"}],"children":[{"mobileBottomRow":240.0,"widgetName":"Canvas24","displayName":"Canvas","topRow":0.0,"bottomRow":160.0,"parentRowSpace":1.0,"type":"CANVAS_WIDGET","canExtend":true,"hideCard":true,"shouldScrollContents":false,"minHeight":164.0,"mobileRightColumn":263.625,"parentColumnSpace":1.0,"leftColumn":0.0,"dynamicBindingPathList":[],"children":[{"mobileBottomRow":5.0,"widgetName":"Text5","displayName":"Text","iconSVG":"/static/media/icon.c3b6033f570046f8c6288d911333a827.svg","searchTags":["typography","paragraph","label"],"topRow":4.0,"bottomRow":8.0,"type":"TEXT_WIDGET","hideCard":false,"mobileRightColumn":41.0,"animateLoading":false,"overflow":"NONE","fontFamily":"{{appsmith.theme.fontFamily.appFont}}","dynamicTriggerPathList":[],"leftColumn":0.0,"dynamicBindingPathList":[{"key":"truncateButtonColor"},{"key":"fontFamily"},{"key":"borderRadius"},{"key":"text"},{"key":"textColor"}],"shouldTruncate":false,"truncateButtonColor":"{{appsmith.theme.colors.primaryColor}}","text":"{{ActualFileName_Input.text.concat(\"   Does not exist in SharePoint!!!\")}}","key":"u1eb8unlsk","isDeprecated":false,"rightColumn":63.0,"textAlign":"CENTER","dynamicHeight":"FIXED","widgetId":"1c35am147t","minWidth":450.0,"isVisible":true,"fontStyle":"BOLD","textColor":"{{appsmith.theme.colors.primaryColor}}","version":1.0,"parentId":"8z8kppozm0","renderMode":"CANVAS","isLoading":false,"mobileTopRow":1.0,"responsiveBehavior":"fill","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","mobileLeftColumn":1.0,"maxDynamicHeight":9000.0,"fontSize":"1.25rem","minDynamicHeight":4.0},{"resetFormOnClick":false,"boxShadow":"none","mobileBottomRow":22.0,"widgetName":"Close_ButtonCopy","onClick":"{{closeModal('ShowAlert_Modal')}}","buttonColor":"{{appsmith.theme.colors.primaryColor}}","dynamicPropertyPathList":[{"key":"onClick"}],"displayName":"Button","iconSVG":"/static/media/icon.7beb9123fb53027d9d6b778cdfe4caed.svg","searchTags":["click","submit"],"topRow":9.0,"bottomRow":13.0,"type":"BUTTON_WIDGET","hideCard":false,"mobileRightColumn":47.0,"animateLoading":true,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":47.0,"dynamicBindingPathList":[{"key":"buttonColor"},{"key":"borderRadius"}],"text":"Okay","isDisabled":false,"key":"a8byd68sd0","isDeprecated":false,"rightColumn":63.0,"isDefaultClickDisabled":true,"widgetId":"sth6ajv66f","buttonStyle":"PRIMARY","minWidth":120.0,"isVisible":true,"recaptchaType":"V3","version":1.0,"parentId":"8z8kppozm0","renderMode":"CANVAS","isLoading":false,"mobileTopRow":18.0,"responsiveBehavior":"hug","disabledWhenInvalid":false,"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","mobileLeftColumn":31.0,"placement":"CENTER"}],"isDisabled":false,"key":"zrwmtap8cw","isDeprecated":false,"rightColumn":263.625,"detachFromLayout":true,"widgetId":"8z8kppozm0","minWidth":450.0,"isVisible":true,"version":1.0,"parentId":"tavfdr3agw","renderMode":"CANVAS","isLoading":false,"mobileTopRow":0.0,"responsiveBehavior":"fill","mobileLeftColumn":0.0,"flexLayers":[]}],"key":"ts2tav54bq","height":164.0,"isDeprecated":false,"rightColumn":39.0,"detachFromLayout":true,"dynamicHeight":"FIXED","widgetId":"tavfdr3agw","canOutsideClickClose":true,"canEscapeKeyClose":true,"version":2.0,"parentId":"0","renderMode":"CANVAS","isLoading":false,"mobileTopRow":3.0,"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","mobileLeftColumn":15.0,"maxDynamicHeight":9000.0,"width":698.25,"minDynamicHeight":24.0},{"boxShadow":"none","widgetName":"Progress_Modal","isCanvas":true,"displayName":"Modal","iconSVG":"/static/media/icon.4975978e9a961fb0bfb4e38de7ecc7c5.svg","searchTags":["dialog","popup","notification"],"topRow":25.0,"bottomRow":49.0,"parentRowSpace":10.0,"type":"MODAL_WIDGET","hideCard":false,"shouldScrollContents":false,"animateLoading":false,"parentColumnSpace":14.0625,"dynamicTriggerPathList":[],"leftColumn":14.0,"dynamicBindingPathList":[{"key":"borderRadius"}],"children":[{"boxShadow":"none","widgetName":"Canvas12Copy","displayName":"Canvas","topRow":0.0,"bottomRow":240.0,"parentRowSpace":1.0,"type":"CANVAS_WIDGET","canExtend":true,"hideCard":true,"shouldScrollContents":false,"minHeight":244.0,"parentColumnSpace":1.0,"dynamicTriggerPathList":[],"leftColumn":0.0,"dynamicBindingPathList":[{"key":"borderRadius"},{"key":"accentColor"}],"children":[{"boxShadow":"none","widgetName":"retry_Button","onClick":"{{FileUploadProcess.retryfunction()}}","buttonColor":"{{appsmith.theme.colors.primaryColor}}","dynamicPropertyPathList":[{"key":"isDisabled"},{"key":"onClick"}],"displayName":"Button","iconSVG":"/static/media/icon.cca026338f1c8eb6df8ba03d084c2fca.svg","searchTags":["click","submit"],"topRow":18.0,"bottomRow":22.0,"type":"BUTTON_WIDGET","hideCard":false,"animateLoading":true,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":31.0,"dynamicBindingPathList":[{"key":"buttonColor"},{"key":"borderRadius"},{"key":"isDisabled"}],"text":"Retry","isDisabled":"{{appsmith.store.closedisable=='False'}}","key":"5g8c8gayqk","isDeprecated":false,"rightColumn":47.0,"isDefaultClickDisabled":true,"widgetId":"bulw6k8mb4","buttonStyle":"PRIMARY","isVisible":true,"recaptchaType":"V3","version":1.0,"parentId":"x0dsjacbtt","renderMode":"CANVAS","isLoading":false,"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","buttonVariant":"SECONDARY","placement":"CENTER"},{"widgetName":"Error_text","displayName":"Text","iconSVG":"/static/media/icon.97c59b523e6f70ba6f40a10fc2c7c5b5.svg","searchTags":["typography","paragraph","label"],"topRow":13.0,"bottomRow":17.0,"type":"TEXT_WIDGET","hideCard":false,"animateLoading":false,"overflow":"NONE","fontFamily":"{{appsmith.theme.fontFamily.appFont}}","dynamicTriggerPathList":[],"leftColumn":3.0,"dynamicBindingPathList":[{"key":"fontFamily"},{"key":"borderRadius"},{"key":"text"}],"shouldTruncate":false,"truncateButtonColor":"#FFC13D","text":"{{appsmith.store.ErrorMessage}}","key":"dcsz6tjc0b","isDeprecated":false,"rightColumn":62.0,"textAlign":"LEFT","dynamicHeight":"FIXED","widgetId":"iumwdhs6k7","isVisible":true,"fontStyle":"BOLD","textColor":"#f87171","version":1.0,"parentId":"x0dsjacbtt","renderMode":"CANVAS","isLoading":false,"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","maxDynamicHeight":9000.0,"fontSize":"0.875rem","minDynamicHeight":4.0},{"widgetName":"Statename_text","displayName":"Text","iconSVG":"/static/media/icon.97c59b523e6f70ba6f40a10fc2c7c5b5.svg","searchTags":["typography","paragraph","label"],"topRow":2.0,"bottomRow":6.0,"type":"TEXT_WIDGET","hideCard":false,"animateLoading":false,"overflow":"NONE","fontFamily":"{{appsmith.theme.fontFamily.appFont}}","dynamicTriggerPathList":[],"leftColumn":3.0,"dynamicBindingPathList":[{"key":"fontFamily"},{"key":"borderRadius"},{"key":"text"},{"key":"textColor"}],"shouldTruncate":false,"truncateButtonColor":"#FFC13D","text":"{{appsmith.store.statename}}","key":"dcsz6tjc0b","isDeprecated":false,"rightColumn":43.0,"textAlign":"LEFT","dynamicHeight":"FIXED","widgetId":"12ekvwba2d","isVisible":true,"fontStyle":"BOLD","textColor":"{{appsmith.theme.colors.primaryColor}}","version":1.0,"parentId":"x0dsjacbtt","renderMode":"CANVAS","isLoading":false,"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","maxDynamicHeight":9000.0,"fontSize":"1.5rem","minDynamicHeight":4.0},{"boxShadow":"none","widgetName":"FileClose_Button","onClick":"{{storeValue('statename','Completed');await FileUploadProcess.runRefreshFunc().then(()=>closeModal('Progress_Modal'))}}","buttonColor":"{{appsmith.theme.colors.primaryColor}}","dynamicPropertyPathList":[{"key":"isDisabled"},{"key":"onClick"}],"displayName":"Button","iconSVG":"/static/media/icon.cca026338f1c8eb6df8ba03d084c2fca.svg","searchTags":["click","submit"],"topRow":18.0,"bottomRow":22.0,"type":"BUTTON_WIDGET","hideCard":false,"animateLoading":true,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":47.0,"dynamicBindingPathList":[{"key":"buttonColor"},{"key":"borderRadius"},{"key":"isDisabled"}],"text":"Close","isDisabled":"{{Error_text.text.length==0||appsmith.store.closedisable=='False'}}","key":"5g8c8gayqk","isDeprecated":false,"rightColumn":63.0,"isDefaultClickDisabled":true,"widgetId":"9yxxjw8cba","buttonStyle":"PRIMARY","isVisible":true,"recaptchaType":"V3","version":1.0,"parentId":"x0dsjacbtt","renderMode":"CANVAS","isLoading":false,"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","buttonVariant":"SECONDARY","placement":"CENTER"},{"widgetName":"Upload_Progress","progressType":"linear","isCanvas":false,"dynamicPropertyPathList":[{"key":"progress"}],"displayName":"Progress","iconSVG":"/static/media/icon.9b0d7b96a0223e8120bf6f14aca4154a.svg","searchTags":["percent"],"topRow":7.0,"bottomRow":13.0,"parentRowSpace":10.0,"type":"PROGRESS_WIDGET","isIndeterminate":false,"hideCard":false,"fillColor":"{{appsmith.theme.colors.primaryColor}}","parentColumnSpace":8.25,"dynamicTriggerPathList":[],"leftColumn":3.0,"dynamicBindingPathList":[{"key":"fillColor"},{"key":"borderRadius"},{"key":"progress"}],"key":"0kuaqx9xvs","showResult":true,"isDeprecated":false,"rightColumn":62.0,"counterClosewise":false,"widgetId":"kru93wkqoj","isVisible":true,"steps":"1","version":1.0,"parentId":"x0dsjacbtt","renderMode":"CANVAS","isLoading":false,"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","progress":"{{appsmith.store.progressstatus}}"}],"isDisabled":false,"key":"yu9isw81na","isDeprecated":false,"rightColumn":337.5,"detachFromLayout":true,"widgetId":"x0dsjacbtt","accentColor":"{{appsmith.theme.colors.primaryColor}}","isVisible":true,"version":1.0,"parentId":"4huuqiood7","renderMode":"CANVAS","isLoading":false,"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}"}],"key":"52gxsk3uoi","height":244.0,"isDeprecated":false,"rightColumn":38.0,"detachFromLayout":true,"dynamicHeight":"FIXED","widgetId":"4huuqiood7","canOutsideClickClose":true,"canEscapeKeyClose":true,"version":2.0,"parentId":"0","renderMode":"CANVAS","isLoading":false,"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","maxDynamicHeight":9000.0,"width":540.0,"minDynamicHeight":4.0},{"boxShadow":"none","widgetName":"ChangeState_Modal","isCanvas":true,"displayName":"Modal","iconSVG":"/static/media/icon.4975978e.svg","topRow":86.0,"bottomRow":110.0,"parentRowSpace":10.0,"type":"MODAL_WIDGET","hideCard":false,"shouldScrollContents":true,"animateLoading":false,"parentColumnSpace":19.8125,"dynamicTriggerPathList":[],"leftColumn":19.0,"dynamicBindingPathList":[],"children":[{"boxShadow":"none","widgetName":"Canvas2Copy","displayName":"Canvas","topRow":0.0,"bottomRow":500.0,"parentRowSpace":1.0,"type":"CANVAS_WIDGET","canExtend":true,"hideCard":true,"shouldScrollContents":false,"minHeight":506.0,"parentColumnSpace":1.0,"dynamicTriggerPathList":[],"leftColumn":0.0,"dynamicBindingPathList":[],"children":[{"boxShadow":"none","widgetName":"Icon1","onClick":"{{closeModal('ChangeState_Modal')}}","buttonColor":"#2E3D49","displayName":"Icon","iconSVG":"/static/media/icon.31d6cfe0.svg","topRow":45.0,"bottomRow":49.0,"type":"ICON_BUTTON_WIDGET","hideCard":true,"dynamicTriggerPathList":[],"leftColumn":54.0,"dynamicBindingPathList":[],"iconSize":24.0,"key":"lto10z5naf","labelTextSize":"0.875rem","rightColumn":62.0,"iconName":"cross","widgetId":"w1r30d2idu","isVisible":false,"version":1.0,"parentId":"7pae5uwb93","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","buttonVariant":"TERTIARY"},{"boxShadow":"none","widgetName":"Decision_Title","dynamicPropertyPathList":[{"key":"fontSize"}],"displayName":"Text","iconSVG":"/static/media/icon.97c59b52.svg","topRow":1.0,"bottomRow":5.0,"type":"TEXT_WIDGET","hideCard":false,"animateLoading":false,"dynamicTriggerPathList":[],"overflow":"NONE","fontFamily":"System Default","leftColumn":1.0,"dynamicBindingPathList":[{"key":"text"}],"text":"{{ Process.getModalTitle() }}","key":"f231c049hd","labelTextSize":"0.875rem","rightColumn":62.0,"textAlign":"LEFT","dynamicHeight":"FIXED","widgetId":"5i9y3i4836","isVisible":true,"fontStyle":"BOLD","textColor":"#008695","version":1.0,"parentId":"7pae5uwb93","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","maxDynamicHeight":9000.0,"fontSize":"1.5rem","minDynamicHeight":4.0},{"boxShadow":"none","widgetName":"Button1Copy","onClick":"{{closeModal('ChangeState_Modal'); GlobalVariables.resetForm([\"CheckboxGroup1\"]) }}","buttonColor":"#008695","dynamicPropertyPathList":[{"key":"onClick"}],"displayName":"Button","iconSVG":"/static/media/icon.cca02633.svg","topRow":45.0,"bottomRow":49.0,"type":"BUTTON_WIDGET","hideCard":false,"animateLoading":false,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":18.0,"dynamicBindingPathList":[],"text":"Close","isDisabled":false,"key":"o2ddp866uc","labelTextSize":"0.875rem","rightColumn":30.0,"isDefaultClickDisabled":true,"widgetId":"s12y9clawp","buttonStyle":"PRIMARY","isVisible":true,"version":1.0,"recaptchaType":"V3","parentId":"7pae5uwb93","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","buttonVariant":"SECONDARY"},{"boxShadow":"none","widgetName":"Button2","onClick":"{{ Process.onModalSubmitClicked(Estimate_Table.selectedRow.EId); GlobalVariables.resetForm([\"CheckboxGroup1\", \"Estimate_Table\"]) }}","buttonColor":"#008695","dynamicPropertyPathList":[{"key":"onClick"}],"displayName":"Button","iconSVG":"/static/media/icon.cca02633.svg","topRow":45.0,"bottomRow":49.0,"type":"BUTTON_WIDGET","hideCard":false,"animateLoading":false,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":3.0,"dynamicBindingPathList":[],"text":"Confirm","isDisabled":false,"key":"o2ddp866uc","labelTextSize":"0.875rem","rightColumn":15.0,"isDefaultClickDisabled":true,"widgetId":"ywnwrxt3jl","buttonStyle":"PRIMARY_BUTTON","isVisible":true,"version":1.0,"recaptchaType":"V3","parentId":"7pae5uwb93","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","buttonVariant":"SECONDARY"},{"boxShadow":"none","widgetName":"Container2Copy","borderColor":"transparent","isCanvas":true,"dynamicPropertyPathList":[{"key":"borderRadius"}],"displayName":"Container","iconSVG":"/static/media/icon.1977dca3.svg","topRow":6.0,"bottomRow":43.0,"parentRowSpace":10.0,"type":"CONTAINER_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":11.125,"dynamicTriggerPathList":[],"leftColumn":1.0,"dynamicBindingPathList":[],"children":[{"boxShadow":"none","widgetName":"Canvas3Copy1","displayName":"Canvas","topRow":0.0,"bottomRow":370.0,"parentRowSpace":1.0,"type":"CANVAS_WIDGET","canExtend":false,"hideCard":true,"minHeight":400.0,"parentColumnSpace":1.0,"leftColumn":0.0,"dynamicBindingPathList":[],"children":[{"boxShadow":"none","widgetName":"CheckboxGroup1","dynamicPropertyPathList":[{"key":"options"}],"displayName":"Checkbox Group","iconSVG":"/static/media/icon.ecb38479.svg","topRow":26.0,"bottomRow":35.0,"parentRowSpace":10.0,"type":"CHECKBOX_GROUP_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":11.125,"dynamicTriggerPathList":[],"leftColumn":0.0,"dynamicBindingPathList":[{"key":"options"}],"options":"{{ appsmith.store.currentDecision?.Confirmation.map((thisValue)=>{return({\"label\":thisValue,\"value\":thisValue})}) }}","isDisabled":false,"key":"bs9z3neqyk","optionAlignment":"unset","labelTextSize":"0.875rem","isRequired":true,"rightColumn":63.0,"defaultSelectedValues":"","dynamicHeight":"FIXED","widgetId":"7diafpj5em","accentColor":"#03B365","isVisible":false,"version":2.0,"parentId":"m6xwlkxfxi","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","maxDynamicHeight":9000.0,"isInline":false,"minDynamicHeight":4.0},{"boxShadow":"none","widgetName":"Text6","displayName":"Text","iconSVG":"/static/media/icon.97c59b52.svg","topRow":0.0,"bottomRow":21.0,"parentRowSpace":10.0,"type":"TEXT_WIDGET","hideCard":false,"animateLoading":false,"overflow":"NONE","parentColumnSpace":9.751904296874999,"dynamicTriggerPathList":[],"fontFamily":"System Default","leftColumn":1.0,"dynamicBindingPathList":[{"key":"text"}],"shouldTruncate":false,"truncateButtonColor":"#FFC13D","text":"{{\n(appsmith.store.currentDecision?.Confirmation)?.join('\\n\\n\\n')}}","key":"65340ap74o","labelTextSize":"0.875rem","rightColumn":61.0,"textAlign":"LEFT","dynamicHeight":"FIXED","widgetId":"5xutuu5x1w","isVisible":true,"fontStyle":"","textColor":"#008695","version":1.0,"parentId":"m6xwlkxfxi","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","maxDynamicHeight":9000.0,"fontSize":"0.875rem","minDynamicHeight":4.0}],"key":"rwedoxpb42","labelTextSize":"0.875rem","rightColumn":267.0,"detachFromLayout":true,"widgetId":"m6xwlkxfxi","containerStyle":"none","isVisible":true,"version":1.0,"parentId":"s72exeqldb","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px"}],"borderWidth":"0","key":"oujpihjo93","labelTextSize":"0.875rem","backgroundColor":"#F6F7F8","rightColumn":63.0,"dynamicHeight":"FIXED","widgetId":"s72exeqldb","containerStyle":"card","isVisible":true,"version":1.0,"parentId":"7pae5uwb93","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","maxDynamicHeight":9000.0,"minDynamicHeight":4.0}],"isDisabled":false,"key":"1kfu4e4b02","labelTextSize":"0.875rem","rightColumn":475.5,"detachFromLayout":true,"widgetId":"7pae5uwb93","isVisible":true,"version":1.0,"parentId":"7ne8epywhk","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px"}],"key":"tu1594ea2u","height":506.0,"labelTextSize":"0.875rem","rightColumn":43.0,"detachFromLayout":true,"dynamicHeight":"FIXED","widgetId":"7ne8epywhk","canOutsideClickClose":true,"canEscapeKeyClose":true,"version":2.0,"parentId":"0","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","maxDynamicHeight":9000.0,"width":676.9,"minDynamicHeight":4.0},{"boxShadow":"none","widgetName":"Container1","borderColor":"transparent","isCanvas":true,"dynamicPropertyPathList":[{"key":"borderRadius"}],"displayName":"Container","iconSVG":"/static/media/icon.1977dca3.svg","topRow":0.0,"bottomRow":20.0,"parentRowSpace":10.0,"type":"CONTAINER_WIDGET","hideCard":false,"animateLoading":true,"parentColumnSpace":15.0625,"leftColumn":0.0,"children":[{"boxShadow":"none","widgetName":"Canvas1","displayName":"Canvas","topRow":0.0,"bottomRow":200.0,"parentRowSpace":1.0,"type":"CANVAS_WIDGET","canExtend":false,"hideCard":true,"minHeight":400.0,"parentColumnSpace":1.0,"leftColumn":0.0,"children":[{"boxShadow":"0px 0px 4px 3px rgba(0, 0, 0, 0.25)","widgetName":"Admin_Button","onClick":"{{navigateTo('Estimate State', {})}}","buttonColor":"{{appsmith.theme.colors.primaryColor}}","dynamicPropertyPathList":[{"key":"isVisible"},{"key":"boxShadow"}],"displayName":"Icon Button","iconSVG":"/static/media/icon.1a0c634ac75f9fa6b6ae7a8df882a3ba.svg","searchTags":["click","submit"],"topRow":0.0,"bottomRow":4.0,"tooltip":"Go to Estimate Admin Page","parentRowSpace":10.0,"type":"ICON_BUTTON_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":14.0625,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":61.0,"dynamicBindingPathList":[{"key":"buttonColor"},{"key":"isVisible"}],"isDisabled":false,"key":"l5y4kk0mpp","isDeprecated":false,"rightColumn":64.0,"iconName":"settings","widgetId":"848rfjm6bl","isVisible":"{{GlobalVariables.disableCorporateAdminButton()}}","version":1.0,"parentId":"lu5t2mwikl","renderMode":"CANVAS","isLoading":false,"borderRadius":"0.375rem","buttonVariant":"TERTIARY"},{"boxShadow":"0px 0px 4px 3px rgba(0, 0, 0, 0.25)","widgetName":"EnterPO","onClick":"{{ Process.clickState('EnterPO', Estimate_Select) }}","buttonColor":"#008695","dynamicPropertyPathList":[{"key":"onClick"},{"key":"boxShadow"}],"displayName":"Button","iconSVG":"/static/media/icon.cca02633.svg","topRow":11.0,"bottomRow":16.0,"parentRowSpace":10.0,"type":"BUTTON_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":14.75,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":45.0,"dynamicBindingPathList":[],"text":"Enter PO","isDisabled":false,"key":"lf7byu5aeh","labelTextSize":"0.875rem","rightColumn":56.0,"isDefaultClickDisabled":true,"widgetId":"cpja6zoiot","isVisible":true,"recaptchaType":"V3","version":1.0,"parentId":"lu5t2mwikl","renderMode":"CANVAS","isLoading":false,"borderRadius":"0.375rem","buttonVariant":"SECONDARY","placement":"CENTER"},{"boxShadow":"none","widgetName":"Signoff_EnterPO","onClick":"{{Process.clickArrow(\"Signoff_EnterPO\")}}","buttonColor":"#03B365","dynamicPropertyPathList":[{"key":"isDisabled"},{"key":"onClick"}],"displayName":"Icon Button","iconSVG":"/static/media/icon.1a0c634a.svg","topRow":11.0,"bottomRow":15.0,"parentRowSpace":10.0,"type":"ICON_BUTTON_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":14.75,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":39.0,"dynamicBindingPathList":[{"key":"isDisabled"}],"isDisabled":"{{Process.disableArrow('Signoff')}}","key":"m4759zi3w8","labelTextSize":"0.875rem","rightColumn":44.0,"iconName":"arrow-right","widgetId":"farq2jxuha","isVisible":true,"version":1.0,"parentId":"lu5t2mwikl","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","buttonVariant":"TERTIARY"},{"boxShadow":"none","widgetName":"Signoff_Prepare","onClick":"{{Process.clickArrow(\"Signoff_Prepare\")}}","buttonColor":"#03B365","dynamicPropertyPathList":[{"key":"isDisabled"},{"key":"onClick"}],"displayName":"Icon Button","iconSVG":"/static/media/icon.1a0c634a.svg","topRow":7.0,"bottomRow":11.0,"parentRowSpace":10.0,"type":"ICON_BUTTON_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":14.75,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":10.0,"dynamicBindingPathList":[{"key":"isDisabled"}],"isDisabled":"{{Process.disableArrow('Signoff')}}","key":"m4759zi3w8","labelTextSize":"0.875rem","rightColumn":17.0,"iconName":"arrow-up","widgetId":"bpxdw6qonk","isVisible":true,"version":1.0,"parentId":"lu5t2mwikl","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","buttonVariant":"TERTIARY"},{"boxShadow":"none","widgetName":"Review_Signoff","onClick":"{{Process.clickArrow(\"Review_Signoff\")}}","buttonColor":"#03B365","dynamicPropertyPathList":[{"key":"isDisabled"},{"key":"onClick"}],"displayName":"Icon Button","iconSVG":"/static/media/icon.1a0c634a.svg","topRow":6.0,"bottomRow":10.0,"parentRowSpace":10.0,"type":"ICON_BUTTON_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":14.75,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":29.0,"dynamicBindingPathList":[{"key":"isDisabled"}],"isDisabled":"{{Process.disableArrow('Review')}}","key":"m4759zi3w8","labelTextSize":"0.875rem","rightColumn":35.0,"iconName":"arrow-down","widgetId":"6p116xiszk","isVisible":true,"version":1.0,"parentId":"lu5t2mwikl","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","buttonVariant":"TERTIARY"},{"boxShadow":"none","widgetName":"Review_Prepare","onClick":"{{Process.clickArrow(\"Review_Prepare\")}}","buttonColor":"#03B365","dynamicPropertyPathList":[{"key":"isDisabled"},{"key":"onClick"}],"displayName":"Icon Button","iconSVG":"/static/media/icon.1a0c634a.svg","topRow":4.0,"bottomRow":8.0,"parentRowSpace":10.0,"type":"ICON_BUTTON_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":14.75,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":20.0,"dynamicBindingPathList":[{"key":"isDisabled"}],"isDisabled":"{{Process.disableArrow('Review')}}","key":"m4759zi3w8","labelTextSize":"0.875rem","rightColumn":24.0,"iconName":"arrow-left","widgetId":"htomxe8q4l","isVisible":true,"version":1.0,"parentId":"lu5t2mwikl","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","buttonVariant":"TERTIARY"},{"boxShadow":"none","widgetName":"Prepare_Review","onClick":"{{Process.clickArrow(\"Prepare_Review\")}}","buttonColor":"#03B365","dynamicPropertyPathList":[{"key":"isDisabled"},{"key":"onClick"}],"displayName":"Icon Button","iconSVG":"/static/media/icon.1a0c634a.svg","topRow":0.0,"bottomRow":4.0,"parentRowSpace":10.0,"type":"ICON_BUTTON_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":14.75,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":20.0,"dynamicBindingPathList":[{"key":"isDisabled"}],"isDisabled":"{{Process.disableArrow('Prepare')}}","key":"m4759zi3w8","labelTextSize":"0.875rem","rightColumn":24.0,"iconName":"arrow-right","widgetId":"ky3zdedabx","isVisible":true,"version":1.0,"parentId":"lu5t2mwikl","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","buttonVariant":"TERTIARY"},{"boxShadow":"0px 0px 4px 3px rgba(0, 0, 0, 0.25)","widgetName":"SignOff","onClick":"{{ Process.clickState('Signoff', Estimate_Select) }}","buttonColor":"#008695","dynamicPropertyPathList":[{"key":"onClick"},{"key":"boxShadow"}],"displayName":"Button","iconSVG":"/static/media/icon.cca02633.svg","topRow":11.0,"bottomRow":16.0,"parentRowSpace":10.0,"type":"BUTTON_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":14.75,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":7.0,"dynamicBindingPathList":[],"text":"Sign-Off","isDisabled":false,"key":"lf7byu5aeh","labelTextSize":"0.875rem","rightColumn":38.0,"isDefaultClickDisabled":true,"widgetId":"117rf1gdin","isVisible":true,"recaptchaType":"V3","version":1.0,"parentId":"lu5t2mwikl","renderMode":"CANVAS","isLoading":false,"borderRadius":"0.375rem","buttonVariant":"SECONDARY","placement":"CENTER"},{"boxShadow":"0px 0px 4px 3px rgba(0, 0, 0, 0.25)","widgetName":"Review","onClick":"{{ Process.clickState('Review', Estimate_Select) }}","buttonColor":"#008695","dynamicPropertyPathList":[{"key":"onClick"},{"key":"boxShadow"}],"displayName":"Button","iconSVG":"/static/media/icon.cca02633.svg","topRow":1.0,"bottomRow":6.0,"parentRowSpace":10.0,"type":"BUTTON_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":14.75,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":26.0,"dynamicBindingPathList":[],"text":"Review","isDisabled":false,"key":"lf7byu5aeh","labelTextSize":"0.875rem","rightColumn":38.0,"isDefaultClickDisabled":true,"widgetId":"rjgnxbk54y","isVisible":true,"recaptchaType":"V3","version":1.0,"parentId":"lu5t2mwikl","renderMode":"CANVAS","isLoading":false,"borderRadius":"0.375rem","buttonVariant":"SECONDARY","placement":"CENTER"},{"boxShadow":"0px 0px 4px 3px rgba(0, 0, 0, 0.25)","widgetName":"Prepare","onClick":"{{ Process.clickState('Prepare', Estimate_Select) }}","buttonColor":"#008695","dynamicPropertyPathList":[{"key":"onClick"},{"key":"boxShadow"}],"displayName":"Button","iconSVG":"/static/media/icon.cca02633.svg","topRow":1.0,"bottomRow":6.0,"parentRowSpace":10.0,"type":"BUTTON_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":14.75,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":7.0,"dynamicBindingPathList":[],"text":"Prepare","isDisabled":false,"key":"lf7byu5aeh","labelTextSize":"0.875rem","rightColumn":19.0,"isDefaultClickDisabled":true,"widgetId":"ymjflzz1xj","isVisible":true,"recaptchaType":"V3","version":1.0,"parentId":"lu5t2mwikl","renderMode":"CANVAS","isLoading":false,"borderRadius":"0.375rem","buttonVariant":"SECONDARY","placement":"CENTER"}],"key":"ck656xey1j","labelTextSize":"0.875rem","rightColumn":361.5,"detachFromLayout":true,"widgetId":"lu5t2mwikl","containerStyle":"none","isVisible":true,"version":1.0,"parentId":"ft7lovcyg4","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px"}],"borderWidth":"0","key":"r0bflk5gc0","labelTextSize":"0.875rem","backgroundColor":"#FFFFFF","rightColumn":64.0,"dynamicHeight":"FIXED","widgetId":"ft7lovcyg4","containerStyle":"card","isVisible":true,"version":1.0,"parentId":"0","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","maxDynamicHeight":9000.0,"minDynamicHeight":4.0},{"boxShadow":"none","widgetName":"Container2","borderColor":"transparent","isCanvas":true,"dynamicPropertyPathList":[{"key":"borderRadius"}],"displayName":"Container","iconSVG":"/static/media/icon.1977dca3.svg","topRow":21.0,"bottomRow":88.0,"parentRowSpace":10.0,"type":"CONTAINER_WIDGET","hideCard":false,"animateLoading":true,"parentColumnSpace":15.0625,"leftColumn":0.0,"children":[{"boxShadow":"none","widgetName":"Canvas2","displayName":"Canvas","topRow":0.0,"bottomRow":670.0,"parentRowSpace":1.0,"type":"CANVAS_WIDGET","canExtend":false,"hideCard":true,"minHeight":400.0,"parentColumnSpace":1.0,"leftColumn":0.0,"children":[{"boxShadow":"none","widgetName":"Tabs1","isCanvas":true,"displayName":"Tabs","iconSVG":"/static/media/icon.74a6d653.svg","topRow":0.0,"bottomRow":65.0,"parentRowSpace":10.0,"type":"TABS_WIDGET","hideCard":false,"shouldScrollContents":false,"animateLoading":true,"parentColumnSpace":14.75,"dynamicTriggerPathList":[],"leftColumn":0.0,"dynamicBindingPathList":[{"key":"accentColor"}],"children":[{"tabId":"tab1","boxShadow":"none","widgetName":"Canvas3","displayName":"Canvas","topRow":0.0,"bottomRow":610.0,"parentRowSpace":1.0,"type":"CANVAS_WIDGET","canExtend":true,"hideCard":true,"shouldScrollContents":false,"minHeight":400.0,"parentColumnSpace":1.0,"dynamicTriggerPathList":[],"leftColumn":0.0,"dynamicBindingPathList":[],"children":[{"boxShadow":"0px 0px 2px 1.5px rgba(0, 0, 0, 0.25)","mobileBottomRow":4.0,"widgetName":"PopUp_Button","onClick":"{{storeValue('progressstatus','0');showModal('FileUpload_Modal');EAttachments_Select.run({\"EId\":Estimate_Table.selectedRow.EId});storeValue('ActualFileName','');storeValue('ESalesId',Estimate_Table.selectedRow.Id);storeValue('statename','FileCheck');storeValue('progressstatus',0);}}  /","buttonColor":"{{appsmith.theme.colors.primaryColor}}","dynamicPropertyPathList":[{"key":"isDisabled"},{"key":"onClick"},{"key":"boxShadow"},{"key":"isVisible"}],"displayName":"Icon button","iconSVG":"/static/media/icon.80fc7466c0d7181ec0271de7fda795ec.svg","searchTags":["click","submit"],"topRow":0.0,"bottomRow":4.0,"tooltip":"Upload Estimate Files","parentRowSpace":10.0,"type":"ICON_BUTTON_WIDGET","hideCard":false,"mobileRightColumn":62.0,"animateLoading":false,"parentColumnSpace":17.625,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":18.0,"dynamicBindingPathList":[{"key":"buttonColor"},{"key":"isDisabled"},{"key":"isVisible"}],"isDisabled":"{{Estimate_Table.selectedRowIndex==-1}}","key":"dhazzocl7v","isDeprecated":false,"rightColumn":21.0,"iconName":"cloud-upload","widgetId":"j2no7imv9q","minWidth":50.0,"isVisible":"{{appsmith.store.currentStateName=='Review'}}","version":1.0,"parentId":"tf5lwkhdal","renderMode":"CANVAS","isLoading":false,"mobileTopRow":0.0,"responsiveBehavior":"hug","borderRadius":"0.375rem","mobileLeftColumn":58.0,"buttonVariant":"SECONDARY"},{"boxShadow":"none","widgetName":"EstimateUpdate_Modal","isCanvas":true,"displayName":"Modal","iconSVG":"/static/media/icon.4975978e.svg","topRow":52.0,"bottomRow":52.0,"parentRowSpace":1.0,"type":"MODAL_WIDGET","hideCard":false,"shouldScrollContents":true,"animateLoading":false,"parentColumnSpace":1.0,"dynamicTriggerPathList":[],"leftColumn":0.0,"dynamicBindingPathList":[],"children":[{"boxShadow":"none","widgetName":"Canvas3Copy","displayName":"Canvas","topRow":0.0,"bottomRow":490.0,"parentRowSpace":1.0,"type":"CANVAS_WIDGET","canExtend":true,"hideCard":true,"shouldScrollContents":false,"minHeight":494.0,"parentColumnSpace":1.0,"leftColumn":0.0,"children":[{"boxShadow":"none","widgetName":"Mod_Notes_Input","displayName":"Input","iconSVG":"/static/media/icon.9f505595.svg","topRow":33.0,"bottomRow":40.0,"parentRowSpace":10.0,"autoFocus":false,"type":"INPUT_WIDGET_V2","hideCard":false,"animateLoading":false,"parentColumnSpace":9.59375,"dynamicTriggerPathList":[],"resetOnSubmit":true,"leftColumn":28.0,"dynamicBindingPathList":[{"key":"defaultText"},{"key":"validation"},{"key":"accentColor"}],"labelStyle":"","inputType":"MULTI_LINE_TEXT","isDisabled":false,"key":"dx5km4ryjc","validation":"{{Mod_Notes_Input.text.length > 0}}","labelTextSize":"0.875rem","isRequired":true,"rightColumn":50.0,"dynamicHeight":"FIXED","widgetId":"syeuvcv8ul","accentColor":"{{appsmith.theme.colors.primaryColor}}","isVisible":true,"label":"","version":2.0,"parentId":"9rwj7be9hw","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","maxDynamicHeight":9000.0,"iconAlign":"left","defaultText":"{{Estimate_Table.selectedRow.Notes||\"\"}}","minDynamicHeight":4.0},{"boxShadow":"none","widgetName":"IconButton1","onClick":"{{closeModal('EstimateUpdate_Modal')}}","buttonColor":"#2E3D49","displayName":"Icon Button","iconSVG":"/static/media/icon.1a0c634a.svg","topRow":1.0,"bottomRow":5.0,"type":"ICON_BUTTON_WIDGET","hideCard":false,"animateLoading":false,"dynamicTriggerPathList":[],"leftColumn":56.0,"dynamicBindingPathList":[],"iconSize":24.0,"isDisabled":false,"key":"q17by22vn7","labelTextSize":"0.875rem","rightColumn":64.0,"iconName":"cross","widgetId":"fcrcl70lo4","isVisible":true,"version":1.0,"parentId":"9rwj7be9hw","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","buttonVariant":"TERTIARY"},{"boxShadow":"none","widgetName":"Text1","dynamicPropertyPathList":[{"key":"fontSize"}],"displayName":"Text","iconSVG":"/static/media/icon.97c59b52.svg","topRow":1.0,"bottomRow":5.0,"type":"TEXT_WIDGET","hideCard":false,"animateLoading":false,"dynamicTriggerPathList":[],"overflow":"NONE","fontFamily":"System Default","leftColumn":1.0,"dynamicBindingPathList":[{"key":"textColor"}],"truncateButtonColor":"#FFC13D","text":"Update Estimate Details ","key":"6avda98z82","labelTextSize":"0.875rem","rightColumn":41.0,"textAlign":"LEFT","dynamicHeight":"FIXED","widgetId":"ckq3bhczbx","isVisible":true,"fontStyle":"BOLD","textColor":"{{GlobalVariables.LabelColor}}","version":1.0,"parentId":"9rwj7be9hw","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","maxDynamicHeight":9000.0,"fontSize":"1.5rem","minDynamicHeight":4.0},{"boxShadow":"none","widgetName":"Button1","onClick":"{{closeModal('EstimateUpdate_Modal');GlobalVariables.resetForm([\"Estimate_Table\"])}}","buttonColor":"#33838f","dynamicPropertyPathList":[{"key":"onClick"}],"displayName":"Button","iconSVG":"/static/media/icon.cca02633.svg","topRow":43.0,"bottomRow":47.0,"type":"BUTTON_WIDGET","hideCard":false,"animateLoading":false,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":17.0,"dynamicBindingPathList":[],"text":"Cancel","isDisabled":false,"key":"3vnupimqgc","labelTextSize":"0.875rem","rightColumn":29.0,"isDefaultClickDisabled":true,"widgetId":"zxsma2xs1t","buttonStyle":"PRIMARY","isVisible":true,"recaptchaType":"V3","version":1.0,"parentId":"9rwj7be9hw","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","buttonVariant":"SECONDARY","placement":"CENTER"},{"boxShadow":"none","widgetName":"Submit_Button","onClick":"{{PageObjects.estimateUpdate(Mod_Estimate_Number_Input.text,Mod_Email_Input.text,Mod_CCEmail_Input.text,Mod_Notes_Input.text,Estimate_Table.selectedRow.EId)}}","buttonColor":"#33838f","dynamicPropertyPathList":[{"key":"onClick"},{"key":"isDisabled"}],"displayName":"Button","iconSVG":"/static/media/icon.cca02633.svg","topRow":43.0,"bottomRow":47.0,"type":"BUTTON_WIDGET","hideCard":false,"animateLoading":false,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":3.0,"dynamicBindingPathList":[{"key":"isDisabled"}],"text":"Submit","isDisabled":"{{GlobalVariables.disableCreateButton([Mod_Estimate_Number_Input, Mod_Email_Input, Mod_CCEmail_Input,Mod_Notes_Input])}}","key":"3vnupimqgc","labelTextSize":"0.875rem","rightColumn":15.0,"isDefaultClickDisabled":true,"widgetId":"7v645r7mb1","buttonStyle":"PRIMARY_BUTTON","isVisible":true,"recaptchaType":"V3","version":1.0,"parentId":"9rwj7be9hw","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","buttonVariant":"SECONDARY","placement":"CENTER"},{"boxShadow":"none","widgetName":"Mod_Estimate_Number_Input","displayName":"Input","iconSVG":"/static/media/icon.9f505595.svg","topRow":9.0,"bottomRow":13.0,"parentRowSpace":10.0,"autoFocus":false,"type":"INPUT_WIDGET_V2","hideCard":false,"animateLoading":false,"parentColumnSpace":9.59375,"dynamicTriggerPathList":[],"resetOnSubmit":true,"leftColumn":28.0,"dynamicBindingPathList":[{"key":"defaultText"},{"key":"validation"},{"key":"accentColor"}],"labelStyle":"","inputType":"TEXT","maxChars":"10","isDisabled":false,"key":"dx5km4ryjc","validation":"{{Mod_Estimate_Number_Input.text.length> 0 && Mod_Estimate_Number_Input.text.length <= 10}}","labelTextSize":"0.875rem","isRequired":true,"rightColumn":50.0,"dynamicHeight":"FIXED","widgetId":"nmhched2yy","accentColor":"{{appsmith.theme.colors.primaryColor}}","isVisible":true,"label":"","version":2.0,"parentId":"9rwj7be9hw","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","maxDynamicHeight":9000.0,"iconAlign":"left","defaultText":"{{Estimate_Table.selectedRow.EstimateNumber||\"\"}}","minDynamicHeight":4.0},{"boxShadow":"none","widgetName":"Mod_Email_Input","displayName":"Input","iconSVG":"/static/media/icon.9f505595.svg","topRow":15.0,"bottomRow":22.0,"parentRowSpace":10.0,"autoFocus":false,"type":"INPUT_WIDGET_V2","hideCard":false,"animateLoading":false,"parentColumnSpace":9.59375,"dynamicTriggerPathList":[],"resetOnSubmit":true,"leftColumn":28.0,"dynamicBindingPathList":[{"key":"defaultText"},{"key":"validation"},{"key":"accentColor"}],"labelStyle":"","inputType":"MULTI_LINE_TEXT","isDisabled":false,"key":"dx5km4ryjc","validation":"{{Mod_Email_Input.text.length > 0}}","labelTextSize":"0.875rem","isRequired":true,"rightColumn":50.0,"dynamicHeight":"FIXED","widgetId":"zo67wizi4a","accentColor":"{{appsmith.theme.colors.primaryColor}}","isVisible":true,"label":"","version":2.0,"parentId":"9rwj7be9hw","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","maxDynamicHeight":9000.0,"iconAlign":"left","defaultText":"{{Estimate_Table.selectedRow.EmailList||\"\"}}","minDynamicHeight":4.0},{"boxShadow":"none","widgetName":"Mod_CCEmail_Input","displayName":"Input","iconSVG":"/static/media/icon.9f505595.svg","topRow":24.0,"bottomRow":31.0,"parentRowSpace":10.0,"autoFocus":false,"type":"INPUT_WIDGET_V2","hideCard":false,"animateLoading":false,"parentColumnSpace":9.59375,"dynamicTriggerPathList":[],"resetOnSubmit":true,"leftColumn":28.0,"dynamicBindingPathList":[{"key":"defaultText"},{"key":"validation"},{"key":"accentColor"}],"labelStyle":"","inputType":"MULTI_LINE_TEXT","isDisabled":false,"key":"dx5km4ryjc","validation":"{{Mod_CCEmail_Input.text.length > 0}}","labelTextSize":"0.875rem","isRequired":true,"rightColumn":50.0,"dynamicHeight":"FIXED","widgetId":"nxbvaqr1b3","accentColor":"{{appsmith.theme.colors.primaryColor}}","isVisible":true,"label":"","version":2.0,"parentId":"9rwj7be9hw","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","maxDynamicHeight":9000.0,"iconAlign":"left","defaultText":"{{Estimate_Table.selectedRow.CCEmailList||\"\"}}","minDynamicHeight":4.0},{"boxShadow":"none","widgetName":"Text2","displayName":"Text","iconSVG":"/static/media/icon.97c59b52.svg","topRow":9.0,"bottomRow":13.0,"parentRowSpace":10.0,"type":"TEXT_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":9.59375,"dynamicTriggerPathList":[],"overflow":"NONE","fontFamily":"System Default","leftColumn":4.0,"dynamicBindingPathList":[{"key":"textColor"}],"truncateButtonColor":"#FFC13D","text":"Estimate #","key":"71yo2toqru","labelTextSize":"0.875rem","rightColumn":20.0,"textAlign":"LEFT","dynamicHeight":"FIXED","widgetId":"edliv3kagk","isVisible":true,"fontStyle":"","textColor":"{{GlobalVariables.LabelColor}}","version":1.0,"parentId":"9rwj7be9hw","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","maxDynamicHeight":9000.0,"fontSize":"0.875rem","minDynamicHeight":4.0},{"boxShadow":"none","widgetName":"Text3","displayName":"Text","iconSVG":"/static/media/icon.97c59b52.svg","topRow":17.0,"bottomRow":21.0,"parentRowSpace":10.0,"type":"TEXT_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":9.59375,"dynamicTriggerPathList":[],"overflow":"NONE","fontFamily":"System Default","leftColumn":4.0,"dynamicBindingPathList":[{"key":"textColor"}],"truncateButtonColor":"#FFC13D","text":"Email ","key":"71yo2toqru","labelTextSize":"0.875rem","rightColumn":20.0,"textAlign":"LEFT","dynamicHeight":"FIXED","widgetId":"mgnr1me02d","isVisible":true,"fontStyle":"","textColor":"{{GlobalVariables.LabelColor}}","version":1.0,"parentId":"9rwj7be9hw","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","maxDynamicHeight":9000.0,"fontSize":"0.875rem","minDynamicHeight":4.0},{"boxShadow":"none","widgetName":"Text4Copy","displayName":"Text","iconSVG":"/static/media/icon.97c59b52.svg","topRow":26.0,"bottomRow":30.0,"parentRowSpace":10.0,"type":"TEXT_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":9.59375,"dynamicTriggerPathList":[],"overflow":"NONE","fontFamily":"System Default","leftColumn":4.0,"dynamicBindingPathList":[{"key":"textColor"}],"truncateButtonColor":"#FFC13D","text":"CC Email ","key":"71yo2toqru","labelTextSize":"0.875rem","rightColumn":20.0,"textAlign":"LEFT","dynamicHeight":"FIXED","widgetId":"qn0arylkxd","isVisible":true,"fontStyle":"","textColor":"{{GlobalVariables.LabelColor}}","version":1.0,"parentId":"9rwj7be9hw","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","maxDynamicHeight":9000.0,"fontSize":"0.875rem","minDynamicHeight":4.0},{"widgetName":"Text7","dynamicPropertyPathList":[{"key":"textColor"}],"displayName":"Text","iconSVG":"/static/media/icon.97c59b52.svg","searchTags":["typography","paragraph"],"topRow":35.0,"bottomRow":39.0,"parentRowSpace":10.0,"type":"TEXT_WIDGET","hideCard":false,"animateLoading":false,"overflow":"NONE","fontFamily":"{{appsmith.theme.fontFamily.appFont}}","parentColumnSpace":9.59375,"dynamicTriggerPathList":[],"leftColumn":4.0,"dynamicBindingPathList":[{"key":"fontFamily"},{"key":"borderRadius"},{"key":"textColor"}],"shouldTruncate":false,"truncateButtonColor":"#FFC13D","text":"Notes","key":"dwmnk24n79","isDeprecated":false,"rightColumn":20.0,"textAlign":"LEFT","dynamicHeight":"FIXED","widgetId":"32ggju5wke","isVisible":true,"fontStyle":"","textColor":"{{GlobalVariables.LabelColor}}","version":1.0,"parentId":"9rwj7be9hw","renderMode":"CANVAS","isLoading":false,"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","maxDynamicHeight":9000.0,"fontSize":"0.875rem","minDynamicHeight":4.0}],"isDisabled":false,"key":"vh9jmsaoez","labelTextSize":"0.875rem","rightColumn":0.0,"detachFromLayout":true,"widgetId":"9rwj7be9hw","isVisible":true,"version":1.0,"parentId":"83qucdgq0y","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px"}],"key":"tw702ga681","height":494.0,"labelTextSize":"0.875rem","rightColumn":0.0,"detachFromLayout":true,"dynamicHeight":"FIXED","widgetId":"83qucdgq0y","canOutsideClickClose":true,"canEscapeKeyClose":true,"version":2.0,"parentId":"tf5lwkhdal","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","maxDynamicHeight":9000.0,"width":626.0,"minDynamicHeight":4.0},{"boxShadow":"none","widgetName":"Text4","borderColor":"","dynamicPropertyPathList":[{"key":"textColor"},{"key":"fontSize"}],"displayName":"Text","iconSVG":"/static/media/icon.97c59b52.svg","topRow":0.0,"bottomRow":5.0,"parentRowSpace":10.0,"type":"TEXT_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":14.75,"dynamicTriggerPathList":[],"overflow":"NONE","fontFamily":"System Default","leftColumn":0.0,"dynamicBindingPathList":[{"key":"textColor"},{"key":"text"}],"borderWidth":"5","truncateButtonColor":"#FFC13D","text":"Estimate in {{ appsmith.store.currentStateName }} state","key":"0l7d6pdzs3","labelTextSize":"0.875rem","rightColumn":17.0,"textAlign":"LEFT","dynamicHeight":"FIXED","widgetId":"4jbxzois7f","isVisible":true,"fontStyle":"ITALIC,BOLD","textColor":"{{ GlobalVariables.LabelColor }}","version":1.0,"parentId":"tf5lwkhdal","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","maxDynamicHeight":9000.0,"fontSize":"1.125rem","minDynamicHeight":4.0},{"boxShadow":"none","widgetName":"EstimateItem_Table","defaultPageSize":0.0,"columnOrder":["Id","EstimateId","Number","Description","Quantity","Amount","Deleted","customColumn1"],"isVisibleDownload":false,"dynamicPropertyPathList":[],"displayName":"Table","iconSVG":"/static/media/icon.db8a9cbd.svg","topRow":0.0,"bottomRow":33.0,"isSortable":true,"parentRowSpace":10.0,"type":"TABLE_WIDGET","defaultSelectedRow":"-1","hideCard":false,"animateLoading":false,"parentColumnSpace":14.4375,"dynamicTriggerPathList":[],"dynamicBindingPathList":[{"key":"primaryColumns.Description.computedValue"},{"key":"primaryColumns.Amount.computedValue"},{"key":"tableData"},{"key":"primaryColumns.Id.computedValue"},{"key":"primaryColumns.EstimateId.computedValue"},{"key":"primaryColumns.Number.computedValue"},{"key":"primaryColumns.Quantity.computedValue"},{"key":"primaryColumns.Deleted.computedValue"},{"key":"accentColor"},{"key":"primaryColumns.customColumn1.computedValue"},{"key":"derivedColumns.customColumn1.computedValue"}],"leftColumn":22.0,"primaryColumns":{"Description":{"index":3.0,"width":150.0,"id":"Description","horizontalAlignment":"LEFT","verticalAlignment":"CENTER","columnType":"text","textSize":"0.875rem","enableFilter":true,"enableSort":true,"isVisible":true,"isDisabled":false,"isCellVisible":true,"isDerived":false,"label":"Description","computedValue":"{{EstimateItem_Table.sanitizedTableData.map((currentRow) => ( currentRow.Description))}}","borderRadius":"0px","boxShadow":"none"},"Amount":{"index":3.0,"width":150.0,"id":"Amount","horizontalAlignment":"LEFT","verticalAlignment":"CENTER","columnType":"text","textSize":"0.875rem","enableFilter":true,"enableSort":true,"isVisible":true,"isDisabled":false,"isCellVisible":true,"isDerived":false,"label":"Amount","computedValue":"{{EstimateItem_Table.sanitizedTableData.map((currentRow) => ( currentRow.Amount))}}","borderRadius":"0px","boxShadow":"none"},"Id":{"index":0.0,"width":150.0,"id":"Id","horizontalAlignment":"LEFT","verticalAlignment":"CENTER","columnType":"text","textSize":"0.875rem","enableFilter":true,"enableSort":true,"isVisible":false,"isDisabled":false,"isCellVisible":true,"isDerived":false,"label":"Id","computedValue":"{{EstimateItem_Table.sanitizedTableData.map((currentRow) => ( currentRow.Id))}}","borderRadius":"0px","boxShadow":"none"},"EstimateId":{"index":1.0,"width":150.0,"id":"EstimateId","horizontalAlignment":"LEFT","verticalAlignment":"CENTER","columnType":"text","textSize":"0.875rem","enableFilter":true,"enableSort":true,"isVisible":false,"isDisabled":false,"isCellVisible":true,"isDerived":false,"label":"EstimateId","computedValue":"{{EstimateItem_Table.sanitizedTableData.map((currentRow) => ( currentRow.EstimateId))}}","borderRadius":"0px","boxShadow":"none"},"Number":{"index":2.0,"width":150.0,"id":"Number","horizontalAlignment":"LEFT","verticalAlignment":"CENTER","columnType":"text","textSize":"0.875rem","enableFilter":true,"enableSort":true,"isVisible":true,"isDisabled":false,"isCellVisible":true,"isDerived":false,"label":"E.Item#","computedValue":"{{EstimateItem_Table.sanitizedTableData.map((currentRow) => ( currentRow.Number))}}","borderRadius":"0px","boxShadow":"none"},"Quantity":{"index":4.0,"width":150.0,"id":"Quantity","horizontalAlignment":"LEFT","verticalAlignment":"CENTER","columnType":"text","textSize":"0.875rem","enableFilter":true,"enableSort":true,"isVisible":true,"isDisabled":false,"isCellVisible":true,"isDerived":false,"label":"Quantity","computedValue":"{{EstimateItem_Table.sanitizedTableData.map((currentRow) => ( currentRow.Quantity))}}","borderRadius":"0px","boxShadow":"none"},"Deleted":{"index":6.0,"width":150.0,"id":"Deleted","horizontalAlignment":"LEFT","verticalAlignment":"CENTER","columnType":"text","textSize":"0.875rem","enableFilter":true,"enableSort":true,"isVisible":false,"isDisabled":false,"isCellVisible":true,"isDerived":false,"label":"Deleted","computedValue":"{{EstimateItem_Table.sanitizedTableData.map((currentRow) => ( currentRow.Deleted))}}","borderRadius":"0px","boxShadow":"none"},"customColumn1":{"index":7.0,"width":150.0,"id":"customColumn1","columnType":"text","enableFilter":true,"enableSort":true,"isVisible":true,"isDisabled":false,"isCellVisible":true,"isDerived":true,"label":"Total","computedValue":"{{EstimateItem_Table.sanitizedTableData.map((currentRow) => ( currentRow.Amount* currentRow.Quantity))}}","buttonStyle":"rgb(3, 179, 101)","labelColor":"#FFFFFF"}},"delimiter":",","key":"r65rbl7l5u","derivedColumns":{"customColumn1":{"index":7.0,"width":150.0,"id":"customColumn1","columnType":"text","enableFilter":true,"enableSort":true,"isVisible":true,"isDisabled":false,"isCellVisible":true,"isDerived":true,"label":"Total","computedValue":"{{EstimateItem_Table.sanitizedTableData.map((currentRow) => ( currentRow.Amount* currentRow.Quantity))}}","buttonStyle":"rgb(3, 179, 101)","labelColor":"#FFFFFF"}},"labelTextSize":"0.875rem","rightColumn":64.0,"textSize":"0.875rem","widgetId":"7it8ppnt2m","accentColor":"{{appsmith.theme.colors.primaryColor}}","isVisibleFilters":false,"tableData":"{{Estimate_Table.selectedRowIndex==-1?\"\":\nEstimateItem_Select.data}}","isVisible":true,"label":"Data","searchKey":"","enableClientSideSearch":true,"version":3.0,"totalRecordsCount":0.0,"parentId":"tf5lwkhdal","renderMode":"CANVAS","isLoading":false,"horizontalAlignment":"LEFT","isVisibleSearch":true,"childStylesheet":{"button":{"buttonColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"menuButton":{"menuColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"iconButton":{"menuColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"}},"borderRadius":"0px","isVisiblePagination":true,"verticalAlignment":"CENTER","columnSizeMap":{"task":245.0,"step":62.0,"status":75.0,"Qty":71.0,"Description":214.0,"Item_":71.00000000000001,"Number":78.0,"Quantity":123.0,"Amount":188.0,"Total":72.0}},{"boxShadow":"none","isVisibleDownload":false,"iconSVG":"/static/media/icon.db8a9cbd.svg","topRow":6.0,"isSortable":true,"type":"TABLE_WIDGET","animateLoading":false,"dynamicBindingPathList":[{"key":"tableData"},{"key":"primaryColumns.EstimateNumber.computedValue"},{"key":"primaryColumns.SalesNumber.computedValue"},{"key":"accentColor"},{"key":"primaryColumns.EId.computedValue"},{"key":"primaryColumns.EmailList.computedValue"},{"key":"primaryColumns.CCEmailList.computedValue"},{"key":"primaryColumns.Notes.computedValue"},{"key":"primaryColumns.Id.computedValue"},{"key":"primaryColumns.Description.computedValue"}],"leftColumn":0.0,"delimiter":",","accentColor":"{{appsmith.theme.colors.primaryColor}}","isVisibleFilters":false,"isVisible":true,"enableClientSideSearch":true,"version":3.0,"totalRecordsCount":0.0,"isLoading":false,"childStylesheet":{"button":{"buttonColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"menuButton":{"menuColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"iconButton":{"menuColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"}},"borderRadius":"0px","columnSizeMap":{"task":245.0,"step":62.0,"status":75.0,"Number":94.0,"SalesNumber":99.0,"EstimateNumber":106.0},"widgetName":"Estimate_Table","defaultPageSize":0.0,"columnOrder":["EId","EstimateNumber","SalesNumber","Description","Notes","CCEmailList","Id","EmailList"],"dynamicPropertyPathList":[{"key":"onRowSelected"}],"displayName":"Table","bottomRow":34.0,"parentRowSpace":10.0,"defaultSelectedRow":"-1","hideCard":false,"parentColumnSpace":16.75,"dynamicTriggerPathList":[{"key":"onRowSelected"}],"primaryColumns":{"EstimateNumber":{"index":1.0,"width":150.0,"id":"EstimateNumber","horizontalAlignment":"LEFT","verticalAlignment":"CENTER","columnType":"text","textSize":"0.875rem","enableFilter":true,"enableSort":true,"isVisible":true,"isDisabled":false,"isCellVisible":true,"isDerived":false,"label":"Estimate #","computedValue":"{{Estimate_Table.sanitizedTableData.map((currentRow) => ( currentRow.EstimateNumber))}}","borderRadius":"0px","boxShadow":"none"},"SalesNumber":{"index":4.0,"width":150.0,"id":"SalesNumber","horizontalAlignment":"LEFT","verticalAlignment":"CENTER","columnType":"text","textSize":"0.875rem","enableFilter":true,"enableSort":true,"isVisible":true,"isDisabled":false,"isCellVisible":true,"isDerived":false,"label":"Sales #","computedValue":"{{Estimate_Table.sanitizedTableData.map((currentRow) => ( currentRow.SalesNumber))}}","borderRadius":"0px","boxShadow":"none"},"EId":{"index":0.0,"width":150.0,"id":"EId","horizontalAlignment":"LEFT","verticalAlignment":"CENTER","columnType":"text","textColor":"","textSize":"0.875rem","enableFilter":true,"enableSort":true,"isVisible":false,"isDisabled":false,"isCellVisible":true,"isDerived":false,"label":"EId","computedValue":"{{Estimate_Table.sanitizedTableData.map((currentRow) => ( currentRow.EId))}}","cellBackground":""},"EmailList":{"index":2.0,"width":150.0,"id":"EmailList","horizontalAlignment":"LEFT","verticalAlignment":"CENTER","columnType":"text","textColor":"","textSize":"0.875rem","enableFilter":true,"enableSort":true,"isVisible":true,"isDisabled":false,"isCellVisible":true,"isDerived":false,"label":"EmailList","computedValue":"{{Estimate_Table.sanitizedTableData.map((currentRow) => ( currentRow.EmailList))}}","cellBackground":""},"CCEmailList":{"index":3.0,"width":150.0,"id":"CCEmailList","horizontalAlignment":"LEFT","verticalAlignment":"CENTER","columnType":"text","textColor":"","textSize":"0.875rem","enableFilter":true,"enableSort":true,"isVisible":true,"isDisabled":false,"isCellVisible":true,"isDerived":false,"label":"CCEmailList","computedValue":"{{Estimate_Table.sanitizedTableData.map((currentRow) => ( currentRow.CCEmailList))}}","cellBackground":""},"Notes":{"index":4.0,"width":150.0,"id":"Notes","horizontalAlignment":"LEFT","verticalAlignment":"CENTER","columnType":"text","textColor":"","textSize":"0.875rem","enableFilter":true,"enableSort":true,"isVisible":true,"isDisabled":false,"isCellVisible":true,"isDerived":false,"label":"Notes","computedValue":"{{Estimate_Table.sanitizedTableData.map((currentRow) => ( currentRow.Notes))}}","cellBackground":""},"Id":{"index":6.0,"width":150.0,"id":"Id","horizontalAlignment":"LEFT","verticalAlignment":"CENTER","columnType":"text","textColor":"","textSize":"0.875rem","enableFilter":true,"enableSort":true,"isVisible":true,"isDisabled":false,"isCellVisible":true,"isDerived":false,"label":"Id","computedValue":"{{Estimate_Table.sanitizedTableData.map((currentRow) => ( currentRow.Id))}}","cellBackground":""},"Description":{"index":7.0,"width":150.0,"id":"Description","horizontalAlignment":"LEFT","verticalAlignment":"CENTER","columnType":"text","textColor":"","textSize":"0.875rem","enableFilter":true,"enableSort":true,"isVisible":true,"isDisabled":false,"isCellVisible":true,"isDerived":false,"label":"Description","computedValue":"{{Estimate_Table.sanitizedTableData.map((currentRow) => ( currentRow.Description))}}","cellBackground":""}},"onRowSelected":"{{EstimateItem_Select.run({'estimateId':Estimate_Table.selectedRow.EId})}}","key":"9nasfdvw9z","derivedColumns":{},"labelTextSize":"0.875rem","rightColumn":22.0,"textSize":"0.875rem","widgetId":"915wqpvwof","tableData":"{{Estimate_Select.data}}","label":"Data","searchKey":"","parentId":"tf5lwkhdal","renderMode":"CANVAS","horizontalAlignment":"LEFT","isVisibleSearch":true,"isVisiblePagination":true,"verticalAlignment":"CENTER"},{"boxShadow":"none","widgetName":"EstimateDetails_Container","borderColor":"transparent","isCanvas":true,"dynamicPropertyPathList":[{"key":"borderRadius"}],"displayName":"Container","iconSVG":"/static/media/icon.1977dca3.svg","topRow":34.0,"bottomRow":59.0,"parentRowSpace":10.0,"type":"CONTAINER_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":10.78125,"dynamicTriggerPathList":[],"leftColumn":0.0,"dynamicBindingPathList":[],"children":[{"boxShadow":"none","widgetName":"Canvas5","displayName":"Canvas","topRow":0.0,"bottomRow":250.0,"parentRowSpace":1.0,"type":"CANVAS_WIDGET","canExtend":false,"hideCard":true,"minHeight":400.0,"parentColumnSpace":1.0,"leftColumn":0.0,"children":[{"boxShadow":"none","widgetName":"Email_Input","displayName":"Input","iconSVG":"/static/media/icon.9f505595.svg","topRow":15.0,"bottomRow":24.0,"parentRowSpace":10.0,"autoFocus":false,"type":"INPUT_WIDGET_V2","hideCard":false,"animateLoading":false,"parentColumnSpace":16.125,"dynamicTriggerPathList":[],"resetOnSubmit":true,"leftColumn":0.0,"dynamicBindingPathList":[{"key":"validation"},{"key":"defaultText"},{"key":"accentColor"}],"labelPosition":"Top","labelStyle":"","labelTextColor":"#008695","inputType":"MULTI_LINE_TEXT","isDisabled":true,"key":"z664xfowd2","validation":"{{Email_Input.text.length> 0}}","labelTextSize":"0.875rem","isRequired":true,"rightColumn":20.0,"dynamicHeight":"FIXED","widgetId":"go42rme94i","accentColor":"{{appsmith.theme.colors.primaryColor}}","isVisible":true,"label":"Email","version":2.0,"parentId":"ywjb67lxlr","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","maxDynamicHeight":9000.0,"shouldAllowAutofill":false,"iconAlign":"left","defaultText":"{{Estimate_Table.selectedRow.EmailList||\"\"}}","minDynamicHeight":4.0},{"boxShadow":"none","widgetName":"Estimate_Number_Input","displayName":"Input","iconSVG":"/static/media/icon.9f505595.svg","topRow":1.0,"bottomRow":5.0,"parentRowSpace":10.0,"autoFocus":false,"type":"INPUT_WIDGET_V2","hideCard":false,"animateLoading":false,"parentColumnSpace":16.125,"dynamicTriggerPathList":[],"resetOnSubmit":true,"leftColumn":0.0,"dynamicBindingPathList":[{"key":"validation"},{"key":"defaultText"},{"key":"accentColor"}],"labelPosition":"Left","labelStyle":"","labelTextColor":"#008695","inputType":"TEXT","isDisabled":true,"key":"z664xfowd2","validation":"{{Estimate_Number_Input.text.length> 0}}","labelTextSize":"0.875rem","isRequired":true,"rightColumn":16.0,"dynamicHeight":"FIXED","widgetId":"4w13y0vy1n","accentColor":"{{appsmith.theme.colors.primaryColor}}","isVisible":true,"label":"Estimate#","version":2.0,"parentId":"ywjb67lxlr","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","maxDynamicHeight":9000.0,"iconAlign":"left","defaultText":"{{Estimate_Table.selectedRow.EstimateNumber||\"\"}}","minDynamicHeight":4.0},{"boxShadow":"none","widgetName":"CCEmail_Input","displayName":"Input","iconSVG":"/static/media/icon.9f505595.svg","topRow":15.0,"bottomRow":24.0,"parentRowSpace":10.0,"autoFocus":false,"type":"INPUT_WIDGET_V2","hideCard":false,"animateLoading":false,"parentColumnSpace":16.125,"dynamicTriggerPathList":[],"resetOnSubmit":true,"leftColumn":20.0,"dynamicBindingPathList":[{"key":"validation"},{"key":"defaultText"},{"key":"accentColor"}],"labelPosition":"Top","labelStyle":"","labelTextColor":"#008695","inputType":"MULTI_LINE_TEXT","isDisabled":true,"key":"z664xfowd2","validation":"{{CCEmail_Input.text.length> 0}}","labelTextSize":"0.875rem","isRequired":true,"rightColumn":40.0,"dynamicHeight":"FIXED","widgetId":"zjk365q0d0","accentColor":"{{appsmith.theme.colors.primaryColor}}","isVisible":true,"label":"CC Email","version":2.0,"parentId":"ywjb67lxlr","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","maxDynamicHeight":9000.0,"shouldAllowAutofill":false,"iconAlign":"left","defaultText":"{{Estimate_Table.selectedRow.CCEmailList||\"\"}}","minDynamicHeight":4.0},{"boxShadow":"none","widgetName":"EstimateItem_Amount_Input","displayName":"Input","iconSVG":"/static/media/icon.9f505595.svg","topRow":7.0,"bottomRow":14.0,"parentRowSpace":10.0,"autoFocus":false,"type":"INPUT_WIDGET_V2","hideCard":false,"animateLoading":false,"parentColumnSpace":16.125,"dynamicTriggerPathList":[],"resetOnSubmit":true,"leftColumn":52.0,"dynamicBindingPathList":[{"key":"validation"},{"key":"defaultText"},{"key":"accentColor"}],"labelPosition":"Top","labelStyle":"","labelTextColor":"#008695","inputType":"TEXT","isDisabled":false,"key":"z664xfowd2","validation":"{{EstimateItem_Amount_Input.text.length> 0}}","labelTextSize":"0.875rem","isRequired":true,"rightColumn":64.0,"dynamicHeight":"FIXED","widgetId":"h0xfy4exyy","accentColor":"{{appsmith.theme.colors.primaryColor}}","isVisible":true,"label":"Amount","version":2.0,"parentId":"ywjb67lxlr","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","maxDynamicHeight":9000.0,"iconAlign":"left","defaultText":"{{EstimateItem_Table.selectedRowIndex == -1 ? \"\" : EstimateItem_Table.selectedRow.Amount}}","minDynamicHeight":4.0},{"boxShadow":"none","widgetName":"EstimateItem_Quantity_Input","displayName":"Input","iconSVG":"/static/media/icon.9f505595.svg","topRow":7.0,"bottomRow":14.0,"parentRowSpace":10.0,"autoFocus":false,"type":"INPUT_WIDGET_V2","hideCard":false,"animateLoading":false,"parentColumnSpace":16.125,"dynamicTriggerPathList":[],"resetOnSubmit":true,"leftColumn":38.0,"dynamicBindingPathList":[{"key":"validation"},{"key":"defaultText"},{"key":"accentColor"}],"labelPosition":"Top","labelStyle":"","labelTextColor":"#008695","inputType":"TEXT","isDisabled":false,"key":"z664xfowd2","validation":"{{EstimateItem_Quantity_Input.text.length> 0 && parseFloat(EstimateItem_Quantity_Input.text)>=0}}","labelTextSize":"0.875rem","isRequired":true,"rightColumn":51.0,"dynamicHeight":"FIXED","widgetId":"j1znz0wwq5","accentColor":"{{appsmith.theme.colors.primaryColor}}","isVisible":true,"label":"Quantity","version":2.0,"parentId":"ywjb67lxlr","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","maxDynamicHeight":9000.0,"iconAlign":"left","defaultText":"{{EstimateItem_Table.selectedRowIndex == -1 ? \"\" : EstimateItem_Table.selectedRow.Quantity}}","minDynamicHeight":4.0},{"boxShadow":"none","widgetName":"EstimateItem_Number_Input","displayName":"Input","iconSVG":"/static/media/icon.9f505595.svg","topRow":7.0,"bottomRow":14.0,"parentRowSpace":10.0,"autoFocus":false,"type":"INPUT_WIDGET_V2","hideCard":false,"animateLoading":false,"parentColumnSpace":16.125,"dynamicTriggerPathList":[],"resetOnSubmit":true,"leftColumn":23.0,"dynamicBindingPathList":[{"key":"validation"},{"key":"defaultText"},{"key":"accentColor"}],"labelPosition":"Top","labelStyle":"","labelTextColor":"#008695","inputType":"TEXT","isDisabled":false,"key":"z664xfowd2","validation":"{{EstimateItem_Number_Input.text.length> 0 && EstimateItem_Number_Input.text.length <= 10}}","labelTextSize":"0.875rem","isRequired":true,"rightColumn":37.0,"dynamicHeight":"FIXED","widgetId":"na5msgkyv6","accentColor":"{{appsmith.theme.colors.primaryColor}}","isVisible":true,"label":"Estimate Item#","version":2.0,"parentId":"ywjb67lxlr","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","maxDynamicHeight":9000.0,"iconAlign":"left","defaultText":"{{EstimateItem_Table.selectedRowIndex == -1 ? \"\" : EstimateItem_Table.selectedRow.Number}}","minDynamicHeight":4.0},{"boxShadow":"none","widgetName":"EstimateItem_Description_Input","displayName":"Input","iconSVG":"/static/media/icon.9f505595.svg","topRow":15.0,"bottomRow":24.0,"parentRowSpace":10.0,"autoFocus":false,"type":"INPUT_WIDGET_V2","hideCard":false,"animateLoading":false,"parentColumnSpace":16.125,"dynamicTriggerPathList":[],"resetOnSubmit":true,"leftColumn":40.0,"dynamicBindingPathList":[{"key":"validation"},{"key":"defaultText"},{"key":"accentColor"}],"labelPosition":"Top","labelStyle":"","labelTextColor":"#008695","inputType":"MULTI_LINE_TEXT","isDisabled":false,"key":"z664xfowd2","validation":"{{EstimateItem_Number_Input.text.length> 0}}","labelTextSize":"0.875rem","isRequired":true,"rightColumn":64.0,"dynamicHeight":"FIXED","widgetId":"ziv8fph1qn","accentColor":"{{appsmith.theme.colors.primaryColor}}","isVisible":true,"label":"Description","version":2.0,"parentId":"ywjb67lxlr","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","maxDynamicHeight":9000.0,"shouldAllowAutofill":false,"iconAlign":"left","defaultText":"{{EstimateItem_Table.selectedRowIndex == -1 ? \"\" : EstimateItem_Table.selectedRow.Description}}","minDynamicHeight":4.0},{"boxShadow":"none","widgetName":"Estimate_Notes","displayName":"Input","iconSVG":"/static/media/icon.9f505595.svg","searchTags":["form","text input","number","textarea"],"topRow":5.0,"bottomRow":14.0,"parentRowSpace":10.0,"labelWidth":"2","autoFocus":false,"type":"INPUT_WIDGET_V2","hideCard":false,"animateLoading":false,"parentColumnSpace":17.0,"dynamicTriggerPathList":[],"resetOnSubmit":true,"leftColumn":0.0,"dynamicBindingPathList":[{"key":"accentColor"},{"key":"borderRadius"},{"key":"defaultText"}],"labelPosition":"Top","labelStyle":"","inputType":"MULTI_LINE_TEXT","isDisabled":true,"key":"uiypg6wv4d","labelTextSize":"0.875rem","isRequired":true,"isDeprecated":false,"rightColumn":22.0,"dynamicHeight":"FIXED","widgetId":"ym41i01bij","accentColor":"{{appsmith.theme.colors.primaryColor}}","isVisible":true,"label":"Note","version":2.0,"parentId":"ywjb67lxlr","labelAlignment":"left","renderMode":"CANVAS","isLoading":false,"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","maxDynamicHeight":9000.0,"iconAlign":"left","defaultText":"{{Estimate_Table.selectedRow.Notes||\"\"}}","minDynamicHeight":4.0},{"boxShadow":"0px 0px 4px 3px rgba(0, 0, 0, 0.25)","widgetName":"Estimate_Update_Button","onClick":"{{showModal('EstimateUpdate_Modal')}}","buttonColor":"#008695","dynamicPropertyPathList":[{"key":"isDisabled"},{"key":"onClick"},{"key":"boxShadow"}],"displayName":"Icon Button","iconSVG":"/static/media/icon.1a0c634a.svg","topRow":1.0,"bottomRow":5.0,"parentRowSpace":10.0,"type":"ICON_BUTTON_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":5.3359375,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":19.0,"dynamicBindingPathList":[{"key":"isDisabled"}],"isDisabled":"{{Estimate_Table.selectedRowIndex == -1 }}","key":"wqh17u5h8b","labelTextSize":"0.875rem","rightColumn":22.0,"iconName":"edit","widgetId":"bgvf2ej76t","isVisible":true,"version":1.0,"parentId":"ywjb67lxlr","renderMode":"CANVAS","isLoading":false,"borderRadius":"0.375rem","buttonVariant":"TERTIARY"},{"boxShadow":"none","widgetName":"EstimateItem_Buttons_Container","borderColor":"transparent","isCanvas":true,"dynamicPropertyPathList":[{"key":"borderRadius"}],"displayName":"Container","iconSVG":"/static/media/icon.1977dca3.svg","topRow":0.0,"bottomRow":6.0,"parentRowSpace":10.0,"type":"CONTAINER_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":13.5732421875,"dynamicTriggerPathList":[],"leftColumn":45.0,"dynamicBindingPathList":[],"children":[{"boxShadow":"none","widgetName":"SalesDetails_Buttons_CanvasCopy","displayName":"Canvas","topRow":0.0,"bottomRow":60.0,"parentRowSpace":1.0,"type":"CANVAS_WIDGET","canExtend":false,"hideCard":true,"minHeight":400.0,"parentColumnSpace":1.0,"leftColumn":0.0,"dynamicBindingPathList":[],"children":[{"boxShadow":"0px 0px 4px 3px rgba(0, 0, 0, 0.25)","widgetName":"EstimateItem_Reset_Button","onClick":"{{ GlobalVariables.resetForm([\"Estimate_Number_Input\",\"EstimateItem_Table\",\"EstimateDetails_Container\",\"Estimate_Table\"]) }}","buttonColor":"#008695","dynamicPropertyPathList":[{"key":"onClick"},{"key":"boxShadow"}],"displayName":"Icon Button","iconSVG":"/static/media/icon.1a0c634a.svg","topRow":0.0,"bottomRow":4.0,"parentRowSpace":10.0,"type":"ICON_BUTTON_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":15.0625,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":26.0,"dynamicBindingPathList":[],"isDisabled":false,"key":"x5byygbcp7","labelTextSize":"0.875rem","rightColumn":31.0,"iconName":"reset","widgetId":"a3t7789sq2","isVisible":true,"version":1.0,"parentId":"e77zcsgzk3","renderMode":"CANVAS","isLoading":false,"borderRadius":"0.375rem","buttonVariant":"TERTIARY"},{"boxShadow":"0px 0px 4px 3px rgba(0, 0, 0, 0.25)","widgetName":"EstimateItem_Create_Button","onClick":"{{PageObjects.insertEstimateItem(Estimate_Table.selectedRow.EId,EstimateItem_Number_Input.text,EstimateItem_Description_Input.text,EstimateItem_Quantity_Input.text,EstimateItem_Amount_Input.text)}}","buttonColor":"#008695","dynamicPropertyPathList":[{"key":"isDisabled"},{"key":"onClick"},{"key":"boxShadow"}],"displayName":"Icon Button","iconSVG":"/static/media/icon.1a0c634a.svg","topRow":0.0,"bottomRow":4.0,"parentRowSpace":10.0,"type":"ICON_BUTTON_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":5.3359375,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":37.0,"dynamicBindingPathList":[{"key":"isDisabled"}],"isDisabled":"{{GlobalVariables.disableCreateButton([EstimateItem_Number_Input, EstimateItem_Quantity_Input, EstimateItem_Amount_Input, EstimateItem_Description_Input]) || Estimate_Table.selectedRowIndex == -1}}","key":"wqh17u5h8b","labelTextSize":"0.875rem","rightColumn":41.0,"iconName":"plus","widgetId":"erdejqcwlh","isVisible":true,"version":1.0,"parentId":"e77zcsgzk3","renderMode":"CANVAS","isLoading":false,"borderRadius":"0.375rem","buttonVariant":"TERTIARY"},{"boxShadow":"0px 0px 4px 3px rgba(0, 0, 0, 0.25)","widgetName":"EstimateItem_Update_Button","onClick":"{{PageObjects.updateEstimateItem(Estimate_Table.selectedRow.EId,EstimateItem_Number_Input.text,EstimateItem_Description_Input.text,EstimateItem_Quantity_Input.text,EstimateItem_Amount_Input.text,EstimateItem_Table.selectedRow.Id)}}","buttonColor":"#008695","dynamicPropertyPathList":[{"key":"isDisabled"},{"key":"onClick"},{"key":"boxShadow"}],"displayName":"Icon Button","iconSVG":"/static/media/icon.1a0c634a.svg","topRow":0.0,"bottomRow":4.0,"parentRowSpace":10.0,"type":"ICON_BUTTON_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":5.3359375,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":47.0,"dynamicBindingPathList":[{"key":"isDisabled"}],"isDisabled":"{{GlobalVariables.disableUpdateButton([EstimateItem_Number_Input, EstimateItem_Quantity_Input, EstimateItem_Amount_Input, EstimateItem_Description_Input], EstimateItem_Table)}}","key":"wqh17u5h8b","labelTextSize":"0.875rem","rightColumn":52.0,"iconName":"edit","widgetId":"7fhu7o7k18","isVisible":true,"version":1.0,"parentId":"e77zcsgzk3","renderMode":"CANVAS","isLoading":false,"borderRadius":"0.375rem","buttonVariant":"TERTIARY"},{"boxShadow":"0px 0px 4px 3px rgba(0, 0, 0, 0.25)","widgetName":"EstimateItem_Delete_Button","onClick":"{{PageObjects.deleteEstimateItem(Estimate_Table.selectedRow.EId,EstimateItem_Table.selectedRow.Id)}}","buttonColor":"#008695","dynamicPropertyPathList":[{"key":"isDisabled"},{"key":"onClick"},{"key":"boxShadow"}],"displayName":"Icon Button","iconSVG":"/static/media/icon.1a0c634a.svg","topRow":0.0,"bottomRow":4.0,"parentRowSpace":10.0,"type":"ICON_BUTTON_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":5.3359375,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":58.0,"dynamicBindingPathList":[{"key":"isDisabled"}],"isDisabled":"{{ GlobalVariables.disableDeleteButton(EstimateItem_Table) }}","key":"wqh17u5h8b","labelTextSize":"0.875rem","rightColumn":62.0,"iconName":"trash","widgetId":"eb1vhslh5u","isVisible":true,"version":1.0,"parentId":"e77zcsgzk3","renderMode":"CANVAS","isLoading":false,"borderRadius":"0.375rem","buttonVariant":"TERTIARY"}],"key":"62kn4szsbb","labelTextSize":"0.875rem","rightColumn":325.7578125,"detachFromLayout":true,"widgetId":"e77zcsgzk3","containerStyle":"none","isVisible":true,"version":1.0,"parentId":"znlji9ofep","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px"}],"borderWidth":"0","key":"zkrysm8hzk","labelTextSize":"0.875rem","backgroundColor":"#FFFFFF","rightColumn":64.0,"dynamicHeight":"FIXED","widgetId":"znlji9ofep","containerStyle":"card","isVisible":true,"version":1.0,"parentId":"ywjb67lxlr","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","maxDynamicHeight":9000.0,"minDynamicHeight":4.0}],"key":"aql3osxzap","labelTextSize":"0.875rem","rightColumn":258.75,"detachFromLayout":true,"widgetId":"ywjb67lxlr","containerStyle":"none","isVisible":true,"version":1.0,"parentId":"gw84yyu2jf","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px"}],"borderWidth":"0","key":"9yezib4kof","labelTextSize":"0.875rem","backgroundColor":"#FFFFFF","rightColumn":64.0,"dynamicHeight":"FIXED","widgetId":"gw84yyu2jf","containerStyle":"card","isVisible":true,"version":1.0,"parentId":"tf5lwkhdal","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","maxDynamicHeight":9000.0,"minDynamicHeight":4.0}],"isDisabled":false,"key":"ck656xey1j","labelTextSize":"0.875rem","tabName":"Estimate Details","rightColumn":354.0,"detachFromLayout":true,"widgetId":"tf5lwkhdal","isVisible":true,"version":1.0,"parentId":"lqsy7neqm3","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px"}],"key":"s4m69sgoxe","labelTextSize":"0.875rem","rightColumn":64.0,"dynamicHeight":"FIXED","widgetId":"lqsy7neqm3","accentColor":"{{appsmith.theme.colors.primaryColor}}","defaultTab":"Estimate Details","shouldShowTabs":true,"tabsObj":{"tab1":{"label":"Estimate Details","id":"tab1","widgetId":"tf5lwkhdal","isVisible":true,"index":0.0}},"isVisible":true,"version":3.0,"parentId":"zgvoskrdzg","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","maxDynamicHeight":9000.0,"minDynamicHeight":4.0}],"key":"ck656xey1j","labelTextSize":"0.875rem","rightColumn":361.5,"detachFromLayout":true,"widgetId":"zgvoskrdzg","containerStyle":"none","isVisible":true,"version":1.0,"parentId":"ucppqx2su5","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px"}],"borderWidth":"0","key":"r0bflk5gc0","labelTextSize":"0.875rem","backgroundColor":"#FFFFFF","rightColumn":64.0,"dynamicHeight":"FIXED","widgetId":"ucppqx2su5","containerStyle":"card","isVisible":true,"version":1.0,"parentId":"0","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","maxDynamicHeight":9000.0,"minDynamicHeight":4.0}]},"layoutOnLoadActions":[[{"id":"Estimate Process_EAttachments_Select","name":"EAttachments_Select","confirmBeforeExecute":false,"pluginType":"DB","jsonPathKeys":["this.params?.EId"],"timeoutInMillisecond":10000.0}],[{"id":"Estimate Process_PageObjects.accessControl","name":"PageObjects.accessControl","collectionId":"Estimate Process_PageObjects","confirmBeforeExecute":false,"pluginType":"JS","jsonPathKeys":["async () => {\n  await UserRoles_Select.run();\n  let role = '';\n  if (UserRoles_Select.data.find(row => row.Name === 'Sales Manager' || row.Name === 'Accounts Receivables')) {\n    console.log('111');\n    role = 'SalesManager';\n  } else if (UserRoles_Select.data.find(row => row.Name === 'Business Manager')) {\n    console.log('222');\n    role = 'BusinessManager';\n  }\n  await storeValue('FilterRole', role, false);\n  console.log('frole', appsmith.store.FilterRole);\n  await Estimate_Select.run();\n}"],"timeoutInMillisecond":10000.0}],[{"id":"Estimate Process_Estimate_Select","name":"Estimate_Select","confirmBeforeExecute":false,"pluginType":"DB","jsonPathKeys":["appsmith.store.FilterRole","appsmith.user.username.split('@')[0]"," appsmith.store?.currentStateName || 'Prepare' "],"timeoutInMillisecond":10000.0}],[{"id":"Estimate Process_CorporateAdmin_Select","name":"CorporateAdmin_Select","confirmBeforeExecute":false,"pluginType":"DB","jsonPathKeys":["\"'\"+GlobalVariables.roles_with_access.join(\"','\")+\"'\""],"timeoutInMillisecond":10000.0},{"id":"Estimate Process_UserRoles_Select","name":"UserRoles_Select","confirmBeforeExecute":false,"pluginType":"DB","jsonPathKeys":["appsmith.user.username.split('@')[0]"],"timeoutInMillisecond":10000.0}],[{"id":"Estimate Process_PageObjects.selectInitialState","name":"PageObjects.selectInitialState","collectionId":"Estimate Process_PageObjects","confirmBeforeExecute":false,"pluginType":"JS","jsonPathKeys":["async () => {\n  await Process.clickState(\"Prepare\", Estimate_Select);\n}"],"timeoutInMillisecond":10000.0}]],"layoutOnLoadActionErrors":[],"validOnPageLoadActions":true,"id":"Estimate Process","deleted":false,"policies":[],"userPermissions":[]}],"userPermissions":[],"policies":[],"isHidden":false},"publishedPage":{"name":"Estimate Process","slug":"estimate-process","layouts":[{"viewMode":false,"dsl":{"widgetName":"MainContainer","backgroundColor":"none","rightColumn":742.0,"snapColumns":64.0,"detachFromLayout":true,"widgetId":"0","topRow":0.0,"bottomRow":880.0,"containerStyle":"none","snapRows":67.0,"parentRowSpace":1.0,"type":"CANVAS_WIDGET","canExtend":true,"version":89.0,"minHeight":680.0,"parentColumnSpace":1.0,"dynamicBindingPathList":[],"leftColumn":0.0,"children":[{"boxShadow":"none","mobileBottomRow":33.0,"widgetName":"FileUpload_Modal","isCanvas":true,"displayName":"Modal","iconSVG":"/static/media/icon.d2ab7de0666eaef853cc2d330f86887b.svg","searchTags":["dialog","popup","notification"],"topRow":60.0,"bottomRow":300.0,"parentRowSpace":10.0,"type":"MODAL_WIDGET","hideCard":false,"shouldScrollContents":false,"mobileRightColumn":37.0,"animateLoading":false,"parentColumnSpace":10.984375,"dynamicTriggerPathList":[],"leftColumn":13.0,"dynamicBindingPathList":[],"children":[{"mobileBottomRow":240.0,"widgetName":"Canvas19","displayName":"Canvas","topRow":0.0,"bottomRow":530.0,"parentRowSpace":1.0,"type":"CANVAS_WIDGET","canExtend":true,"hideCard":true,"shouldScrollContents":false,"minHeight":530.0,"mobileRightColumn":263.625,"parentColumnSpace":1.0,"leftColumn":0.0,"dynamicBindingPathList":[],"children":[{"boxShadow":"none","widgetName":"Quote_File_Container","borderColor":"transparent","isCanvas":true,"displayName":"Container","iconSVG":"/static/media/icon.1977dca3370505e2db3a8e44cfd54907.svg","searchTags":["div","parent","group"],"topRow":0.0,"bottomRow":48.0,"parentRowSpace":10.0,"type":"CONTAINER_WIDGET","hideCard":false,"shouldScrollContents":false,"animateLoading":false,"parentColumnSpace":13.03125,"dynamicTriggerPathList":[],"leftColumn":0.0,"dynamicBindingPathList":[{"key":"borderRadius"}],"children":[{"boxShadow":"none","widgetName":"Canvas10Copy","displayName":"Canvas","topRow":0.0,"bottomRow":480.0,"parentRowSpace":1.0,"type":"CANVAS_WIDGET","canExtend":false,"hideCard":true,"minHeight":400.0,"parentColumnSpace":1.0,"leftColumn":0.0,"dynamicBindingPathList":[{"key":"borderRadius"},{"key":"accentColor"}],"children":[{"boxShadow":"0px 0px 2px 1.5px rgba(0, 0, 0, 0.25)","mobileBottomRow":4.0,"widgetName":"FileDownload_Button","onClick":"{{storeValue('disable',true).then(()=>FileUploadProcess.runDownloadFile()).then(()=>storeValue('disable',false))}}","buttonColor":"{{appsmith.theme.colors.primaryColor}}","dynamicPropertyPathList":[{"key":"boxShadow"},{"key":"isDisabled"},{"key":"onClick"}],"displayName":"Icon button","iconSVG":"/static/media/icon.80fc7466c0d7181ec0271de7fda795ec.svg","searchTags":["click","submit"],"topRow":0.0,"bottomRow":4.0,"parentRowSpace":10.0,"type":"ICON_BUTTON_WIDGET","hideCard":false,"mobileRightColumn":63.0,"animateLoading":false,"parentColumnSpace":10.1695556640625,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":34.0,"dynamicBindingPathList":[{"key":"buttonColor"},{"key":"isDisabled"}],"isDisabled":"{{EstimateAttachments_Table.selectedRowIndex==-1||appsmith.store.disable}}","key":"9rrozn34oj","isDeprecated":false,"rightColumn":39.0,"iconName":"cloud-download","widgetId":"s65kcv5m1v","minWidth":50.0,"isVisible":true,"version":1.0,"parentId":"2dmkum63wd","renderMode":"CANVAS","isLoading":false,"mobileTopRow":0.0,"responsiveBehavior":"hug","borderRadius":"0.375rem","mobileLeftColumn":59.0,"buttonVariant":"SECONDARY"},{"boxShadow":"{{appsmith.theme.boxShadow.appBoxShadow}}","isVisibleDownload":false,"iconSVG":"/static/media/icon.db8a9cbd2acd22a31ea91cc37ea2a46c.svg","topRow":25.0,"isSortable":true,"type":"TABLE_WIDGET_V2","inlineEditingSaveOption":"ROW_LEVEL","animateLoading":false,"dynamicBindingPathList":[{"key":"accentColor"},{"key":"boxShadow"},{"key":"primaryColumns.Field.computedValue"},{"key":"primaryColumns.Value.computedValue"},{"key":"tableData"}],"leftColumn":32.0,"delimiter":",","defaultSelectedRowIndex":"-1","showInlineEditingOptionDropdown":true,"accentColor":"{{appsmith.theme.colors.primaryColor}}","isVisibleFilters":false,"isVisible":true,"fontStyle":"","enableClientSideSearch":false,"version":1.0,"totalRecordsCount":0.0,"isLoading":false,"childStylesheet":{"button":{"buttonColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"menuButton":{"menuColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"iconButton":{"buttonColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"editActions":{"saveButtonColor":"{{appsmith.theme.colors.primaryColor}}","saveBorderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","discardButtonColor":"{{appsmith.theme.colors.primaryColor}}","discardBorderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}"}},"borderRadius":"0.375rem","columnUpdatedAt":1.700722281829E12,"defaultSelectedRowIndices":[0.0],"widgetName":"FilesMetadata_Table","defaultPageSize":0.0,"columnOrder":["Field","Value"],"dynamicPropertyPathList":[{"key":"tableData"}],"displayName":"Table","bottomRow":46.0,"columnWidthMap":{"task":245.0,"step":62.0,"status":75.0,"Field":189.0},"parentRowSpace":10.0,"hideCard":false,"parentColumnSpace":11.29609375,"dynamicTriggerPathList":[],"primaryColumns":{"Field":{"allowCellWrapping":false,"index":3.0,"width":150.0,"originalId":"Field","id":"Field","alias":"Field","horizontalAlignment":"LEFT","verticalAlignment":"CENTER","columnType":"text","textSize":"0.875rem","enableFilter":true,"enableSort":true,"isVisible":true,"isDisabled":false,"isCellEditable":false,"isEditable":false,"isCellVisible":true,"isDerived":false,"label":"Field","isSaveVisible":true,"isDiscardVisible":true,"computedValue":"{{FilesMetadata_Table.processedTableData.map((currentRow, currentIndex) => ( currentRow[\"Field\"]))}}","fontStyle":"","validation":{},"sticky":""},"Value":{"allowCellWrapping":false,"index":1.0,"width":150.0,"originalId":"Value","id":"Value","alias":"Value","horizontalAlignment":"LEFT","verticalAlignment":"CENTER","columnType":"text","textColor":"","textSize":"0.875rem","fontStyle":"","enableFilter":true,"enableSort":true,"isVisible":true,"isDisabled":false,"isCellEditable":false,"isEditable":false,"isCellVisible":true,"isDerived":false,"label":"Value","isSaveVisible":true,"isDiscardVisible":true,"computedValue":"{{FilesMetadata_Table.processedTableData.map((currentRow, currentIndex) => ( currentRow[\"Value\"]))}}","cellBackground":"","validation":{},"sticky":""}},"borderWidth":"1","key":"tr6i18pzj9","canFreezeColumn":false,"isDeprecated":false,"rightColumn":64.0,"textSize":"0.875rem","widgetId":"u5irlceq9d","enableServerSideFiltering":false,"tableData":"{{EstimateAttachments_Table.selectedRowIndex==-1?\"\":appsmith.store.tabledata}}","label":"Data","searchKey":"","parentId":"2dmkum63wd","renderMode":"CANVAS","horizontalAlignment":"LEFT","isVisibleSearch":true,"isVisiblePagination":true,"verticalAlignment":"CENTER"},{"boxShadow":"0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06)","isVisibleDownload":false,"iconSVG":"/static/media/icon.db8a9cbd2acd22a31ea91cc37ea2a46c.svg","topRow":5.0,"isSortable":true,"type":"TABLE_WIDGET_V2","inlineEditingSaveOption":"ROW_LEVEL","animateLoading":false,"dynamicBindingPathList":[{"key":"accentColor"},{"key":"primaryColumns.Id.computedValue"},{"key":"primaryColumns.FileName.computedValue"},{"key":"primaryColumns.Comments.computedValue"},{"key":"tableData"},{"key":"primaryColumns.EstimateId.computedValue"}],"leftColumn":0.0,"delimiter":",","defaultSelectedRowIndex":"-1","showInlineEditingOptionDropdown":true,"accentColor":"{{appsmith.theme.colors.primaryColor}}","isVisibleFilters":false,"isVisible":true,"fontStyle":"","enableClientSideSearch":false,"version":1.0,"totalRecordsCount":0.0,"isLoading":false,"childStylesheet":{"button":{"buttonColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"menuButton":{"menuColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"iconButton":{"buttonColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"editActions":{"saveButtonColor":"{{appsmith.theme.colors.primaryColor}}","saveBorderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","discardButtonColor":"{{appsmith.theme.colors.primaryColor}}","discardBorderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}"}},"borderRadius":"0.375rem","columnUpdatedAt":1.745831104723E12,"originalBottomRow":46.0,"defaultSelectedRowIndices":[0.0],"widgetName":"EstimateAttachments_Table","defaultPageSize":0.0,"columnOrder":["Id","FileName","Comments","EstimateId"],"dynamicPropertyPathList":[{"key":"tableData"},{"key":"onRowSelected"}],"displayName":"Table","bottomRow":46.0,"columnWidthMap":{"task":245.0,"step":62.0,"status":75.0,"Field":189.0,"FileName":183.0},"parentRowSpace":10.0,"hideCard":false,"parentColumnSpace":11.29609375,"dynamicTriggerPathList":[{"key":"onRowSelected"}],"primaryColumns":{"Id":{"allowCellWrapping":false,"allowSameOptionsInNewRow":true,"index":0.0,"width":150.0,"originalId":"Id","id":"Id","alias":"Id","horizontalAlignment":"LEFT","verticalAlignment":"CENTER","columnType":"number","textColor":"","textSize":"0.875rem","fontStyle":"","enableFilter":true,"enableSort":true,"isVisible":false,"isDisabled":false,"isCellEditable":false,"isEditable":false,"isCellVisible":true,"isDerived":false,"label":"Id","isSaveVisible":true,"isDiscardVisible":true,"computedValue":"{{EstimateAttachments_Table.processedTableData.map((currentRow, currentIndex) => ( currentRow[\"Id\"]))}}","sticky":"","validation":{},"cellBackground":""},"FileName":{"allowCellWrapping":false,"allowSameOptionsInNewRow":true,"index":2.0,"width":150.0,"originalId":"FileName","id":"FileName","alias":"FileName","horizontalAlignment":"LEFT","verticalAlignment":"CENTER","columnType":"text","textColor":"","textSize":"0.875rem","fontStyle":"","enableFilter":true,"enableSort":true,"isVisible":true,"isDisabled":false,"isCellEditable":false,"isEditable":false,"isCellVisible":true,"isDerived":false,"label":"FileName","isSaveVisible":true,"isDiscardVisible":true,"computedValue":"{{EstimateAttachments_Table.processedTableData.map((currentRow, currentIndex) => ( currentRow[\"FileName\"]))}}","sticky":"","validation":{},"cellBackground":""},"Comments":{"allowCellWrapping":false,"allowSameOptionsInNewRow":true,"index":3.0,"width":150.0,"originalId":"Comments","id":"Comments","alias":"Comments","horizontalAlignment":"LEFT","verticalAlignment":"CENTER","columnType":"text","textColor":"","textSize":"0.875rem","fontStyle":"","enableFilter":true,"enableSort":true,"isVisible":true,"isDisabled":false,"isCellEditable":false,"isEditable":false,"isCellVisible":true,"isDerived":false,"label":"Comments","isSaveVisible":true,"isDiscardVisible":true,"computedValue":"{{EstimateAttachments_Table.processedTableData.map((currentRow, currentIndex) => ( currentRow[\"Comments\"]))}}","sticky":"","validation":{},"cellBackground":""},"EstimateId":{"allowCellWrapping":false,"allowSameOptionsInNewRow":true,"index":1.0,"width":150.0,"originalId":"EstimateId","id":"EstimateId","alias":"EstimateId","horizontalAlignment":"LEFT","verticalAlignment":"CENTER","columnType":"number","textColor":"","textSize":"0.875rem","fontStyle":"","enableFilter":true,"enableSort":true,"isVisible":false,"isDisabled":false,"isCellEditable":false,"isEditable":false,"isCellVisible":true,"isDerived":false,"label":"EstimateId","isSaveVisible":true,"isDiscardVisible":true,"computedValue":"{{EstimateAttachments_Table.processedTableData.map((currentRow, currentIndex) => ( currentRow[\"EstimateId\"]))}}","sticky":"","validation":{},"currencyCode":"USD","decimals":0.0,"thousandSeparator":true,"notation":"standard","cellBackground":""}},"borderWidth":"1","onRowSelected":"{{FileUploadProcess.onUploadModalClick();storeValue(\"ActualFileName\",EstimateAttachments_Table.selectedRow.FileName)}}","key":"tr6i18pzj9","canFreezeColumn":false,"isDeprecated":false,"rightColumn":32.0,"textSize":"0.875rem","widgetId":"ux0nn8k565","enableServerSideFiltering":false,"tableData":"{{EAttachments_Select.data}}","label":"Data","searchKey":"","parentId":"2dmkum63wd","renderMode":"CANVAS","horizontalAlignment":"LEFT","isVisibleSearch":true,"originalTopRow":5.0,"isVisiblePagination":true,"verticalAlignment":"CENTER"},{"boxShadow":"none","widgetName":"FileComments_Input","displayName":"Input","iconSVG":"/static/media/icon.9f505595da61a34f563dba82adeb06ec.svg","searchTags":["form","text input","number","textarea"],"topRow":17.0,"bottomRow":25.0,"parentRowSpace":10.0,"labelWidth":5.0,"autoFocus":false,"type":"INPUT_WIDGET_V2","hideCard":false,"animateLoading":false,"parentColumnSpace":7.82265625,"dynamicTriggerPathList":[],"resetOnSubmit":true,"leftColumn":32.0,"dynamicBindingPathList":[{"key":"accentColor"},{"key":"labelTextColor"},{"key":"defaultText"}],"labelPosition":"Top","labelStyle":"","labelTextColor":"{{appsmith.theme.colors.primaryColor}}","inputType":"MULTI_LINE_TEXT","maxChars":"255","isDisabled":false,"key":"fnbeggozqq","labelTextSize":"0.875rem","isRequired":false,"isDeprecated":false,"rightColumn":64.0,"dynamicHeight":"FIXED","widgetId":"latn23wns4","accentColor":"{{appsmith.theme.colors.primaryColor}}","isVisible":true,"label":"Comments","version":2.0,"parentId":"2dmkum63wd","labelAlignment":"left","renderMode":"CANVAS","isLoading":false,"borderRadius":"0.375rem","maxDynamicHeight":9000.0,"iconAlign":"left","defaultText":"{{EstimateAttachments_Table.selectedRowIndex==-1?\"\":EstimateAttachments_Table.selectedRow.Comments}}","minDynamicHeight":4.0},{"boxShadow":"none","widgetName":"ActualFileName_Input","displayName":"Input","iconSVG":"/static/media/icon.9f505595da61a34f563dba82adeb06ec.svg","searchTags":["form","text input","number","textarea"],"topRow":9.0,"bottomRow":13.0,"parentRowSpace":10.0,"labelWidth":"8","autoFocus":false,"type":"INPUT_WIDGET_V2","hideCard":false,"animateLoading":false,"parentColumnSpace":11.29609375,"dynamicTriggerPathList":[],"resetOnSubmit":true,"leftColumn":32.0,"dynamicBindingPathList":[{"key":"accentColor"},{"key":"defaultText"}],"labelPosition":"Left","labelStyle":"","inputType":"TEXT","maxChars":"50","isDisabled":true,"key":"fmqlbw0c9w","labelTextSize":"0.875rem","isRequired":false,"isDeprecated":false,"rightColumn":64.0,"dynamicHeight":"FIXED","widgetId":"5ksdunj0z1","accentColor":"{{appsmith.theme.colors.primaryColor}}","isVisible":true,"label":"File Name","version":2.0,"parentId":"2dmkum63wd","labelAlignment":"left","renderMode":"CANVAS","isLoading":false,"borderRadius":"0.375rem","maxDynamicHeight":9000.0,"iconAlign":"left","defaultText":"{{appsmith.store.ActualFileName}}","minDynamicHeight":4.0},{"boxShadow":"none","iconSVG":"/static/media/icon.9f505595da61a34f563dba82adeb06ec.svg","topRow":5.0,"labelWidth":"8","type":"INPUT_WIDGET_V2","animateLoading":false,"resetOnSubmit":true,"leftColumn":32.0,"dynamicBindingPathList":[{"key":"accentColor"},{"key":"labelTextColor"},{"key":"isDisabled"}],"labelStyle":"","inputType":"TEXT","maxChars":"25","isDisabled":"{{EstimateAttachments_Table.selectedRowIndex!=-1}}","validation":"","isRequired":false,"dynamicHeight":"FIXED","accentColor":"{{appsmith.theme.colors.primaryColor}}","isVisible":true,"version":2.0,"isLoading":false,"regex":"^[0-9a-zA-Z]+$","borderRadius":"0.375rem","widgetName":"UserText_Input","dynamicPropertyPathList":[{"key":"onTextChanged"},{"key":"isDisabled"}],"displayName":"Input","searchTags":["form","text input","number","textarea"],"bottomRow":9.0,"parentRowSpace":10.0,"autoFocus":false,"hideCard":false,"parentColumnSpace":10.0322265625,"dynamicTriggerPathList":[{"key":"onTextChanged"}],"labelPosition":"Left","labelTextColor":"{{appsmith.theme.colors.primaryColor}}","key":"fmqlbw0c9w","labelTextSize":"0.875rem","onTextChanged":"{{FileUploadProcess.getFileName()}}","isDeprecated":false,"rightColumn":64.0,"widgetId":"hs6sry3hkg","errorMessage":"Spaces and special characters are not allowed!!","label":"User Text","parentId":"2dmkum63wd","labelAlignment":"left","renderMode":"CANVAS","maxDynamicHeight":9000.0,"iconAlign":"left","defaultText":"","minDynamicHeight":4.0},{"boxShadow":"0px 0px 2px 1.5px rgba(0, 0, 0, 0.25)","widgetName":"FileUploadReset_Button","onClick":"{{storeValue('ActualFileName','');GlobalVariables.resetForm(['Quote_File_Container']);storeValue('ErrorMessage','');storeValue('disable',false)}} ","buttonColor":"{{appsmith.theme.colors.primaryColor}}","dynamicPropertyPathList":[{"key":"boxShadow"},{"key":"onClick"}],"displayName":"Icon Button","iconSVG":"/static/media/icon.1a0c634ac75f9fa6b6ae7a8df882a3ba.svg","searchTags":["click","submit"],"topRow":0.0,"bottomRow":4.0,"tooltip":"Reset Files","parentRowSpace":10.0,"type":"ICON_BUTTON_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":10.0322265625,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":39.0,"dynamicBindingPathList":[{"key":"buttonColor"}],"isDisabled":false,"key":"z13en9py0b","isDeprecated":false,"rightColumn":44.0,"iconName":"refresh","widgetId":"o39tbh4jw7","isVisible":true,"version":1.0,"parentId":"2dmkum63wd","renderMode":"CANVAS","isLoading":false,"borderRadius":"0.375rem","buttonVariant":"SECONDARY"},{"boxShadow":"0px 0px 2px 1.5px rgba(0, 0, 0, 0.25)","widgetName":"FileUploadCreate_Button","onClick":"{{storeValue('disable',true).then(()=>storeValue('add',1))\n.then(()=>FileUploadProcess.runCreateFile(Estimate_Table.selectedRow.EId,FileComments_Input.text)).then(()=>storeValue('disable',false))}}","buttonColor":"{{appsmith.theme.colors.primaryColor}}","dynamicPropertyPathList":[{"key":"isDisabled"},{"key":"boxShadow"},{"key":"onClick"}],"displayName":"Icon Button","iconSVG":"/static/media/icon.1a0c634ac75f9fa6b6ae7a8df882a3ba.svg","searchTags":["click","submit"],"topRow":0.0,"bottomRow":4.0,"tooltip":"Create Files","parentRowSpace":10.0,"type":"ICON_BUTTON_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":10.0322265625,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":44.0,"dynamicBindingPathList":[{"key":"buttonColor"},{"key":"isDisabled"}],"isDisabled":"{{ FilePicker.files.length == 0 || appsmith.store.ErrorMessage.length != 0 || EstimateAttachments_Table.selectedRowIndex!=-1 || appsmith.store.ActualFileName==\"\"}}","key":"z13en9py0b","isDeprecated":false,"rightColumn":49.0,"iconName":"plus","widgetId":"4nykygagv2","isVisible":true,"version":1.0,"parentId":"2dmkum63wd","renderMode":"CANVAS","isLoading":false,"borderRadius":"0.375rem","buttonVariant":"SECONDARY"},{"boxShadow":"0px 0px 2px 1.5px rgba(0, 0, 0, 0.25)","widgetName":"FileUploadModify_Button","onClick":"{{storeValue('Disable','True').then(()=>storeValue('add',2))\n.then(()=>\nFileUploadProcess.runModifyFile(EstimateAttachments_Table.selectedRow.Id,FileComments_Input.text)).then(()=>storeValue('Disable','False'))}} ","buttonColor":"{{appsmith.theme.colors.primaryColor}}","dynamicPropertyPathList":[{"key":"boxShadow"},{"key":"onClick"},{"key":"isDisabled"}],"displayName":"Icon Button","iconSVG":"/static/media/icon.1a0c634ac75f9fa6b6ae7a8df882a3ba.svg","searchTags":["click","submit"],"topRow":0.0,"bottomRow":4.0,"tooltip":"Edit Files","parentRowSpace":10.0,"type":"ICON_BUTTON_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":10.0322265625,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":49.0,"dynamicBindingPathList":[{"key":"buttonColor"},{"key":"isDisabled"}],"isDisabled":"{{EstimateAttachments_Table.selectedRowIndex==-1||appsmith.store.disable}}","key":"z13en9py0b","isDeprecated":false,"rightColumn":54.0,"iconName":"edit","widgetId":"hwhrnd4rfu","isVisible":true,"version":1.0,"parentId":"2dmkum63wd","renderMode":"CANVAS","isLoading":false,"borderRadius":"0.375rem","buttonVariant":"SECONDARY"},{"boxShadow":"0px 0px 2px 1.5px rgba(0, 0, 0, 0.25)","widgetName":"FileUploadDelete_Button","onClick":"{{storeValue('disable',true).then(()=>FileUploadProcess.runDeleteFile(EstimateAttachments_Table.selectedRow.Id)).then(()=>storeValue('disable',false))}}","buttonColor":"{{appsmith.theme.colors.primaryColor}}","dynamicPropertyPathList":[{"key":"boxShadow"},{"key":"isDisabled"},{"key":"onClick"}],"displayName":"Icon Button","iconSVG":"/static/media/icon.1a0c634ac75f9fa6b6ae7a8df882a3ba.svg","searchTags":["click","submit"],"topRow":0.0,"bottomRow":4.0,"tooltip":"Delete Files","parentRowSpace":10.0,"type":"ICON_BUTTON_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":10.0322265625,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":54.0,"dynamicBindingPathList":[{"key":"buttonColor"},{"key":"isDisabled"}],"isDisabled":"{{EstimateAttachments_Table.selectedRowIndex==-1||appsmith.store.disable}}","key":"z13en9py0b","isDeprecated":false,"rightColumn":59.0,"iconName":"trash","widgetId":"1yf53zuomg","isVisible":true,"version":1.0,"parentId":"2dmkum63wd","renderMode":"CANVAS","isLoading":false,"borderRadius":"0.375rem","buttonVariant":"SECONDARY"},{"boxShadow":"0px 0px 2px 1.5px rgba(0, 0, 0, 0.25)","widgetName":"FileUploadClose_Button","onClick":"{{closeModal('FileUpload_Modal');GlobalVariables.resetForm(['Quote_File_Container'])}} ","buttonColor":"{{appsmith.theme.colors.primaryColor}}","dynamicPropertyPathList":[{"key":"boxShadow"},{"key":"isDisabled"},{"key":"onClick"}],"displayName":"Icon Button","iconSVG":"/static/media/icon.1a0c634ac75f9fa6b6ae7a8df882a3ba.svg","searchTags":["click","submit"],"topRow":0.0,"bottomRow":4.0,"tooltip":"","parentRowSpace":10.0,"type":"ICON_BUTTON_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":10.0322265625,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":59.0,"dynamicBindingPathList":[{"key":"buttonColor"}],"isDisabled":"","key":"z13en9py0b","isDeprecated":false,"rightColumn":64.0,"iconName":"cross","widgetId":"z1np49dlwo","isVisible":true,"version":1.0,"parentId":"2dmkum63wd","renderMode":"CANVAS","isLoading":false,"borderRadius":"0.375rem","buttonVariant":"SECONDARY"},{"boxShadow":"none","widgetName":"FilePicker","buttonColor":"{{appsmith.theme.colors.primaryColor}}","dynamicPropertyPathList":[{"key":"onFilesSelected"},{"key":"isDisabled"}],"displayName":"FilePicker","iconSVG":"/static/media/icon.7c5ad9c357928c6ff5701bf51a56c2e5.svg","searchTags":["upload"],"topRow":0.0,"bottomRow":4.0,"parentRowSpace":10.0,"allowedFileTypes":[],"type":"FILE_PICKER_WIDGET_V2","hideCard":false,"animateLoading":false,"parentColumnSpace":19.05,"dynamicTriggerPathList":[{"key":"onFilesSelected"}],"leftColumn":0.0,"dynamicBindingPathList":[{"key":"buttonColor"}],"isDisabled":"","key":"cjvgnpr682","onFilesSelected":"{{FileUploadProcess.getFileName().then(()=>FileUploadProcess.onfileselect())\n}}","isRequired":false,"isDeprecated":false,"rightColumn":14.0,"isDefaultClickDisabled":true,"widgetId":"bvw25zprze","isVisible":true,"label":"Select File","maxFileSize":"100","version":1.0,"fileDataType":"Binary","parentId":"2dmkum63wd","selectedFiles":[],"renderMode":"CANVAS","isLoading":false,"borderRadius":"0.375rem","files":[],"maxNumFiles":"1"},{"boxShadow":"none","widgetName":"Error_input","dynamicPropertyPathList":[],"displayName":"Input","iconSVG":"/static/media/icon.9f505595da61a34f563dba82adeb06ec.svg","searchTags":["form","text input","number","textarea"],"topRow":13.0,"bottomRow":17.0,"tooltip":"Display an error message","parentRowSpace":10.0,"labelWidth":"8","autoFocus":false,"type":"INPUT_WIDGET_V2","hideCard":false,"animateLoading":false,"parentColumnSpace":6.15087890625,"dynamicTriggerPathList":[],"resetOnSubmit":true,"leftColumn":32.0,"dynamicBindingPathList":[{"key":"accentColor"},{"key":"defaultText"}],"labelPosition":"Left","labelStyle":"","labelTextColor":"","inputType":"TEXT","isDisabled":true,"key":"zgqucosmsy","labelTextSize":"0.875rem","isRequired":false,"isDeprecated":false,"rightColumn":64.0,"dynamicHeight":"FIXED","widgetId":"km9fj0szgz","accentColor":"{{appsmith.theme.colors.primaryColor}}","isVisible":true,"label":"Error Msg","version":2.0,"parentId":"2dmkum63wd","labelAlignment":"left","renderMode":"CANVAS","isLoading":false,"borderRadius":"0.375rem","maxDynamicHeight":9000.0,"iconAlign":"left","defaultText":"{{appsmith.store.ErrorMessage}}","minDynamicHeight":4.0}],"key":"8jj9ozjiq8","isDeprecated":false,"rightColumn":312.75,"detachFromLayout":true,"widgetId":"2dmkum63wd","accentColor":"{{appsmith.theme.colors.primaryColor}}","containerStyle":"none","isVisible":true,"version":1.0,"parentId":"nuuohbt69t","renderMode":"CANVAS","isLoading":false,"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}"}],"borderWidth":"0","key":"9508m2tat7","backgroundColor":"#FFFFFF","isDeprecated":false,"rightColumn":64.0,"dynamicHeight":"FIXED","widgetId":"nuuohbt69t","containerStyle":"card","isVisible":true,"version":1.0,"parentId":"danfbxdzgn","renderMode":"CANVAS","isLoading":false,"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","maxDynamicHeight":9000.0,"minDynamicHeight":4.0}],"isDisabled":false,"key":"y47ei2f6i0","isDeprecated":false,"rightColumn":263.625,"detachFromLayout":true,"widgetId":"danfbxdzgn","minWidth":450.0,"isVisible":true,"version":1.0,"parentId":"3rhrpiq3er","renderMode":"CANVAS","isLoading":false,"mobileTopRow":0.0,"responsiveBehavior":"fill","mobileLeftColumn":0.0,"flexLayers":[]}],"key":"n0xf4585ut","height":530.0,"isDeprecated":false,"rightColumn":37.0,"detachFromLayout":true,"dynamicHeight":"FIXED","widgetId":"3rhrpiq3er","canOutsideClickClose":true,"canEscapeKeyClose":true,"version":2.0,"parentId":"0","renderMode":"CANVAS","isLoading":false,"mobileTopRow":9.0,"borderRadius":"0.375rem","mobileLeftColumn":13.0,"maxDynamicHeight":9000.0,"width":647.9,"minDynamicHeight":24.0},{"boxShadow":"none","mobileBottomRow":38.0,"widgetName":"File_Alert_Modal","isCanvas":true,"displayName":"Modal","iconSVG":"/static/media/icon.d2ab7de0666eaef853cc2d330f86887b.svg","searchTags":["dialog","popup","notification"],"topRow":60.0,"bottomRow":300.0,"parentRowSpace":10.0,"type":"MODAL_WIDGET","hideCard":false,"shouldScrollContents":false,"mobileRightColumn":36.0,"animateLoading":false,"parentColumnSpace":10.41015625,"dynamicTriggerPathList":[],"leftColumn":12.0,"dynamicBindingPathList":[{"key":"borderRadius"}],"children":[{"mobileBottomRow":240.0,"widgetName":"Canvas20","displayName":"Canvas","topRow":0.0,"bottomRow":180.0,"parentRowSpace":1.0,"type":"CANVAS_WIDGET","canExtend":true,"hideCard":true,"shouldScrollContents":false,"minHeight":182.0,"mobileRightColumn":249.84375,"parentColumnSpace":1.0,"leftColumn":0.0,"dynamicBindingPathList":[],"children":[{"boxShadow":"none","widgetName":"File_Alert_CloseButton","onClick":"{{resetWidget('FilePicker').then(()=>closeModal('File_Alert_Modal'))}}","buttonColor":"{{appsmith.theme.colors.primaryColor}}","dynamicPropertyPathList":[{"key":"onClick"}],"displayName":"Button","iconSVG":"/static/media/icon.cca026338f1c8eb6df8ba03d084c2fca.svg","searchTags":["click","submit"],"topRow":12.0,"bottomRow":16.0,"type":"BUTTON_WIDGET","hideCard":false,"animateLoading":true,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":51.0,"dynamicBindingPathList":[{"key":"buttonColor"},{"key":"borderRadius"}],"text":"Okay","isDisabled":false,"key":"nu57m82z50","isDeprecated":false,"rightColumn":63.0,"isDefaultClickDisabled":true,"widgetId":"26s17uyo4z","buttonStyle":"PRIMARY_BUTTON","isVisible":true,"recaptchaType":"V3","version":1.0,"parentId":"9so3axikw5","renderMode":"CANVAS","isLoading":false,"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","buttonVariant":"PRIMARY","placement":"CENTER"},{"widgetName":"File_Alert_Text","displayName":"Text","iconSVG":"/static/media/icon.97c59b523e6f70ba6f40a10fc2c7c5b5.svg","searchTags":["typography","paragraph","label"],"topRow":2.0,"bottomRow":11.0,"type":"TEXT_WIDGET","hideCard":false,"animateLoading":false,"overflow":"NONE","fontFamily":"{{appsmith.theme.fontFamily.appFont}}","dynamicTriggerPathList":[],"leftColumn":0.0,"dynamicBindingPathList":[{"key":"fontFamily"},{"key":"borderRadius"},{"key":"textColor"}],"shouldTruncate":false,"truncateButtonColor":"#FFC13D","text":"File is large, Use other application to upload the file.\nNote: appsmith supports file size less than 20mb and zip file of 4mb","key":"16xe830bkl","isDeprecated":false,"rightColumn":64.0,"textAlign":"CENTER","dynamicHeight":"FIXED","widgetId":"vw2m3eokhu","isVisible":true,"fontStyle":"BOLD","textColor":"{{appsmith.theme.colors.primaryColor}}","version":1.0,"parentId":"9so3axikw5","renderMode":"CANVAS","isLoading":false,"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","maxDynamicHeight":9000.0,"fontSize":"1.5rem","minDynamicHeight":4.0}],"isDisabled":false,"key":"unr6cvaqjz","isDeprecated":false,"rightColumn":249.84375,"detachFromLayout":true,"widgetId":"9so3axikw5","minWidth":450.0,"isVisible":true,"version":1.0,"parentId":"3gj6srdyag","renderMode":"CANVAS","isLoading":false,"mobileTopRow":0.0,"responsiveBehavior":"fill","mobileLeftColumn":0.0,"flexLayers":[]}],"key":"2nsq1idgqj","height":182.0,"isDeprecated":false,"rightColumn":36.0,"detachFromLayout":true,"dynamicHeight":"FIXED","widgetId":"3gj6srdyag","canOutsideClickClose":true,"canEscapeKeyClose":true,"version":2.0,"parentId":"0","renderMode":"CANVAS","isLoading":false,"mobileTopRow":14.0,"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","mobileLeftColumn":12.0,"maxDynamicHeight":9000.0,"width":698.25,"minDynamicHeight":24.0},{"boxShadow":"none","mobileBottomRow":27.0,"widgetName":"ShowAlert_Modal","isCanvas":true,"displayName":"Modal","iconSVG":"/static/media/icon.d2ab7de0666eaef853cc2d330f86887b.svg","searchTags":["dialog","popup","notification"],"topRow":60.0,"bottomRow":310.0,"parentRowSpace":10.0,"type":"MODAL_WIDGET","hideCard":false,"shouldScrollContents":false,"mobileRightColumn":39.0,"animateLoading":false,"parentColumnSpace":10.984375,"dynamicTriggerPathList":[],"leftColumn":15.0,"dynamicBindingPathList":[{"key":"borderRadius"}],"children":[{"mobileBottomRow":240.0,"widgetName":"Canvas24","displayName":"Canvas","topRow":0.0,"bottomRow":160.0,"parentRowSpace":1.0,"type":"CANVAS_WIDGET","canExtend":true,"hideCard":true,"shouldScrollContents":false,"minHeight":164.0,"mobileRightColumn":263.625,"parentColumnSpace":1.0,"leftColumn":0.0,"dynamicBindingPathList":[],"children":[{"mobileBottomRow":5.0,"widgetName":"Text5","displayName":"Text","iconSVG":"/static/media/icon.c3b6033f570046f8c6288d911333a827.svg","searchTags":["typography","paragraph","label"],"topRow":4.0,"bottomRow":8.0,"type":"TEXT_WIDGET","hideCard":false,"mobileRightColumn":41.0,"animateLoading":false,"overflow":"NONE","fontFamily":"{{appsmith.theme.fontFamily.appFont}}","dynamicTriggerPathList":[],"leftColumn":0.0,"dynamicBindingPathList":[{"key":"truncateButtonColor"},{"key":"fontFamily"},{"key":"borderRadius"},{"key":"text"},{"key":"textColor"}],"shouldTruncate":false,"truncateButtonColor":"{{appsmith.theme.colors.primaryColor}}","text":"{{ActualFileName_Input.text.concat(\"   Does not exist in SharePoint!!!\")}}","key":"u1eb8unlsk","isDeprecated":false,"rightColumn":63.0,"textAlign":"CENTER","dynamicHeight":"FIXED","widgetId":"1c35am147t","minWidth":450.0,"isVisible":true,"fontStyle":"BOLD","textColor":"{{appsmith.theme.colors.primaryColor}}","version":1.0,"parentId":"8z8kppozm0","renderMode":"CANVAS","isLoading":false,"mobileTopRow":1.0,"responsiveBehavior":"fill","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","mobileLeftColumn":1.0,"maxDynamicHeight":9000.0,"fontSize":"1.25rem","minDynamicHeight":4.0},{"resetFormOnClick":false,"boxShadow":"none","mobileBottomRow":22.0,"widgetName":"Close_ButtonCopy","onClick":"{{closeModal('ShowAlert_Modal')}}","buttonColor":"{{appsmith.theme.colors.primaryColor}}","dynamicPropertyPathList":[{"key":"onClick"}],"displayName":"Button","iconSVG":"/static/media/icon.7beb9123fb53027d9d6b778cdfe4caed.svg","searchTags":["click","submit"],"topRow":9.0,"bottomRow":13.0,"type":"BUTTON_WIDGET","hideCard":false,"mobileRightColumn":47.0,"animateLoading":true,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":47.0,"dynamicBindingPathList":[{"key":"buttonColor"},{"key":"borderRadius"}],"text":"Okay","isDisabled":false,"key":"a8byd68sd0","isDeprecated":false,"rightColumn":63.0,"isDefaultClickDisabled":true,"widgetId":"sth6ajv66f","buttonStyle":"PRIMARY","minWidth":120.0,"isVisible":true,"recaptchaType":"V3","version":1.0,"parentId":"8z8kppozm0","renderMode":"CANVAS","isLoading":false,"mobileTopRow":18.0,"responsiveBehavior":"hug","disabledWhenInvalid":false,"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","mobileLeftColumn":31.0,"placement":"CENTER"}],"isDisabled":false,"key":"zrwmtap8cw","isDeprecated":false,"rightColumn":263.625,"detachFromLayout":true,"widgetId":"8z8kppozm0","minWidth":450.0,"isVisible":true,"version":1.0,"parentId":"tavfdr3agw","renderMode":"CANVAS","isLoading":false,"mobileTopRow":0.0,"responsiveBehavior":"fill","mobileLeftColumn":0.0,"flexLayers":[]}],"key":"ts2tav54bq","height":164.0,"isDeprecated":false,"rightColumn":39.0,"detachFromLayout":true,"dynamicHeight":"FIXED","widgetId":"tavfdr3agw","canOutsideClickClose":true,"canEscapeKeyClose":true,"version":2.0,"parentId":"0","renderMode":"CANVAS","isLoading":false,"mobileTopRow":3.0,"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","mobileLeftColumn":15.0,"maxDynamicHeight":9000.0,"width":698.25,"minDynamicHeight":24.0},{"boxShadow":"none","widgetName":"Progress_Modal","isCanvas":true,"displayName":"Modal","iconSVG":"/static/media/icon.4975978e9a961fb0bfb4e38de7ecc7c5.svg","searchTags":["dialog","popup","notification"],"topRow":25.0,"bottomRow":49.0,"parentRowSpace":10.0,"type":"MODAL_WIDGET","hideCard":false,"shouldScrollContents":false,"animateLoading":false,"parentColumnSpace":14.0625,"dynamicTriggerPathList":[],"leftColumn":14.0,"dynamicBindingPathList":[{"key":"borderRadius"}],"children":[{"boxShadow":"none","widgetName":"Canvas12Copy","displayName":"Canvas","topRow":0.0,"bottomRow":240.0,"parentRowSpace":1.0,"type":"CANVAS_WIDGET","canExtend":true,"hideCard":true,"shouldScrollContents":false,"minHeight":244.0,"parentColumnSpace":1.0,"dynamicTriggerPathList":[],"leftColumn":0.0,"dynamicBindingPathList":[{"key":"borderRadius"},{"key":"accentColor"}],"children":[{"boxShadow":"none","widgetName":"retry_Button","onClick":"{{FileUploadProcess.retryfunction()}}","buttonColor":"{{appsmith.theme.colors.primaryColor}}","dynamicPropertyPathList":[{"key":"isDisabled"},{"key":"onClick"}],"displayName":"Button","iconSVG":"/static/media/icon.cca026338f1c8eb6df8ba03d084c2fca.svg","searchTags":["click","submit"],"topRow":18.0,"bottomRow":22.0,"type":"BUTTON_WIDGET","hideCard":false,"animateLoading":true,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":31.0,"dynamicBindingPathList":[{"key":"buttonColor"},{"key":"borderRadius"},{"key":"isDisabled"}],"text":"Retry","isDisabled":"{{appsmith.store.closedisable=='False'}}","key":"5g8c8gayqk","isDeprecated":false,"rightColumn":47.0,"isDefaultClickDisabled":true,"widgetId":"bulw6k8mb4","buttonStyle":"PRIMARY","isVisible":true,"recaptchaType":"V3","version":1.0,"parentId":"x0dsjacbtt","renderMode":"CANVAS","isLoading":false,"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","buttonVariant":"SECONDARY","placement":"CENTER"},{"widgetName":"Error_text","displayName":"Text","iconSVG":"/static/media/icon.97c59b523e6f70ba6f40a10fc2c7c5b5.svg","searchTags":["typography","paragraph","label"],"topRow":13.0,"bottomRow":17.0,"type":"TEXT_WIDGET","hideCard":false,"animateLoading":false,"overflow":"NONE","fontFamily":"{{appsmith.theme.fontFamily.appFont}}","dynamicTriggerPathList":[],"leftColumn":3.0,"dynamicBindingPathList":[{"key":"fontFamily"},{"key":"borderRadius"},{"key":"text"}],"shouldTruncate":false,"truncateButtonColor":"#FFC13D","text":"{{appsmith.store.ErrorMessage}}","key":"dcsz6tjc0b","isDeprecated":false,"rightColumn":62.0,"textAlign":"LEFT","dynamicHeight":"FIXED","widgetId":"iumwdhs6k7","isVisible":true,"fontStyle":"BOLD","textColor":"#f87171","version":1.0,"parentId":"x0dsjacbtt","renderMode":"CANVAS","isLoading":false,"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","maxDynamicHeight":9000.0,"fontSize":"0.875rem","minDynamicHeight":4.0},{"widgetName":"Statename_text","displayName":"Text","iconSVG":"/static/media/icon.97c59b523e6f70ba6f40a10fc2c7c5b5.svg","searchTags":["typography","paragraph","label"],"topRow":2.0,"bottomRow":6.0,"type":"TEXT_WIDGET","hideCard":false,"animateLoading":false,"overflow":"NONE","fontFamily":"{{appsmith.theme.fontFamily.appFont}}","dynamicTriggerPathList":[],"leftColumn":3.0,"dynamicBindingPathList":[{"key":"fontFamily"},{"key":"borderRadius"},{"key":"text"},{"key":"textColor"}],"shouldTruncate":false,"truncateButtonColor":"#FFC13D","text":"{{appsmith.store.statename}}","key":"dcsz6tjc0b","isDeprecated":false,"rightColumn":43.0,"textAlign":"LEFT","dynamicHeight":"FIXED","widgetId":"12ekvwba2d","isVisible":true,"fontStyle":"BOLD","textColor":"{{appsmith.theme.colors.primaryColor}}","version":1.0,"parentId":"x0dsjacbtt","renderMode":"CANVAS","isLoading":false,"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","maxDynamicHeight":9000.0,"fontSize":"1.5rem","minDynamicHeight":4.0},{"boxShadow":"none","widgetName":"FileClose_Button","onClick":"{{storeValue('statename','Completed');await FileUploadProcess.runRefreshFunc().then(()=>closeModal('Progress_Modal'))}}","buttonColor":"{{appsmith.theme.colors.primaryColor}}","dynamicPropertyPathList":[{"key":"isDisabled"},{"key":"onClick"}],"displayName":"Button","iconSVG":"/static/media/icon.cca026338f1c8eb6df8ba03d084c2fca.svg","searchTags":["click","submit"],"topRow":18.0,"bottomRow":22.0,"type":"BUTTON_WIDGET","hideCard":false,"animateLoading":true,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":47.0,"dynamicBindingPathList":[{"key":"buttonColor"},{"key":"borderRadius"},{"key":"isDisabled"}],"text":"Close","isDisabled":"{{Error_text.text.length==0||appsmith.store.closedisable=='False'}}","key":"5g8c8gayqk","isDeprecated":false,"rightColumn":63.0,"isDefaultClickDisabled":true,"widgetId":"9yxxjw8cba","buttonStyle":"PRIMARY","isVisible":true,"recaptchaType":"V3","version":1.0,"parentId":"x0dsjacbtt","renderMode":"CANVAS","isLoading":false,"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","buttonVariant":"SECONDARY","placement":"CENTER"},{"widgetName":"Upload_Progress","progressType":"linear","isCanvas":false,"dynamicPropertyPathList":[{"key":"progress"}],"displayName":"Progress","iconSVG":"/static/media/icon.9b0d7b96a0223e8120bf6f14aca4154a.svg","searchTags":["percent"],"topRow":7.0,"bottomRow":13.0,"parentRowSpace":10.0,"type":"PROGRESS_WIDGET","isIndeterminate":false,"hideCard":false,"fillColor":"{{appsmith.theme.colors.primaryColor}}","parentColumnSpace":8.25,"dynamicTriggerPathList":[],"leftColumn":3.0,"dynamicBindingPathList":[{"key":"fillColor"},{"key":"borderRadius"},{"key":"progress"}],"key":"0kuaqx9xvs","showResult":true,"isDeprecated":false,"rightColumn":62.0,"counterClosewise":false,"widgetId":"kru93wkqoj","isVisible":true,"steps":"1","version":1.0,"parentId":"x0dsjacbtt","renderMode":"CANVAS","isLoading":false,"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","progress":"{{appsmith.store.progressstatus}}"}],"isDisabled":false,"key":"yu9isw81na","isDeprecated":false,"rightColumn":337.5,"detachFromLayout":true,"widgetId":"x0dsjacbtt","accentColor":"{{appsmith.theme.colors.primaryColor}}","isVisible":true,"version":1.0,"parentId":"4huuqiood7","renderMode":"CANVAS","isLoading":false,"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}"}],"key":"52gxsk3uoi","height":244.0,"isDeprecated":false,"rightColumn":38.0,"detachFromLayout":true,"dynamicHeight":"FIXED","widgetId":"4huuqiood7","canOutsideClickClose":true,"canEscapeKeyClose":true,"version":2.0,"parentId":"0","renderMode":"CANVAS","isLoading":false,"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","maxDynamicHeight":9000.0,"width":540.0,"minDynamicHeight":4.0},{"boxShadow":"none","widgetName":"ChangeState_Modal","isCanvas":true,"displayName":"Modal","iconSVG":"/static/media/icon.4975978e.svg","topRow":86.0,"bottomRow":110.0,"parentRowSpace":10.0,"type":"MODAL_WIDGET","hideCard":false,"shouldScrollContents":true,"animateLoading":false,"parentColumnSpace":19.8125,"dynamicTriggerPathList":[],"leftColumn":19.0,"dynamicBindingPathList":[],"children":[{"boxShadow":"none","widgetName":"Canvas2Copy","displayName":"Canvas","topRow":0.0,"bottomRow":500.0,"parentRowSpace":1.0,"type":"CANVAS_WIDGET","canExtend":true,"hideCard":true,"shouldScrollContents":false,"minHeight":506.0,"parentColumnSpace":1.0,"dynamicTriggerPathList":[],"leftColumn":0.0,"dynamicBindingPathList":[],"children":[{"boxShadow":"none","widgetName":"Icon1","onClick":"{{closeModal('ChangeState_Modal')}}","buttonColor":"#2E3D49","displayName":"Icon","iconSVG":"/static/media/icon.31d6cfe0.svg","topRow":45.0,"bottomRow":49.0,"type":"ICON_BUTTON_WIDGET","hideCard":true,"dynamicTriggerPathList":[],"leftColumn":54.0,"dynamicBindingPathList":[],"iconSize":24.0,"key":"lto10z5naf","labelTextSize":"0.875rem","rightColumn":62.0,"iconName":"cross","widgetId":"w1r30d2idu","isVisible":false,"version":1.0,"parentId":"7pae5uwb93","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","buttonVariant":"TERTIARY"},{"boxShadow":"none","widgetName":"Decision_Title","dynamicPropertyPathList":[{"key":"fontSize"}],"displayName":"Text","iconSVG":"/static/media/icon.97c59b52.svg","topRow":1.0,"bottomRow":5.0,"type":"TEXT_WIDGET","hideCard":false,"animateLoading":false,"dynamicTriggerPathList":[],"overflow":"NONE","fontFamily":"System Default","leftColumn":1.0,"dynamicBindingPathList":[{"key":"text"}],"text":"{{ Process.getModalTitle() }}","key":"f231c049hd","labelTextSize":"0.875rem","rightColumn":62.0,"textAlign":"LEFT","dynamicHeight":"FIXED","widgetId":"5i9y3i4836","isVisible":true,"fontStyle":"BOLD","textColor":"#008695","version":1.0,"parentId":"7pae5uwb93","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","maxDynamicHeight":9000.0,"fontSize":"1.5rem","minDynamicHeight":4.0},{"boxShadow":"none","widgetName":"Button1Copy","onClick":"{{closeModal('ChangeState_Modal'); GlobalVariables.resetForm([\"CheckboxGroup1\"]) }}","buttonColor":"#008695","dynamicPropertyPathList":[{"key":"onClick"}],"displayName":"Button","iconSVG":"/static/media/icon.cca02633.svg","topRow":45.0,"bottomRow":49.0,"type":"BUTTON_WIDGET","hideCard":false,"animateLoading":false,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":18.0,"dynamicBindingPathList":[],"text":"Close","isDisabled":false,"key":"o2ddp866uc","labelTextSize":"0.875rem","rightColumn":30.0,"isDefaultClickDisabled":true,"widgetId":"s12y9clawp","buttonStyle":"PRIMARY","isVisible":true,"version":1.0,"recaptchaType":"V3","parentId":"7pae5uwb93","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","buttonVariant":"SECONDARY"},{"boxShadow":"none","widgetName":"Button2","onClick":"{{ Process.onModalSubmitClicked(Estimate_Table.selectedRow.EId); GlobalVariables.resetForm([\"CheckboxGroup1\", \"Estimate_Table\"]) }}","buttonColor":"#008695","dynamicPropertyPathList":[{"key":"onClick"}],"displayName":"Button","iconSVG":"/static/media/icon.cca02633.svg","topRow":45.0,"bottomRow":49.0,"type":"BUTTON_WIDGET","hideCard":false,"animateLoading":false,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":3.0,"dynamicBindingPathList":[],"text":"Confirm","isDisabled":false,"key":"o2ddp866uc","labelTextSize":"0.875rem","rightColumn":15.0,"isDefaultClickDisabled":true,"widgetId":"ywnwrxt3jl","buttonStyle":"PRIMARY_BUTTON","isVisible":true,"version":1.0,"recaptchaType":"V3","parentId":"7pae5uwb93","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","buttonVariant":"SECONDARY"},{"boxShadow":"none","widgetName":"Container2Copy","borderColor":"transparent","isCanvas":true,"dynamicPropertyPathList":[{"key":"borderRadius"}],"displayName":"Container","iconSVG":"/static/media/icon.1977dca3.svg","topRow":6.0,"bottomRow":43.0,"parentRowSpace":10.0,"type":"CONTAINER_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":11.125,"dynamicTriggerPathList":[],"leftColumn":1.0,"dynamicBindingPathList":[],"children":[{"boxShadow":"none","widgetName":"Canvas3Copy1","displayName":"Canvas","topRow":0.0,"bottomRow":370.0,"parentRowSpace":1.0,"type":"CANVAS_WIDGET","canExtend":false,"hideCard":true,"minHeight":400.0,"parentColumnSpace":1.0,"leftColumn":0.0,"dynamicBindingPathList":[],"children":[{"boxShadow":"none","widgetName":"CheckboxGroup1","dynamicPropertyPathList":[{"key":"options"}],"displayName":"Checkbox Group","iconSVG":"/static/media/icon.ecb38479.svg","topRow":26.0,"bottomRow":35.0,"parentRowSpace":10.0,"type":"CHECKBOX_GROUP_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":11.125,"dynamicTriggerPathList":[],"leftColumn":0.0,"dynamicBindingPathList":[{"key":"options"}],"options":"{{ appsmith.store.currentDecision?.Confirmation.map((thisValue)=>{return({\"label\":thisValue,\"value\":thisValue})}) }}","isDisabled":false,"key":"bs9z3neqyk","optionAlignment":"unset","labelTextSize":"0.875rem","isRequired":true,"rightColumn":63.0,"defaultSelectedValues":"","dynamicHeight":"FIXED","widgetId":"7diafpj5em","accentColor":"#03B365","isVisible":false,"version":2.0,"parentId":"m6xwlkxfxi","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","maxDynamicHeight":9000.0,"isInline":false,"minDynamicHeight":4.0},{"boxShadow":"none","widgetName":"Text6","displayName":"Text","iconSVG":"/static/media/icon.97c59b52.svg","topRow":0.0,"bottomRow":21.0,"parentRowSpace":10.0,"type":"TEXT_WIDGET","hideCard":false,"animateLoading":false,"overflow":"NONE","parentColumnSpace":9.751904296874999,"dynamicTriggerPathList":[],"fontFamily":"System Default","leftColumn":1.0,"dynamicBindingPathList":[{"key":"text"}],"shouldTruncate":false,"truncateButtonColor":"#FFC13D","text":"{{\n(appsmith.store.currentDecision?.Confirmation)?.join('\\n\\n\\n')}}","key":"65340ap74o","labelTextSize":"0.875rem","rightColumn":61.0,"textAlign":"LEFT","dynamicHeight":"FIXED","widgetId":"5xutuu5x1w","isVisible":true,"fontStyle":"","textColor":"#008695","version":1.0,"parentId":"m6xwlkxfxi","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","maxDynamicHeight":9000.0,"fontSize":"0.875rem","minDynamicHeight":4.0}],"key":"rwedoxpb42","labelTextSize":"0.875rem","rightColumn":267.0,"detachFromLayout":true,"widgetId":"m6xwlkxfxi","containerStyle":"none","isVisible":true,"version":1.0,"parentId":"s72exeqldb","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px"}],"borderWidth":"0","key":"oujpihjo93","labelTextSize":"0.875rem","backgroundColor":"#F6F7F8","rightColumn":63.0,"dynamicHeight":"FIXED","widgetId":"s72exeqldb","containerStyle":"card","isVisible":true,"version":1.0,"parentId":"7pae5uwb93","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","maxDynamicHeight":9000.0,"minDynamicHeight":4.0}],"isDisabled":false,"key":"1kfu4e4b02","labelTextSize":"0.875rem","rightColumn":475.5,"detachFromLayout":true,"widgetId":"7pae5uwb93","isVisible":true,"version":1.0,"parentId":"7ne8epywhk","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px"}],"key":"tu1594ea2u","height":506.0,"labelTextSize":"0.875rem","rightColumn":43.0,"detachFromLayout":true,"dynamicHeight":"FIXED","widgetId":"7ne8epywhk","canOutsideClickClose":true,"canEscapeKeyClose":true,"version":2.0,"parentId":"0","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","maxDynamicHeight":9000.0,"width":676.9,"minDynamicHeight":4.0},{"boxShadow":"none","widgetName":"Container1","borderColor":"transparent","isCanvas":true,"dynamicPropertyPathList":[{"key":"borderRadius"}],"displayName":"Container","iconSVG":"/static/media/icon.1977dca3.svg","topRow":0.0,"bottomRow":20.0,"parentRowSpace":10.0,"type":"CONTAINER_WIDGET","hideCard":false,"animateLoading":true,"parentColumnSpace":15.0625,"leftColumn":0.0,"children":[{"boxShadow":"none","widgetName":"Canvas1","displayName":"Canvas","topRow":0.0,"bottomRow":200.0,"parentRowSpace":1.0,"type":"CANVAS_WIDGET","canExtend":false,"hideCard":true,"minHeight":400.0,"parentColumnSpace":1.0,"leftColumn":0.0,"children":[{"boxShadow":"0px 0px 4px 3px rgba(0, 0, 0, 0.25)","widgetName":"Admin_Button","onClick":"{{navigateTo('Estimate State', {})}}","buttonColor":"{{appsmith.theme.colors.primaryColor}}","dynamicPropertyPathList":[{"key":"isVisible"},{"key":"boxShadow"}],"displayName":"Icon Button","iconSVG":"/static/media/icon.1a0c634ac75f9fa6b6ae7a8df882a3ba.svg","searchTags":["click","submit"],"topRow":0.0,"bottomRow":4.0,"tooltip":"Go to Estimate Admin Page","parentRowSpace":10.0,"type":"ICON_BUTTON_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":14.0625,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":61.0,"dynamicBindingPathList":[{"key":"buttonColor"},{"key":"isVisible"}],"isDisabled":false,"key":"l5y4kk0mpp","isDeprecated":false,"rightColumn":64.0,"iconName":"settings","widgetId":"848rfjm6bl","isVisible":"{{GlobalVariables.disableCorporateAdminButton()}}","version":1.0,"parentId":"lu5t2mwikl","renderMode":"CANVAS","isLoading":false,"borderRadius":"0.375rem","buttonVariant":"TERTIARY"},{"boxShadow":"0px 0px 4px 3px rgba(0, 0, 0, 0.25)","widgetName":"EnterPO","onClick":"{{ Process.clickState('EnterPO', Estimate_Select) }}","buttonColor":"#008695","dynamicPropertyPathList":[{"key":"onClick"},{"key":"boxShadow"}],"displayName":"Button","iconSVG":"/static/media/icon.cca02633.svg","topRow":11.0,"bottomRow":16.0,"parentRowSpace":10.0,"type":"BUTTON_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":14.75,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":45.0,"dynamicBindingPathList":[],"text":"Enter PO","isDisabled":false,"key":"lf7byu5aeh","labelTextSize":"0.875rem","rightColumn":56.0,"isDefaultClickDisabled":true,"widgetId":"cpja6zoiot","isVisible":true,"recaptchaType":"V3","version":1.0,"parentId":"lu5t2mwikl","renderMode":"CANVAS","isLoading":false,"borderRadius":"0.375rem","buttonVariant":"SECONDARY","placement":"CENTER"},{"boxShadow":"none","widgetName":"Signoff_EnterPO","onClick":"{{Process.clickArrow(\"Signoff_EnterPO\")}}","buttonColor":"#03B365","dynamicPropertyPathList":[{"key":"isDisabled"},{"key":"onClick"}],"displayName":"Icon Button","iconSVG":"/static/media/icon.1a0c634a.svg","topRow":11.0,"bottomRow":15.0,"parentRowSpace":10.0,"type":"ICON_BUTTON_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":14.75,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":39.0,"dynamicBindingPathList":[{"key":"isDisabled"}],"isDisabled":"{{Process.disableArrow('Signoff')}}","key":"m4759zi3w8","labelTextSize":"0.875rem","rightColumn":44.0,"iconName":"arrow-right","widgetId":"farq2jxuha","isVisible":true,"version":1.0,"parentId":"lu5t2mwikl","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","buttonVariant":"TERTIARY"},{"boxShadow":"none","widgetName":"Signoff_Prepare","onClick":"{{Process.clickArrow(\"Signoff_Prepare\")}}","buttonColor":"#03B365","dynamicPropertyPathList":[{"key":"isDisabled"},{"key":"onClick"}],"displayName":"Icon Button","iconSVG":"/static/media/icon.1a0c634a.svg","topRow":7.0,"bottomRow":11.0,"parentRowSpace":10.0,"type":"ICON_BUTTON_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":14.75,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":10.0,"dynamicBindingPathList":[{"key":"isDisabled"}],"isDisabled":"{{Process.disableArrow('Signoff')}}","key":"m4759zi3w8","labelTextSize":"0.875rem","rightColumn":17.0,"iconName":"arrow-up","widgetId":"bpxdw6qonk","isVisible":true,"version":1.0,"parentId":"lu5t2mwikl","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","buttonVariant":"TERTIARY"},{"boxShadow":"none","widgetName":"Review_Signoff","onClick":"{{Process.clickArrow(\"Review_Signoff\")}}","buttonColor":"#03B365","dynamicPropertyPathList":[{"key":"isDisabled"},{"key":"onClick"}],"displayName":"Icon Button","iconSVG":"/static/media/icon.1a0c634a.svg","topRow":6.0,"bottomRow":10.0,"parentRowSpace":10.0,"type":"ICON_BUTTON_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":14.75,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":29.0,"dynamicBindingPathList":[{"key":"isDisabled"}],"isDisabled":"{{Process.disableArrow('Review')}}","key":"m4759zi3w8","labelTextSize":"0.875rem","rightColumn":35.0,"iconName":"arrow-down","widgetId":"6p116xiszk","isVisible":true,"version":1.0,"parentId":"lu5t2mwikl","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","buttonVariant":"TERTIARY"},{"boxShadow":"none","widgetName":"Review_Prepare","onClick":"{{Process.clickArrow(\"Review_Prepare\")}}","buttonColor":"#03B365","dynamicPropertyPathList":[{"key":"isDisabled"},{"key":"onClick"}],"displayName":"Icon Button","iconSVG":"/static/media/icon.1a0c634a.svg","topRow":4.0,"bottomRow":8.0,"parentRowSpace":10.0,"type":"ICON_BUTTON_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":14.75,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":20.0,"dynamicBindingPathList":[{"key":"isDisabled"}],"isDisabled":"{{Process.disableArrow('Review')}}","key":"m4759zi3w8","labelTextSize":"0.875rem","rightColumn":24.0,"iconName":"arrow-left","widgetId":"htomxe8q4l","isVisible":true,"version":1.0,"parentId":"lu5t2mwikl","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","buttonVariant":"TERTIARY"},{"boxShadow":"none","widgetName":"Prepare_Review","onClick":"{{Process.clickArrow(\"Prepare_Review\")}}","buttonColor":"#03B365","dynamicPropertyPathList":[{"key":"isDisabled"},{"key":"onClick"}],"displayName":"Icon Button","iconSVG":"/static/media/icon.1a0c634a.svg","topRow":0.0,"bottomRow":4.0,"parentRowSpace":10.0,"type":"ICON_BUTTON_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":14.75,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":20.0,"dynamicBindingPathList":[{"key":"isDisabled"}],"isDisabled":"{{Process.disableArrow('Prepare')}}","key":"m4759zi3w8","labelTextSize":"0.875rem","rightColumn":24.0,"iconName":"arrow-right","widgetId":"ky3zdedabx","isVisible":true,"version":1.0,"parentId":"lu5t2mwikl","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","buttonVariant":"TERTIARY"},{"boxShadow":"0px 0px 4px 3px rgba(0, 0, 0, 0.25)","widgetName":"SignOff","onClick":"{{ Process.clickState('Signoff', Estimate_Select) }}","buttonColor":"#008695","dynamicPropertyPathList":[{"key":"onClick"},{"key":"boxShadow"}],"displayName":"Button","iconSVG":"/static/media/icon.cca02633.svg","topRow":11.0,"bottomRow":16.0,"parentRowSpace":10.0,"type":"BUTTON_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":14.75,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":7.0,"dynamicBindingPathList":[],"text":"Sign-Off","isDisabled":false,"key":"lf7byu5aeh","labelTextSize":"0.875rem","rightColumn":38.0,"isDefaultClickDisabled":true,"widgetId":"117rf1gdin","isVisible":true,"recaptchaType":"V3","version":1.0,"parentId":"lu5t2mwikl","renderMode":"CANVAS","isLoading":false,"borderRadius":"0.375rem","buttonVariant":"SECONDARY","placement":"CENTER"},{"boxShadow":"0px 0px 4px 3px rgba(0, 0, 0, 0.25)","widgetName":"Review","onClick":"{{ Process.clickState('Review', Estimate_Select) }}","buttonColor":"#008695","dynamicPropertyPathList":[{"key":"onClick"},{"key":"boxShadow"}],"displayName":"Button","iconSVG":"/static/media/icon.cca02633.svg","topRow":1.0,"bottomRow":6.0,"parentRowSpace":10.0,"type":"BUTTON_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":14.75,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":26.0,"dynamicBindingPathList":[],"text":"Review","isDisabled":false,"key":"lf7byu5aeh","labelTextSize":"0.875rem","rightColumn":38.0,"isDefaultClickDisabled":true,"widgetId":"rjgnxbk54y","isVisible":true,"recaptchaType":"V3","version":1.0,"parentId":"lu5t2mwikl","renderMode":"CANVAS","isLoading":false,"borderRadius":"0.375rem","buttonVariant":"SECONDARY","placement":"CENTER"},{"boxShadow":"0px 0px 4px 3px rgba(0, 0, 0, 0.25)","widgetName":"Prepare","onClick":"{{ Process.clickState('Prepare', Estimate_Select) }}","buttonColor":"#008695","dynamicPropertyPathList":[{"key":"onClick"},{"key":"boxShadow"}],"displayName":"Button","iconSVG":"/static/media/icon.cca02633.svg","topRow":1.0,"bottomRow":6.0,"parentRowSpace":10.0,"type":"BUTTON_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":14.75,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":7.0,"dynamicBindingPathList":[],"text":"Prepare","isDisabled":false,"key":"lf7byu5aeh","labelTextSize":"0.875rem","rightColumn":19.0,"isDefaultClickDisabled":true,"widgetId":"ymjflzz1xj","isVisible":true,"recaptchaType":"V3","version":1.0,"parentId":"lu5t2mwikl","renderMode":"CANVAS","isLoading":false,"borderRadius":"0.375rem","buttonVariant":"SECONDARY","placement":"CENTER"}],"key":"ck656xey1j","labelTextSize":"0.875rem","rightColumn":361.5,"detachFromLayout":true,"widgetId":"lu5t2mwikl","containerStyle":"none","isVisible":true,"version":1.0,"parentId":"ft7lovcyg4","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px"}],"borderWidth":"0","key":"r0bflk5gc0","labelTextSize":"0.875rem","backgroundColor":"#FFFFFF","rightColumn":64.0,"dynamicHeight":"FIXED","widgetId":"ft7lovcyg4","containerStyle":"card","isVisible":true,"version":1.0,"parentId":"0","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","maxDynamicHeight":9000.0,"minDynamicHeight":4.0},{"boxShadow":"none","widgetName":"Container2","borderColor":"transparent","isCanvas":true,"dynamicPropertyPathList":[{"key":"borderRadius"}],"displayName":"Container","iconSVG":"/static/media/icon.1977dca3.svg","topRow":21.0,"bottomRow":88.0,"parentRowSpace":10.0,"type":"CONTAINER_WIDGET","hideCard":false,"animateLoading":true,"parentColumnSpace":15.0625,"leftColumn":0.0,"children":[{"boxShadow":"none","widgetName":"Canvas2","displayName":"Canvas","topRow":0.0,"bottomRow":670.0,"parentRowSpace":1.0,"type":"CANVAS_WIDGET","canExtend":false,"hideCard":true,"minHeight":400.0,"parentColumnSpace":1.0,"leftColumn":0.0,"children":[{"boxShadow":"none","widgetName":"Tabs1","isCanvas":true,"displayName":"Tabs","iconSVG":"/static/media/icon.74a6d653.svg","topRow":0.0,"bottomRow":65.0,"parentRowSpace":10.0,"type":"TABS_WIDGET","hideCard":false,"shouldScrollContents":false,"animateLoading":true,"parentColumnSpace":14.75,"dynamicTriggerPathList":[],"leftColumn":0.0,"dynamicBindingPathList":[{"key":"accentColor"}],"children":[{"tabId":"tab1","boxShadow":"none","widgetName":"Canvas3","displayName":"Canvas","topRow":0.0,"bottomRow":610.0,"parentRowSpace":1.0,"type":"CANVAS_WIDGET","canExtend":true,"hideCard":true,"shouldScrollContents":false,"minHeight":400.0,"parentColumnSpace":1.0,"dynamicTriggerPathList":[],"leftColumn":0.0,"dynamicBindingPathList":[],"children":[{"boxShadow":"0px 0px 2px 1.5px rgba(0, 0, 0, 0.25)","mobileBottomRow":4.0,"widgetName":"PopUp_Button","onClick":"{{storeValue('progressstatus','0');showModal('FileUpload_Modal');EAttachments_Select.run({\"EId\":Estimate_Table.selectedRow.EId});storeValue('ActualFileName','');storeValue('ESalesId',Estimate_Table.selectedRow.Id);storeValue('statename','FileCheck');storeValue('progressstatus',0);}}  /","buttonColor":"{{appsmith.theme.colors.primaryColor}}","dynamicPropertyPathList":[{"key":"isDisabled"},{"key":"onClick"},{"key":"boxShadow"},{"key":"isVisible"}],"displayName":"Icon button","iconSVG":"/static/media/icon.80fc7466c0d7181ec0271de7fda795ec.svg","searchTags":["click","submit"],"topRow":0.0,"bottomRow":4.0,"tooltip":"Upload Estimate Files","parentRowSpace":10.0,"type":"ICON_BUTTON_WIDGET","hideCard":false,"mobileRightColumn":62.0,"animateLoading":false,"parentColumnSpace":17.625,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":18.0,"dynamicBindingPathList":[{"key":"buttonColor"},{"key":"isDisabled"},{"key":"isVisible"}],"isDisabled":"{{Estimate_Table.selectedRowIndex==-1}}","key":"dhazzocl7v","isDeprecated":false,"rightColumn":21.0,"iconName":"cloud-upload","widgetId":"j2no7imv9q","minWidth":50.0,"isVisible":"{{appsmith.store.currentStateName=='Review'}}","version":1.0,"parentId":"tf5lwkhdal","renderMode":"CANVAS","isLoading":false,"mobileTopRow":0.0,"responsiveBehavior":"hug","borderRadius":"0.375rem","mobileLeftColumn":58.0,"buttonVariant":"SECONDARY"},{"boxShadow":"none","widgetName":"EstimateUpdate_Modal","isCanvas":true,"displayName":"Modal","iconSVG":"/static/media/icon.4975978e.svg","topRow":52.0,"bottomRow":52.0,"parentRowSpace":1.0,"type":"MODAL_WIDGET","hideCard":false,"shouldScrollContents":true,"animateLoading":false,"parentColumnSpace":1.0,"dynamicTriggerPathList":[],"leftColumn":0.0,"dynamicBindingPathList":[],"children":[{"boxShadow":"none","widgetName":"Canvas3Copy","displayName":"Canvas","topRow":0.0,"bottomRow":490.0,"parentRowSpace":1.0,"type":"CANVAS_WIDGET","canExtend":true,"hideCard":true,"shouldScrollContents":false,"minHeight":494.0,"parentColumnSpace":1.0,"leftColumn":0.0,"children":[{"boxShadow":"none","widgetName":"Mod_Notes_Input","displayName":"Input","iconSVG":"/static/media/icon.9f505595.svg","topRow":33.0,"bottomRow":40.0,"parentRowSpace":10.0,"autoFocus":false,"type":"INPUT_WIDGET_V2","hideCard":false,"animateLoading":false,"parentColumnSpace":9.59375,"dynamicTriggerPathList":[],"resetOnSubmit":true,"leftColumn":28.0,"dynamicBindingPathList":[{"key":"defaultText"},{"key":"validation"},{"key":"accentColor"}],"labelStyle":"","inputType":"MULTI_LINE_TEXT","isDisabled":false,"key":"dx5km4ryjc","validation":"{{Mod_Notes_Input.text.length > 0}}","labelTextSize":"0.875rem","isRequired":true,"rightColumn":50.0,"dynamicHeight":"FIXED","widgetId":"syeuvcv8ul","accentColor":"{{appsmith.theme.colors.primaryColor}}","isVisible":true,"label":"","version":2.0,"parentId":"9rwj7be9hw","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","maxDynamicHeight":9000.0,"iconAlign":"left","defaultText":"{{Estimate_Table.selectedRow.Notes||\"\"}}","minDynamicHeight":4.0},{"boxShadow":"none","widgetName":"IconButton1","onClick":"{{closeModal('EstimateUpdate_Modal')}}","buttonColor":"#2E3D49","displayName":"Icon Button","iconSVG":"/static/media/icon.1a0c634a.svg","topRow":1.0,"bottomRow":5.0,"type":"ICON_BUTTON_WIDGET","hideCard":false,"animateLoading":false,"dynamicTriggerPathList":[],"leftColumn":56.0,"dynamicBindingPathList":[],"iconSize":24.0,"isDisabled":false,"key":"q17by22vn7","labelTextSize":"0.875rem","rightColumn":64.0,"iconName":"cross","widgetId":"fcrcl70lo4","isVisible":true,"version":1.0,"parentId":"9rwj7be9hw","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","buttonVariant":"TERTIARY"},{"boxShadow":"none","widgetName":"Text1","dynamicPropertyPathList":[{"key":"fontSize"}],"displayName":"Text","iconSVG":"/static/media/icon.97c59b52.svg","topRow":1.0,"bottomRow":5.0,"type":"TEXT_WIDGET","hideCard":false,"animateLoading":false,"dynamicTriggerPathList":[],"overflow":"NONE","fontFamily":"System Default","leftColumn":1.0,"dynamicBindingPathList":[{"key":"textColor"}],"truncateButtonColor":"#FFC13D","text":"Update Estimate Details ","key":"6avda98z82","labelTextSize":"0.875rem","rightColumn":41.0,"textAlign":"LEFT","dynamicHeight":"FIXED","widgetId":"ckq3bhczbx","isVisible":true,"fontStyle":"BOLD","textColor":"{{GlobalVariables.LabelColor}}","version":1.0,"parentId":"9rwj7be9hw","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","maxDynamicHeight":9000.0,"fontSize":"1.5rem","minDynamicHeight":4.0},{"boxShadow":"none","widgetName":"Button1","onClick":"{{closeModal('EstimateUpdate_Modal');GlobalVariables.resetForm([\"Estimate_Table\"])}}","buttonColor":"#33838f","dynamicPropertyPathList":[{"key":"onClick"}],"displayName":"Button","iconSVG":"/static/media/icon.cca02633.svg","topRow":43.0,"bottomRow":47.0,"type":"BUTTON_WIDGET","hideCard":false,"animateLoading":false,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":17.0,"dynamicBindingPathList":[],"text":"Cancel","isDisabled":false,"key":"3vnupimqgc","labelTextSize":"0.875rem","rightColumn":29.0,"isDefaultClickDisabled":true,"widgetId":"zxsma2xs1t","buttonStyle":"PRIMARY","isVisible":true,"recaptchaType":"V3","version":1.0,"parentId":"9rwj7be9hw","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","buttonVariant":"SECONDARY","placement":"CENTER"},{"boxShadow":"none","widgetName":"Submit_Button","onClick":"{{PageObjects.estimateUpdate(Mod_Estimate_Number_Input.text,Mod_Email_Input.text,Mod_CCEmail_Input.text,Mod_Notes_Input.text,Estimate_Table.selectedRow.EId)}}","buttonColor":"#33838f","dynamicPropertyPathList":[{"key":"onClick"},{"key":"isDisabled"}],"displayName":"Button","iconSVG":"/static/media/icon.cca02633.svg","topRow":43.0,"bottomRow":47.0,"type":"BUTTON_WIDGET","hideCard":false,"animateLoading":false,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":3.0,"dynamicBindingPathList":[{"key":"isDisabled"}],"text":"Submit","isDisabled":"{{GlobalVariables.disableCreateButton([Mod_Estimate_Number_Input, Mod_Email_Input, Mod_CCEmail_Input,Mod_Notes_Input])}}","key":"3vnupimqgc","labelTextSize":"0.875rem","rightColumn":15.0,"isDefaultClickDisabled":true,"widgetId":"7v645r7mb1","buttonStyle":"PRIMARY_BUTTON","isVisible":true,"recaptchaType":"V3","version":1.0,"parentId":"9rwj7be9hw","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","buttonVariant":"SECONDARY","placement":"CENTER"},{"boxShadow":"none","widgetName":"Mod_Estimate_Number_Input","displayName":"Input","iconSVG":"/static/media/icon.9f505595.svg","topRow":9.0,"bottomRow":13.0,"parentRowSpace":10.0,"autoFocus":false,"type":"INPUT_WIDGET_V2","hideCard":false,"animateLoading":false,"parentColumnSpace":9.59375,"dynamicTriggerPathList":[],"resetOnSubmit":true,"leftColumn":28.0,"dynamicBindingPathList":[{"key":"defaultText"},{"key":"validation"},{"key":"accentColor"}],"labelStyle":"","inputType":"TEXT","maxChars":"10","isDisabled":false,"key":"dx5km4ryjc","validation":"{{Mod_Estimate_Number_Input.text.length> 0 && Mod_Estimate_Number_Input.text.length <= 10}}","labelTextSize":"0.875rem","isRequired":true,"rightColumn":50.0,"dynamicHeight":"FIXED","widgetId":"nmhched2yy","accentColor":"{{appsmith.theme.colors.primaryColor}}","isVisible":true,"label":"","version":2.0,"parentId":"9rwj7be9hw","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","maxDynamicHeight":9000.0,"iconAlign":"left","defaultText":"{{Estimate_Table.selectedRow.EstimateNumber||\"\"}}","minDynamicHeight":4.0},{"boxShadow":"none","widgetName":"Mod_Email_Input","displayName":"Input","iconSVG":"/static/media/icon.9f505595.svg","topRow":15.0,"bottomRow":22.0,"parentRowSpace":10.0,"autoFocus":false,"type":"INPUT_WIDGET_V2","hideCard":false,"animateLoading":false,"parentColumnSpace":9.59375,"dynamicTriggerPathList":[],"resetOnSubmit":true,"leftColumn":28.0,"dynamicBindingPathList":[{"key":"defaultText"},{"key":"validation"},{"key":"accentColor"}],"labelStyle":"","inputType":"MULTI_LINE_TEXT","isDisabled":false,"key":"dx5km4ryjc","validation":"{{Mod_Email_Input.text.length > 0}}","labelTextSize":"0.875rem","isRequired":true,"rightColumn":50.0,"dynamicHeight":"FIXED","widgetId":"zo67wizi4a","accentColor":"{{appsmith.theme.colors.primaryColor}}","isVisible":true,"label":"","version":2.0,"parentId":"9rwj7be9hw","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","maxDynamicHeight":9000.0,"iconAlign":"left","defaultText":"{{Estimate_Table.selectedRow.EmailList||\"\"}}","minDynamicHeight":4.0},{"boxShadow":"none","widgetName":"Mod_CCEmail_Input","displayName":"Input","iconSVG":"/static/media/icon.9f505595.svg","topRow":24.0,"bottomRow":31.0,"parentRowSpace":10.0,"autoFocus":false,"type":"INPUT_WIDGET_V2","hideCard":false,"animateLoading":false,"parentColumnSpace":9.59375,"dynamicTriggerPathList":[],"resetOnSubmit":true,"leftColumn":28.0,"dynamicBindingPathList":[{"key":"defaultText"},{"key":"validation"},{"key":"accentColor"}],"labelStyle":"","inputType":"MULTI_LINE_TEXT","isDisabled":false,"key":"dx5km4ryjc","validation":"{{Mod_CCEmail_Input.text.length > 0}}","labelTextSize":"0.875rem","isRequired":true,"rightColumn":50.0,"dynamicHeight":"FIXED","widgetId":"nxbvaqr1b3","accentColor":"{{appsmith.theme.colors.primaryColor}}","isVisible":true,"label":"","version":2.0,"parentId":"9rwj7be9hw","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","maxDynamicHeight":9000.0,"iconAlign":"left","defaultText":"{{Estimate_Table.selectedRow.CCEmailList||\"\"}}","minDynamicHeight":4.0},{"boxShadow":"none","widgetName":"Text2","displayName":"Text","iconSVG":"/static/media/icon.97c59b52.svg","topRow":9.0,"bottomRow":13.0,"parentRowSpace":10.0,"type":"TEXT_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":9.59375,"dynamicTriggerPathList":[],"overflow":"NONE","fontFamily":"System Default","leftColumn":4.0,"dynamicBindingPathList":[{"key":"textColor"}],"truncateButtonColor":"#FFC13D","text":"Estimate #","key":"71yo2toqru","labelTextSize":"0.875rem","rightColumn":20.0,"textAlign":"LEFT","dynamicHeight":"FIXED","widgetId":"edliv3kagk","isVisible":true,"fontStyle":"","textColor":"{{GlobalVariables.LabelColor}}","version":1.0,"parentId":"9rwj7be9hw","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","maxDynamicHeight":9000.0,"fontSize":"0.875rem","minDynamicHeight":4.0},{"boxShadow":"none","widgetName":"Text3","displayName":"Text","iconSVG":"/static/media/icon.97c59b52.svg","topRow":17.0,"bottomRow":21.0,"parentRowSpace":10.0,"type":"TEXT_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":9.59375,"dynamicTriggerPathList":[],"overflow":"NONE","fontFamily":"System Default","leftColumn":4.0,"dynamicBindingPathList":[{"key":"textColor"}],"truncateButtonColor":"#FFC13D","text":"Email ","key":"71yo2toqru","labelTextSize":"0.875rem","rightColumn":20.0,"textAlign":"LEFT","dynamicHeight":"FIXED","widgetId":"mgnr1me02d","isVisible":true,"fontStyle":"","textColor":"{{GlobalVariables.LabelColor}}","version":1.0,"parentId":"9rwj7be9hw","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","maxDynamicHeight":9000.0,"fontSize":"0.875rem","minDynamicHeight":4.0},{"boxShadow":"none","widgetName":"Text4Copy","displayName":"Text","iconSVG":"/static/media/icon.97c59b52.svg","topRow":26.0,"bottomRow":30.0,"parentRowSpace":10.0,"type":"TEXT_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":9.59375,"dynamicTriggerPathList":[],"overflow":"NONE","fontFamily":"System Default","leftColumn":4.0,"dynamicBindingPathList":[{"key":"textColor"}],"truncateButtonColor":"#FFC13D","text":"CC Email ","key":"71yo2toqru","labelTextSize":"0.875rem","rightColumn":20.0,"textAlign":"LEFT","dynamicHeight":"FIXED","widgetId":"qn0arylkxd","isVisible":true,"fontStyle":"","textColor":"{{GlobalVariables.LabelColor}}","version":1.0,"parentId":"9rwj7be9hw","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","maxDynamicHeight":9000.0,"fontSize":"0.875rem","minDynamicHeight":4.0},{"widgetName":"Text7","dynamicPropertyPathList":[{"key":"textColor"}],"displayName":"Text","iconSVG":"/static/media/icon.97c59b52.svg","searchTags":["typography","paragraph"],"topRow":35.0,"bottomRow":39.0,"parentRowSpace":10.0,"type":"TEXT_WIDGET","hideCard":false,"animateLoading":false,"overflow":"NONE","fontFamily":"{{appsmith.theme.fontFamily.appFont}}","parentColumnSpace":9.59375,"dynamicTriggerPathList":[],"leftColumn":4.0,"dynamicBindingPathList":[{"key":"fontFamily"},{"key":"borderRadius"},{"key":"textColor"}],"shouldTruncate":false,"truncateButtonColor":"#FFC13D","text":"Notes","key":"dwmnk24n79","isDeprecated":false,"rightColumn":20.0,"textAlign":"LEFT","dynamicHeight":"FIXED","widgetId":"32ggju5wke","isVisible":true,"fontStyle":"","textColor":"{{GlobalVariables.LabelColor}}","version":1.0,"parentId":"9rwj7be9hw","renderMode":"CANVAS","isLoading":false,"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","maxDynamicHeight":9000.0,"fontSize":"0.875rem","minDynamicHeight":4.0}],"isDisabled":false,"key":"vh9jmsaoez","labelTextSize":"0.875rem","rightColumn":0.0,"detachFromLayout":true,"widgetId":"9rwj7be9hw","isVisible":true,"version":1.0,"parentId":"83qucdgq0y","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px"}],"key":"tw702ga681","height":494.0,"labelTextSize":"0.875rem","rightColumn":0.0,"detachFromLayout":true,"dynamicHeight":"FIXED","widgetId":"83qucdgq0y","canOutsideClickClose":true,"canEscapeKeyClose":true,"version":2.0,"parentId":"tf5lwkhdal","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","maxDynamicHeight":9000.0,"width":626.0,"minDynamicHeight":4.0},{"boxShadow":"none","widgetName":"Text4","borderColor":"","dynamicPropertyPathList":[{"key":"textColor"},{"key":"fontSize"}],"displayName":"Text","iconSVG":"/static/media/icon.97c59b52.svg","topRow":0.0,"bottomRow":5.0,"parentRowSpace":10.0,"type":"TEXT_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":14.75,"dynamicTriggerPathList":[],"overflow":"NONE","fontFamily":"System Default","leftColumn":0.0,"dynamicBindingPathList":[{"key":"textColor"},{"key":"text"}],"borderWidth":"5","truncateButtonColor":"#FFC13D","text":"Estimate in {{ appsmith.store.currentStateName }} state","key":"0l7d6pdzs3","labelTextSize":"0.875rem","rightColumn":17.0,"textAlign":"LEFT","dynamicHeight":"FIXED","widgetId":"4jbxzois7f","isVisible":true,"fontStyle":"ITALIC,BOLD","textColor":"{{ GlobalVariables.LabelColor }}","version":1.0,"parentId":"tf5lwkhdal","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","maxDynamicHeight":9000.0,"fontSize":"1.125rem","minDynamicHeight":4.0},{"boxShadow":"none","widgetName":"EstimateItem_Table","defaultPageSize":0.0,"columnOrder":["Id","EstimateId","Number","Description","Quantity","Amount","Deleted","customColumn1"],"isVisibleDownload":false,"dynamicPropertyPathList":[],"displayName":"Table","iconSVG":"/static/media/icon.db8a9cbd.svg","topRow":0.0,"bottomRow":33.0,"isSortable":true,"parentRowSpace":10.0,"type":"TABLE_WIDGET","defaultSelectedRow":"-1","hideCard":false,"animateLoading":false,"parentColumnSpace":14.4375,"dynamicTriggerPathList":[],"dynamicBindingPathList":[{"key":"primaryColumns.Description.computedValue"},{"key":"primaryColumns.Amount.computedValue"},{"key":"tableData"},{"key":"primaryColumns.Id.computedValue"},{"key":"primaryColumns.EstimateId.computedValue"},{"key":"primaryColumns.Number.computedValue"},{"key":"primaryColumns.Quantity.computedValue"},{"key":"primaryColumns.Deleted.computedValue"},{"key":"accentColor"},{"key":"primaryColumns.customColumn1.computedValue"},{"key":"derivedColumns.customColumn1.computedValue"}],"leftColumn":22.0,"primaryColumns":{"Description":{"index":3.0,"width":150.0,"id":"Description","horizontalAlignment":"LEFT","verticalAlignment":"CENTER","columnType":"text","textSize":"0.875rem","enableFilter":true,"enableSort":true,"isVisible":true,"isDisabled":false,"isCellVisible":true,"isDerived":false,"label":"Description","computedValue":"{{EstimateItem_Table.sanitizedTableData.map((currentRow) => ( currentRow.Description))}}","borderRadius":"0px","boxShadow":"none"},"Amount":{"index":3.0,"width":150.0,"id":"Amount","horizontalAlignment":"LEFT","verticalAlignment":"CENTER","columnType":"text","textSize":"0.875rem","enableFilter":true,"enableSort":true,"isVisible":true,"isDisabled":false,"isCellVisible":true,"isDerived":false,"label":"Amount","computedValue":"{{EstimateItem_Table.sanitizedTableData.map((currentRow) => ( currentRow.Amount))}}","borderRadius":"0px","boxShadow":"none"},"Id":{"index":0.0,"width":150.0,"id":"Id","horizontalAlignment":"LEFT","verticalAlignment":"CENTER","columnType":"text","textSize":"0.875rem","enableFilter":true,"enableSort":true,"isVisible":false,"isDisabled":false,"isCellVisible":true,"isDerived":false,"label":"Id","computedValue":"{{EstimateItem_Table.sanitizedTableData.map((currentRow) => ( currentRow.Id))}}","borderRadius":"0px","boxShadow":"none"},"EstimateId":{"index":1.0,"width":150.0,"id":"EstimateId","horizontalAlignment":"LEFT","verticalAlignment":"CENTER","columnType":"text","textSize":"0.875rem","enableFilter":true,"enableSort":true,"isVisible":false,"isDisabled":false,"isCellVisible":true,"isDerived":false,"label":"EstimateId","computedValue":"{{EstimateItem_Table.sanitizedTableData.map((currentRow) => ( currentRow.EstimateId))}}","borderRadius":"0px","boxShadow":"none"},"Number":{"index":2.0,"width":150.0,"id":"Number","horizontalAlignment":"LEFT","verticalAlignment":"CENTER","columnType":"text","textSize":"0.875rem","enableFilter":true,"enableSort":true,"isVisible":true,"isDisabled":false,"isCellVisible":true,"isDerived":false,"label":"E.Item#","computedValue":"{{EstimateItem_Table.sanitizedTableData.map((currentRow) => ( currentRow.Number))}}","borderRadius":"0px","boxShadow":"none"},"Quantity":{"index":4.0,"width":150.0,"id":"Quantity","horizontalAlignment":"LEFT","verticalAlignment":"CENTER","columnType":"text","textSize":"0.875rem","enableFilter":true,"enableSort":true,"isVisible":true,"isDisabled":false,"isCellVisible":true,"isDerived":false,"label":"Quantity","computedValue":"{{EstimateItem_Table.sanitizedTableData.map((currentRow) => ( currentRow.Quantity))}}","borderRadius":"0px","boxShadow":"none"},"Deleted":{"index":6.0,"width":150.0,"id":"Deleted","horizontalAlignment":"LEFT","verticalAlignment":"CENTER","columnType":"text","textSize":"0.875rem","enableFilter":true,"enableSort":true,"isVisible":false,"isDisabled":false,"isCellVisible":true,"isDerived":false,"label":"Deleted","computedValue":"{{EstimateItem_Table.sanitizedTableData.map((currentRow) => ( currentRow.Deleted))}}","borderRadius":"0px","boxShadow":"none"},"customColumn1":{"index":7.0,"width":150.0,"id":"customColumn1","columnType":"text","enableFilter":true,"enableSort":true,"isVisible":true,"isDisabled":false,"isCellVisible":true,"isDerived":true,"label":"Total","computedValue":"{{EstimateItem_Table.sanitizedTableData.map((currentRow) => ( currentRow.Amount* currentRow.Quantity))}}","buttonStyle":"rgb(3, 179, 101)","labelColor":"#FFFFFF"}},"delimiter":",","key":"r65rbl7l5u","derivedColumns":{"customColumn1":{"index":7.0,"width":150.0,"id":"customColumn1","columnType":"text","enableFilter":true,"enableSort":true,"isVisible":true,"isDisabled":false,"isCellVisible":true,"isDerived":true,"label":"Total","computedValue":"{{EstimateItem_Table.sanitizedTableData.map((currentRow) => ( currentRow.Amount* currentRow.Quantity))}}","buttonStyle":"rgb(3, 179, 101)","labelColor":"#FFFFFF"}},"labelTextSize":"0.875rem","rightColumn":64.0,"textSize":"0.875rem","widgetId":"7it8ppnt2m","accentColor":"{{appsmith.theme.colors.primaryColor}}","isVisibleFilters":false,"tableData":"{{Estimate_Table.selectedRowIndex==-1?\"\":\nEstimateItem_Select.data}}","isVisible":true,"label":"Data","searchKey":"","enableClientSideSearch":true,"version":3.0,"totalRecordsCount":0.0,"parentId":"tf5lwkhdal","renderMode":"CANVAS","isLoading":false,"horizontalAlignment":"LEFT","isVisibleSearch":true,"childStylesheet":{"button":{"buttonColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"menuButton":{"menuColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"iconButton":{"menuColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"}},"borderRadius":"0px","isVisiblePagination":true,"verticalAlignment":"CENTER","columnSizeMap":{"task":245.0,"step":62.0,"status":75.0,"Qty":71.0,"Description":214.0,"Item_":71.00000000000001,"Number":78.0,"Quantity":123.0,"Amount":188.0,"Total":72.0}},{"boxShadow":"none","isVisibleDownload":false,"iconSVG":"/static/media/icon.db8a9cbd.svg","topRow":6.0,"isSortable":true,"type":"TABLE_WIDGET","animateLoading":false,"dynamicBindingPathList":[{"key":"tableData"},{"key":"primaryColumns.EstimateNumber.computedValue"},{"key":"primaryColumns.SalesNumber.computedValue"},{"key":"accentColor"},{"key":"primaryColumns.EId.computedValue"},{"key":"primaryColumns.EmailList.computedValue"},{"key":"primaryColumns.CCEmailList.computedValue"},{"key":"primaryColumns.Notes.computedValue"},{"key":"primaryColumns.Id.computedValue"},{"key":"primaryColumns.Description.computedValue"}],"leftColumn":0.0,"delimiter":",","accentColor":"{{appsmith.theme.colors.primaryColor}}","isVisibleFilters":false,"isVisible":true,"enableClientSideSearch":true,"version":3.0,"totalRecordsCount":0.0,"isLoading":false,"childStylesheet":{"button":{"buttonColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"menuButton":{"menuColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"iconButton":{"menuColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"}},"borderRadius":"0px","columnSizeMap":{"task":245.0,"step":62.0,"status":75.0,"Number":94.0,"SalesNumber":99.0,"EstimateNumber":106.0},"widgetName":"Estimate_Table","defaultPageSize":0.0,"columnOrder":["EId","EstimateNumber","SalesNumber","Description","Notes","CCEmailList","Id","EmailList"],"dynamicPropertyPathList":[{"key":"onRowSelected"}],"displayName":"Table","bottomRow":34.0,"parentRowSpace":10.0,"defaultSelectedRow":"-1","hideCard":false,"parentColumnSpace":16.75,"dynamicTriggerPathList":[{"key":"onRowSelected"}],"primaryColumns":{"EstimateNumber":{"index":1.0,"width":150.0,"id":"EstimateNumber","horizontalAlignment":"LEFT","verticalAlignment":"CENTER","columnType":"text","textSize":"0.875rem","enableFilter":true,"enableSort":true,"isVisible":true,"isDisabled":false,"isCellVisible":true,"isDerived":false,"label":"Estimate #","computedValue":"{{Estimate_Table.sanitizedTableData.map((currentRow) => ( currentRow.EstimateNumber))}}","borderRadius":"0px","boxShadow":"none"},"SalesNumber":{"index":4.0,"width":150.0,"id":"SalesNumber","horizontalAlignment":"LEFT","verticalAlignment":"CENTER","columnType":"text","textSize":"0.875rem","enableFilter":true,"enableSort":true,"isVisible":true,"isDisabled":false,"isCellVisible":true,"isDerived":false,"label":"Sales #","computedValue":"{{Estimate_Table.sanitizedTableData.map((currentRow) => ( currentRow.SalesNumber))}}","borderRadius":"0px","boxShadow":"none"},"EId":{"index":0.0,"width":150.0,"id":"EId","horizontalAlignment":"LEFT","verticalAlignment":"CENTER","columnType":"text","textColor":"","textSize":"0.875rem","enableFilter":true,"enableSort":true,"isVisible":false,"isDisabled":false,"isCellVisible":true,"isDerived":false,"label":"EId","computedValue":"{{Estimate_Table.sanitizedTableData.map((currentRow) => ( currentRow.EId))}}","cellBackground":""},"EmailList":{"index":2.0,"width":150.0,"id":"EmailList","horizontalAlignment":"LEFT","verticalAlignment":"CENTER","columnType":"text","textColor":"","textSize":"0.875rem","enableFilter":true,"enableSort":true,"isVisible":true,"isDisabled":false,"isCellVisible":true,"isDerived":false,"label":"EmailList","computedValue":"{{Estimate_Table.sanitizedTableData.map((currentRow) => ( currentRow.EmailList))}}","cellBackground":""},"CCEmailList":{"index":3.0,"width":150.0,"id":"CCEmailList","horizontalAlignment":"LEFT","verticalAlignment":"CENTER","columnType":"text","textColor":"","textSize":"0.875rem","enableFilter":true,"enableSort":true,"isVisible":true,"isDisabled":false,"isCellVisible":true,"isDerived":false,"label":"CCEmailList","computedValue":"{{Estimate_Table.sanitizedTableData.map((currentRow) => ( currentRow.CCEmailList))}}","cellBackground":""},"Notes":{"index":4.0,"width":150.0,"id":"Notes","horizontalAlignment":"LEFT","verticalAlignment":"CENTER","columnType":"text","textColor":"","textSize":"0.875rem","enableFilter":true,"enableSort":true,"isVisible":true,"isDisabled":false,"isCellVisible":true,"isDerived":false,"label":"Notes","computedValue":"{{Estimate_Table.sanitizedTableData.map((currentRow) => ( currentRow.Notes))}}","cellBackground":""},"Id":{"index":6.0,"width":150.0,"id":"Id","horizontalAlignment":"LEFT","verticalAlignment":"CENTER","columnType":"text","textColor":"","textSize":"0.875rem","enableFilter":true,"enableSort":true,"isVisible":true,"isDisabled":false,"isCellVisible":true,"isDerived":false,"label":"Id","computedValue":"{{Estimate_Table.sanitizedTableData.map((currentRow) => ( currentRow.Id))}}","cellBackground":""},"Description":{"index":7.0,"width":150.0,"id":"Description","horizontalAlignment":"LEFT","verticalAlignment":"CENTER","columnType":"text","textColor":"","textSize":"0.875rem","enableFilter":true,"enableSort":true,"isVisible":true,"isDisabled":false,"isCellVisible":true,"isDerived":false,"label":"Description","computedValue":"{{Estimate_Table.sanitizedTableData.map((currentRow) => ( currentRow.Description))}}","cellBackground":""}},"onRowSelected":"{{EstimateItem_Select.run({'estimateId':Estimate_Table.selectedRow.EId})}}","key":"9nasfdvw9z","derivedColumns":{},"labelTextSize":"0.875rem","rightColumn":22.0,"textSize":"0.875rem","widgetId":"915wqpvwof","tableData":"{{Estimate_Select.data}}","label":"Data","searchKey":"","parentId":"tf5lwkhdal","renderMode":"CANVAS","horizontalAlignment":"LEFT","isVisibleSearch":true,"isVisiblePagination":true,"verticalAlignment":"CENTER"},{"boxShadow":"none","widgetName":"EstimateDetails_Container","borderColor":"transparent","isCanvas":true,"dynamicPropertyPathList":[{"key":"borderRadius"}],"displayName":"Container","iconSVG":"/static/media/icon.1977dca3.svg","topRow":34.0,"bottomRow":59.0,"parentRowSpace":10.0,"type":"CONTAINER_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":10.78125,"dynamicTriggerPathList":[],"leftColumn":0.0,"dynamicBindingPathList":[],"children":[{"boxShadow":"none","widgetName":"Canvas5","displayName":"Canvas","topRow":0.0,"bottomRow":250.0,"parentRowSpace":1.0,"type":"CANVAS_WIDGET","canExtend":false,"hideCard":true,"minHeight":400.0,"parentColumnSpace":1.0,"leftColumn":0.0,"children":[{"boxShadow":"none","widgetName":"Email_Input","displayName":"Input","iconSVG":"/static/media/icon.9f505595.svg","topRow":15.0,"bottomRow":24.0,"parentRowSpace":10.0,"autoFocus":false,"type":"INPUT_WIDGET_V2","hideCard":false,"animateLoading":false,"parentColumnSpace":16.125,"dynamicTriggerPathList":[],"resetOnSubmit":true,"leftColumn":0.0,"dynamicBindingPathList":[{"key":"validation"},{"key":"defaultText"},{"key":"accentColor"}],"labelPosition":"Top","labelStyle":"","labelTextColor":"#008695","inputType":"MULTI_LINE_TEXT","isDisabled":true,"key":"z664xfowd2","validation":"{{Email_Input.text.length> 0}}","labelTextSize":"0.875rem","isRequired":true,"rightColumn":20.0,"dynamicHeight":"FIXED","widgetId":"go42rme94i","accentColor":"{{appsmith.theme.colors.primaryColor}}","isVisible":true,"label":"Email","version":2.0,"parentId":"ywjb67lxlr","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","maxDynamicHeight":9000.0,"shouldAllowAutofill":false,"iconAlign":"left","defaultText":"{{Estimate_Table.selectedRow.EmailList||\"\"}}","minDynamicHeight":4.0},{"boxShadow":"none","widgetName":"Estimate_Number_Input","displayName":"Input","iconSVG":"/static/media/icon.9f505595.svg","topRow":1.0,"bottomRow":5.0,"parentRowSpace":10.0,"autoFocus":false,"type":"INPUT_WIDGET_V2","hideCard":false,"animateLoading":false,"parentColumnSpace":16.125,"dynamicTriggerPathList":[],"resetOnSubmit":true,"leftColumn":0.0,"dynamicBindingPathList":[{"key":"validation"},{"key":"defaultText"},{"key":"accentColor"}],"labelPosition":"Left","labelStyle":"","labelTextColor":"#008695","inputType":"TEXT","isDisabled":true,"key":"z664xfowd2","validation":"{{Estimate_Number_Input.text.length> 0}}","labelTextSize":"0.875rem","isRequired":true,"rightColumn":16.0,"dynamicHeight":"FIXED","widgetId":"4w13y0vy1n","accentColor":"{{appsmith.theme.colors.primaryColor}}","isVisible":true,"label":"Estimate#","version":2.0,"parentId":"ywjb67lxlr","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","maxDynamicHeight":9000.0,"iconAlign":"left","defaultText":"{{Estimate_Table.selectedRow.EstimateNumber||\"\"}}","minDynamicHeight":4.0},{"boxShadow":"none","widgetName":"CCEmail_Input","displayName":"Input","iconSVG":"/static/media/icon.9f505595.svg","topRow":15.0,"bottomRow":24.0,"parentRowSpace":10.0,"autoFocus":false,"type":"INPUT_WIDGET_V2","hideCard":false,"animateLoading":false,"parentColumnSpace":16.125,"dynamicTriggerPathList":[],"resetOnSubmit":true,"leftColumn":20.0,"dynamicBindingPathList":[{"key":"validation"},{"key":"defaultText"},{"key":"accentColor"}],"labelPosition":"Top","labelStyle":"","labelTextColor":"#008695","inputType":"MULTI_LINE_TEXT","isDisabled":true,"key":"z664xfowd2","validation":"{{CCEmail_Input.text.length> 0}}","labelTextSize":"0.875rem","isRequired":true,"rightColumn":40.0,"dynamicHeight":"FIXED","widgetId":"zjk365q0d0","accentColor":"{{appsmith.theme.colors.primaryColor}}","isVisible":true,"label":"CC Email","version":2.0,"parentId":"ywjb67lxlr","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","maxDynamicHeight":9000.0,"shouldAllowAutofill":false,"iconAlign":"left","defaultText":"{{Estimate_Table.selectedRow.CCEmailList||\"\"}}","minDynamicHeight":4.0},{"boxShadow":"none","widgetName":"EstimateItem_Amount_Input","displayName":"Input","iconSVG":"/static/media/icon.9f505595.svg","topRow":7.0,"bottomRow":14.0,"parentRowSpace":10.0,"autoFocus":false,"type":"INPUT_WIDGET_V2","hideCard":false,"animateLoading":false,"parentColumnSpace":16.125,"dynamicTriggerPathList":[],"resetOnSubmit":true,"leftColumn":52.0,"dynamicBindingPathList":[{"key":"validation"},{"key":"defaultText"},{"key":"accentColor"}],"labelPosition":"Top","labelStyle":"","labelTextColor":"#008695","inputType":"TEXT","isDisabled":false,"key":"z664xfowd2","validation":"{{EstimateItem_Amount_Input.text.length> 0}}","labelTextSize":"0.875rem","isRequired":true,"rightColumn":64.0,"dynamicHeight":"FIXED","widgetId":"h0xfy4exyy","accentColor":"{{appsmith.theme.colors.primaryColor}}","isVisible":true,"label":"Amount","version":2.0,"parentId":"ywjb67lxlr","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","maxDynamicHeight":9000.0,"iconAlign":"left","defaultText":"{{EstimateItem_Table.selectedRowIndex == -1 ? \"\" : EstimateItem_Table.selectedRow.Amount}}","minDynamicHeight":4.0},{"boxShadow":"none","widgetName":"EstimateItem_Quantity_Input","displayName":"Input","iconSVG":"/static/media/icon.9f505595.svg","topRow":7.0,"bottomRow":14.0,"parentRowSpace":10.0,"autoFocus":false,"type":"INPUT_WIDGET_V2","hideCard":false,"animateLoading":false,"parentColumnSpace":16.125,"dynamicTriggerPathList":[],"resetOnSubmit":true,"leftColumn":38.0,"dynamicBindingPathList":[{"key":"validation"},{"key":"defaultText"},{"key":"accentColor"}],"labelPosition":"Top","labelStyle":"","labelTextColor":"#008695","inputType":"TEXT","isDisabled":false,"key":"z664xfowd2","validation":"{{EstimateItem_Quantity_Input.text.length> 0 && parseFloat(EstimateItem_Quantity_Input.text)>=0}}","labelTextSize":"0.875rem","isRequired":true,"rightColumn":51.0,"dynamicHeight":"FIXED","widgetId":"j1znz0wwq5","accentColor":"{{appsmith.theme.colors.primaryColor}}","isVisible":true,"label":"Quantity","version":2.0,"parentId":"ywjb67lxlr","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","maxDynamicHeight":9000.0,"iconAlign":"left","defaultText":"{{EstimateItem_Table.selectedRowIndex == -1 ? \"\" : EstimateItem_Table.selectedRow.Quantity}}","minDynamicHeight":4.0},{"boxShadow":"none","widgetName":"EstimateItem_Number_Input","displayName":"Input","iconSVG":"/static/media/icon.9f505595.svg","topRow":7.0,"bottomRow":14.0,"parentRowSpace":10.0,"autoFocus":false,"type":"INPUT_WIDGET_V2","hideCard":false,"animateLoading":false,"parentColumnSpace":16.125,"dynamicTriggerPathList":[],"resetOnSubmit":true,"leftColumn":23.0,"dynamicBindingPathList":[{"key":"validation"},{"key":"defaultText"},{"key":"accentColor"}],"labelPosition":"Top","labelStyle":"","labelTextColor":"#008695","inputType":"TEXT","isDisabled":false,"key":"z664xfowd2","validation":"{{EstimateItem_Number_Input.text.length> 0 && EstimateItem_Number_Input.text.length <= 10}}","labelTextSize":"0.875rem","isRequired":true,"rightColumn":37.0,"dynamicHeight":"FIXED","widgetId":"na5msgkyv6","accentColor":"{{appsmith.theme.colors.primaryColor}}","isVisible":true,"label":"Estimate Item#","version":2.0,"parentId":"ywjb67lxlr","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","maxDynamicHeight":9000.0,"iconAlign":"left","defaultText":"{{EstimateItem_Table.selectedRowIndex == -1 ? \"\" : EstimateItem_Table.selectedRow.Number}}","minDynamicHeight":4.0},{"boxShadow":"none","widgetName":"EstimateItem_Description_Input","displayName":"Input","iconSVG":"/static/media/icon.9f505595.svg","topRow":15.0,"bottomRow":24.0,"parentRowSpace":10.0,"autoFocus":false,"type":"INPUT_WIDGET_V2","hideCard":false,"animateLoading":false,"parentColumnSpace":16.125,"dynamicTriggerPathList":[],"resetOnSubmit":true,"leftColumn":40.0,"dynamicBindingPathList":[{"key":"validation"},{"key":"defaultText"},{"key":"accentColor"}],"labelPosition":"Top","labelStyle":"","labelTextColor":"#008695","inputType":"MULTI_LINE_TEXT","isDisabled":false,"key":"z664xfowd2","validation":"{{EstimateItem_Number_Input.text.length> 0}}","labelTextSize":"0.875rem","isRequired":true,"rightColumn":64.0,"dynamicHeight":"FIXED","widgetId":"ziv8fph1qn","accentColor":"{{appsmith.theme.colors.primaryColor}}","isVisible":true,"label":"Description","version":2.0,"parentId":"ywjb67lxlr","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","maxDynamicHeight":9000.0,"shouldAllowAutofill":false,"iconAlign":"left","defaultText":"{{EstimateItem_Table.selectedRowIndex == -1 ? \"\" : EstimateItem_Table.selectedRow.Description}}","minDynamicHeight":4.0},{"boxShadow":"none","widgetName":"Estimate_Notes","displayName":"Input","iconSVG":"/static/media/icon.9f505595.svg","searchTags":["form","text input","number","textarea"],"topRow":5.0,"bottomRow":14.0,"parentRowSpace":10.0,"labelWidth":"2","autoFocus":false,"type":"INPUT_WIDGET_V2","hideCard":false,"animateLoading":false,"parentColumnSpace":17.0,"dynamicTriggerPathList":[],"resetOnSubmit":true,"leftColumn":0.0,"dynamicBindingPathList":[{"key":"accentColor"},{"key":"borderRadius"},{"key":"defaultText"}],"labelPosition":"Top","labelStyle":"","inputType":"MULTI_LINE_TEXT","isDisabled":true,"key":"uiypg6wv4d","labelTextSize":"0.875rem","isRequired":true,"isDeprecated":false,"rightColumn":22.0,"dynamicHeight":"FIXED","widgetId":"ym41i01bij","accentColor":"{{appsmith.theme.colors.primaryColor}}","isVisible":true,"label":"Note","version":2.0,"parentId":"ywjb67lxlr","labelAlignment":"left","renderMode":"CANVAS","isLoading":false,"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","maxDynamicHeight":9000.0,"iconAlign":"left","defaultText":"{{Estimate_Table.selectedRow.Notes||\"\"}}","minDynamicHeight":4.0},{"boxShadow":"0px 0px 4px 3px rgba(0, 0, 0, 0.25)","widgetName":"Estimate_Update_Button","onClick":"{{showModal('EstimateUpdate_Modal')}}","buttonColor":"#008695","dynamicPropertyPathList":[{"key":"isDisabled"},{"key":"onClick"},{"key":"boxShadow"}],"displayName":"Icon Button","iconSVG":"/static/media/icon.1a0c634a.svg","topRow":1.0,"bottomRow":5.0,"parentRowSpace":10.0,"type":"ICON_BUTTON_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":5.3359375,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":19.0,"dynamicBindingPathList":[{"key":"isDisabled"}],"isDisabled":"{{Estimate_Table.selectedRowIndex == -1 }}","key":"wqh17u5h8b","labelTextSize":"0.875rem","rightColumn":22.0,"iconName":"edit","widgetId":"bgvf2ej76t","isVisible":true,"version":1.0,"parentId":"ywjb67lxlr","renderMode":"CANVAS","isLoading":false,"borderRadius":"0.375rem","buttonVariant":"TERTIARY"},{"boxShadow":"none","widgetName":"EstimateItem_Buttons_Container","borderColor":"transparent","isCanvas":true,"dynamicPropertyPathList":[{"key":"borderRadius"}],"displayName":"Container","iconSVG":"/static/media/icon.1977dca3.svg","topRow":0.0,"bottomRow":6.0,"parentRowSpace":10.0,"type":"CONTAINER_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":13.5732421875,"dynamicTriggerPathList":[],"leftColumn":45.0,"dynamicBindingPathList":[],"children":[{"boxShadow":"none","widgetName":"SalesDetails_Buttons_CanvasCopy","displayName":"Canvas","topRow":0.0,"bottomRow":60.0,"parentRowSpace":1.0,"type":"CANVAS_WIDGET","canExtend":false,"hideCard":true,"minHeight":400.0,"parentColumnSpace":1.0,"leftColumn":0.0,"dynamicBindingPathList":[],"children":[{"boxShadow":"0px 0px 4px 3px rgba(0, 0, 0, 0.25)","widgetName":"EstimateItem_Reset_Button","onClick":"{{ GlobalVariables.resetForm([\"Estimate_Number_Input\",\"EstimateItem_Table\",\"EstimateDetails_Container\",\"Estimate_Table\"]) }}","buttonColor":"#008695","dynamicPropertyPathList":[{"key":"onClick"},{"key":"boxShadow"}],"displayName":"Icon Button","iconSVG":"/static/media/icon.1a0c634a.svg","topRow":0.0,"bottomRow":4.0,"parentRowSpace":10.0,"type":"ICON_BUTTON_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":15.0625,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":26.0,"dynamicBindingPathList":[],"isDisabled":false,"key":"x5byygbcp7","labelTextSize":"0.875rem","rightColumn":31.0,"iconName":"reset","widgetId":"a3t7789sq2","isVisible":true,"version":1.0,"parentId":"e77zcsgzk3","renderMode":"CANVAS","isLoading":false,"borderRadius":"0.375rem","buttonVariant":"TERTIARY"},{"boxShadow":"0px 0px 4px 3px rgba(0, 0, 0, 0.25)","widgetName":"EstimateItem_Create_Button","onClick":"{{PageObjects.insertEstimateItem(Estimate_Table.selectedRow.EId,EstimateItem_Number_Input.text,EstimateItem_Description_Input.text,EstimateItem_Quantity_Input.text,EstimateItem_Amount_Input.text)}}","buttonColor":"#008695","dynamicPropertyPathList":[{"key":"isDisabled"},{"key":"onClick"},{"key":"boxShadow"}],"displayName":"Icon Button","iconSVG":"/static/media/icon.1a0c634a.svg","topRow":0.0,"bottomRow":4.0,"parentRowSpace":10.0,"type":"ICON_BUTTON_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":5.3359375,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":37.0,"dynamicBindingPathList":[{"key":"isDisabled"}],"isDisabled":"{{GlobalVariables.disableCreateButton([EstimateItem_Number_Input, EstimateItem_Quantity_Input, EstimateItem_Amount_Input, EstimateItem_Description_Input]) || Estimate_Table.selectedRowIndex == -1}}","key":"wqh17u5h8b","labelTextSize":"0.875rem","rightColumn":41.0,"iconName":"plus","widgetId":"erdejqcwlh","isVisible":true,"version":1.0,"parentId":"e77zcsgzk3","renderMode":"CANVAS","isLoading":false,"borderRadius":"0.375rem","buttonVariant":"TERTIARY"},{"boxShadow":"0px 0px 4px 3px rgba(0, 0, 0, 0.25)","widgetName":"EstimateItem_Update_Button","onClick":"{{PageObjects.updateEstimateItem(Estimate_Table.selectedRow.EId,EstimateItem_Number_Input.text,EstimateItem_Description_Input.text,EstimateItem_Quantity_Input.text,EstimateItem_Amount_Input.text,EstimateItem_Table.selectedRow.Id)}}","buttonColor":"#008695","dynamicPropertyPathList":[{"key":"isDisabled"},{"key":"onClick"},{"key":"boxShadow"}],"displayName":"Icon Button","iconSVG":"/static/media/icon.1a0c634a.svg","topRow":0.0,"bottomRow":4.0,"parentRowSpace":10.0,"type":"ICON_BUTTON_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":5.3359375,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":47.0,"dynamicBindingPathList":[{"key":"isDisabled"}],"isDisabled":"{{GlobalVariables.disableUpdateButton([EstimateItem_Number_Input, EstimateItem_Quantity_Input, EstimateItem_Amount_Input, EstimateItem_Description_Input], EstimateItem_Table)}}","key":"wqh17u5h8b","labelTextSize":"0.875rem","rightColumn":52.0,"iconName":"edit","widgetId":"7fhu7o7k18","isVisible":true,"version":1.0,"parentId":"e77zcsgzk3","renderMode":"CANVAS","isLoading":false,"borderRadius":"0.375rem","buttonVariant":"TERTIARY"},{"boxShadow":"0px 0px 4px 3px rgba(0, 0, 0, 0.25)","widgetName":"EstimateItem_Delete_Button","onClick":"{{PageObjects.deleteEstimateItem(Estimate_Table.selectedRow.EId,EstimateItem_Table.selectedRow.Id)}}","buttonColor":"#008695","dynamicPropertyPathList":[{"key":"isDisabled"},{"key":"onClick"},{"key":"boxShadow"}],"displayName":"Icon Button","iconSVG":"/static/media/icon.1a0c634a.svg","topRow":0.0,"bottomRow":4.0,"parentRowSpace":10.0,"type":"ICON_BUTTON_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":5.3359375,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":58.0,"dynamicBindingPathList":[{"key":"isDisabled"}],"isDisabled":"{{ GlobalVariables.disableDeleteButton(EstimateItem_Table) }}","key":"wqh17u5h8b","labelTextSize":"0.875rem","rightColumn":62.0,"iconName":"trash","widgetId":"eb1vhslh5u","isVisible":true,"version":1.0,"parentId":"e77zcsgzk3","renderMode":"CANVAS","isLoading":false,"borderRadius":"0.375rem","buttonVariant":"TERTIARY"}],"key":"62kn4szsbb","labelTextSize":"0.875rem","rightColumn":325.7578125,"detachFromLayout":true,"widgetId":"e77zcsgzk3","containerStyle":"none","isVisible":true,"version":1.0,"parentId":"znlji9ofep","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px"}],"borderWidth":"0","key":"zkrysm8hzk","labelTextSize":"0.875rem","backgroundColor":"#FFFFFF","rightColumn":64.0,"dynamicHeight":"FIXED","widgetId":"znlji9ofep","containerStyle":"card","isVisible":true,"version":1.0,"parentId":"ywjb67lxlr","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","maxDynamicHeight":9000.0,"minDynamicHeight":4.0}],"key":"aql3osxzap","labelTextSize":"0.875rem","rightColumn":258.75,"detachFromLayout":true,"widgetId":"ywjb67lxlr","containerStyle":"none","isVisible":true,"version":1.0,"parentId":"gw84yyu2jf","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px"}],"borderWidth":"0","key":"9yezib4kof","labelTextSize":"0.875rem","backgroundColor":"#FFFFFF","rightColumn":64.0,"dynamicHeight":"FIXED","widgetId":"gw84yyu2jf","containerStyle":"card","isVisible":true,"version":1.0,"parentId":"tf5lwkhdal","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","maxDynamicHeight":9000.0,"minDynamicHeight":4.0}],"isDisabled":false,"key":"ck656xey1j","labelTextSize":"0.875rem","tabName":"Estimate Details","rightColumn":354.0,"detachFromLayout":true,"widgetId":"tf5lwkhdal","isVisible":true,"version":1.0,"parentId":"lqsy7neqm3","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px"}],"key":"s4m69sgoxe","labelTextSize":"0.875rem","rightColumn":64.0,"dynamicHeight":"FIXED","widgetId":"lqsy7neqm3","accentColor":"{{appsmith.theme.colors.primaryColor}}","defaultTab":"Estimate Details","shouldShowTabs":true,"tabsObj":{"tab1":{"label":"Estimate Details","id":"tab1","widgetId":"tf5lwkhdal","isVisible":true,"index":0.0}},"isVisible":true,"version":3.0,"parentId":"zgvoskrdzg","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","maxDynamicHeight":9000.0,"minDynamicHeight":4.0}],"key":"ck656xey1j","labelTextSize":"0.875rem","rightColumn":361.5,"detachFromLayout":true,"widgetId":"zgvoskrdzg","containerStyle":"none","isVisible":true,"version":1.0,"parentId":"ucppqx2su5","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px"}],"borderWidth":"0","key":"r0bflk5gc0","labelTextSize":"0.875rem","backgroundColor":"#FFFFFF","rightColumn":64.0,"dynamicHeight":"FIXED","widgetId":"ucppqx2su5","containerStyle":"card","isVisible":true,"version":1.0,"parentId":"0","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","maxDynamicHeight":9000.0,"minDynamicHeight":4.0}]},"layoutOnLoadActions":[[{"id":"Estimate Process_EAttachments_Select","name":"EAttachments_Select","confirmBeforeExecute":false,"pluginType":"DB","jsonPathKeys":["this.params?.EId"],"timeoutInMillisecond":10000.0},{"id":"Estimate Process_Estimate_Select","name":"Estimate_Select","confirmBeforeExecute":false,"pluginType":"DB","jsonPathKeys":["appsmith.store.FilterRole","appsmith.user.username.split('@')[0]"," appsmith.store?.currentStateName || 'Prepare' "],"timeoutInMillisecond":10000.0}],[{"id":"Estimate Process_CorporateAdmin_Select","name":"CorporateAdmin_Select","confirmBeforeExecute":false,"pluginType":"DB","jsonPathKeys":["\"'\"+GlobalVariables.roles_with_access.join(\"','\")+\"'\""],"timeoutInMillisecond":10000.0},{"id":"Estimate Process_UserRoles_Select","name":"UserRoles_Select","confirmBeforeExecute":false,"pluginType":"DB","jsonPathKeys":["appsmith.user.username.split('@')[0]"],"timeoutInMillisecond":10000.0}],[{"id":"Estimate Process_PageObjects.accessControl","name":"PageObjects.accessControl","collectionId":"Estimate Process_PageObjects","confirmBeforeExecute":false,"pluginType":"JS","jsonPathKeys":["async () => {\n  await UserRoles_Select.run();\n  let role = '';\n  if (UserRoles_Select.data.find(row => row.Name === 'Sales Manager' || row.Name === 'Accounts Receivables')) {\n    console.log('111');\n    role = 'SalesManager';\n  } else if (UserRoles_Select.data.find(row => row.Name === 'Business Manager')) {\n    console.log('222');\n    role = 'BusinessManager';\n  }\n  await storeValue('FilterRole', role, false);\n  console.log('frole', appsmith.store.FilterRole);\n  await Estimate_Select.run();\n}"],"timeoutInMillisecond":10000.0}],[{"id":"Estimate Process_PageObjects.selectInitialState","name":"PageObjects.selectInitialState","collectionId":"Estimate Process_PageObjects","confirmBeforeExecute":false,"pluginType":"JS","jsonPathKeys":["async () => {\n  await Process.clickState(\"Prepare\", Estimate_Select);\n}"],"timeoutInMillisecond":10000.0}]],"layoutOnLoadActionErrors":[],"validOnPageLoadActions":true,"id":"Estimate Process","deleted":false,"policies":[],"userPermissions":[]}],"userPermissions":[],"policies":[],"isHidden":false},"deleted":false,"gitSyncId":"62c6dd94aa3be20812d63927_62c6dd94aa3be20812d6392a"},{"unpublishedPage":{"name":"Estimate State","slug":"estimate-state","layouts":[{"viewMode":false,"dsl":{"widgetName":"MainContainer","backgroundColor":"none","rightColumn":1224.0,"snapColumns":64.0,"detachFromLayout":true,"widgetId":"0","topRow":0.0,"bottomRow":590.0,"containerStyle":"none","snapRows":67.0,"parentRowSpace":1.0,"type":"CANVAS_WIDGET","canExtend":true,"version":89.0,"minHeight":680.0,"parentColumnSpace":1.0,"dynamicBindingPathList":[],"leftColumn":0.0,"children":[{"boxShadow":"0px 0px 4px 3px rgba(0, 0, 0, 0.25)","widgetName":"EstimateState_Container","borderColor":"transparent","isCanvas":true,"dynamicPropertyPathList":[{"key":"boxShadow"},{"key":"borderRadius"}],"displayName":"Container","iconSVG":"/static/media/icon.1977dca3370505e2db3a8e44cfd54907.svg","searchTags":["div","parent","group"],"topRow":0.0,"bottomRow":59.0,"parentRowSpace":10.0,"type":"CONTAINER_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":14.0625,"dynamicTriggerPathList":[],"leftColumn":0.0,"dynamicBindingPathList":[],"children":[{"boxShadow":"none","widgetName":"Canvas1","displayName":"Canvas","topRow":0.0,"bottomRow":590.0,"parentRowSpace":1.0,"type":"CANVAS_WIDGET","canExtend":false,"hideCard":true,"minHeight":400.0,"parentColumnSpace":1.0,"leftColumn":0.0,"dynamicBindingPathList":[{"key":"borderRadius"},{"key":"accentColor"}],"children":[{"boxShadow":"0px 0px 4px 3px rgba(0, 0, 0, 0.25)","widgetName":"EstimateProcess_Page_Button","onClick":"{{navigateTo('Estimate Process', {})}}","buttonColor":"#008695","dynamicPropertyPathList":[{"key":"boxShadow"}],"displayName":"Icon Button","iconSVG":"/static/media/icon.1a0c634ac75f9fa6b6ae7a8df882a3ba.svg","searchTags":["click","submit"],"topRow":2.0,"bottomRow":6.0,"parentRowSpace":10.0,"type":"ICON_BUTTON_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":14.0625,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":0.0,"dynamicBindingPathList":[],"isDisabled":false,"key":"9brg9mjyy1","isDeprecated":false,"rightColumn":3.0,"iconName":"arrow-left","widgetId":"v5myqekmo4","isVisible":true,"version":1.0,"parentId":"sl3e7be9ob","renderMode":"CANVAS","isLoading":false,"borderRadius":"0.375rem","buttonVariant":"TERTIARY"},{"widgetName":"EstimateState_Title","dynamicPropertyPathList":[{"key":"textColor"}],"displayName":"Text","iconSVG":"/static/media/icon.97c59b523e6f70ba6f40a10fc2c7c5b5.svg","searchTags":["typography","paragraph"],"topRow":2.0,"bottomRow":6.0,"parentRowSpace":10.0,"type":"TEXT_WIDGET","hideCard":false,"animateLoading":false,"overflow":"NONE","fontFamily":"{{appsmith.theme.fontFamily.appFont}}","parentColumnSpace":12.2119140625,"dynamicTriggerPathList":[],"leftColumn":3.0,"dynamicBindingPathList":[{"key":"fontFamily"},{"key":"borderRadius"},{"key":"textColor"}],"shouldTruncate":false,"borderWidth":"1","truncateButtonColor":"#FFC13D","text":"Estimate States","key":"tatyfb3emd","isDeprecated":false,"rightColumn":30.0,"textAlign":"LEFT","dynamicHeight":"FIXED","widgetId":"0y0ortuvf0","isVisible":true,"fontStyle":"BOLD,ITALIC","textColor":"{{Globals.LabelColor}}","version":1.0,"parentId":"sl3e7be9ob","renderMode":"CANVAS","isLoading":false,"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","maxDynamicHeight":9000.0,"fontSize":"1.875rem","minDynamicHeight":4.0},{"boxShadow":"{{appsmith.theme.boxShadow.appBoxShadow}}","widgetName":"Estimate_button_Container","borderColor":"transparent","isCanvas":true,"dynamicPropertyPathList":[{"key":"borderRadius"}],"displayName":"Container","iconSVG":"/static/media/icon.1977dca3370505e2db3a8e44cfd54907.svg","searchTags":["div","parent","group"],"topRow":1.0,"bottomRow":7.0,"parentRowSpace":10.0,"type":"CONTAINER_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":12.2119140625,"dynamicTriggerPathList":[],"leftColumn":45.0,"dynamicBindingPathList":[{"key":"boxShadow"}],"children":[{"boxShadow":"none","widgetName":"Canvas2","displayName":"Canvas","topRow":0.0,"bottomRow":60.0,"parentRowSpace":1.0,"type":"CANVAS_WIDGET","canExtend":false,"hideCard":true,"minHeight":400.0,"parentColumnSpace":1.0,"leftColumn":0.0,"dynamicBindingPathList":[{"key":"borderRadius"},{"key":"accentColor"}],"children":[{"boxShadow":"0px 0px 4px 3px rgba(0, 0, 0, 0.25)","widgetName":"EstimateState_Reset_Button","onClick":"{{Globals.resetForm([\"EstimateState_Form_Container\", \"EstimateState_Table\"])}}","buttonColor":"#008695","dynamicPropertyPathList":[{"key":"onClick"},{"key":"boxShadow"}],"displayName":"Icon Button","iconSVG":"/static/media/icon.1a0c634ac75f9fa6b6ae7a8df882a3ba.svg","searchTags":["click","submit"],"topRow":0.0,"bottomRow":4.0,"parentRowSpace":10.0,"type":"ICON_BUTTON_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":12.2119140625,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":22.0,"dynamicBindingPathList":[],"isDisabled":false,"key":"wzrrs6ye8c","isDeprecated":false,"rightColumn":31.0,"iconName":"reset","widgetId":"u6ndo6jh67","isVisible":true,"version":1.0,"parentId":"9be64kr4by","renderMode":"CANVAS","isLoading":false,"borderRadius":"0.375rem","buttonVariant":"TERTIARY"},{"boxShadow":"0px 0px 4px 3px rgba(0, 0, 0, 0.25)","widgetName":"EstimateState_Create_Button","onClick":"{{PageObjects.estimatestateCreate()}}","buttonColor":"#008695","dynamicPropertyPathList":[{"key":"isDisabled"},{"key":"boxShadow"},{"key":"onClick"}],"displayName":"Icon Button","iconSVG":"/static/media/icon.1a0c634ac75f9fa6b6ae7a8df882a3ba.svg","searchTags":["click","submit"],"topRow":0.0,"bottomRow":4.0,"parentRowSpace":10.0,"type":"ICON_BUTTON_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":4.4577789306640625,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":31.0,"dynamicBindingPathList":[{"key":"isDisabled"}],"isDisabled":"{{PageObjects.disableEstimatestateCreate()}}","key":"wzrrs6ye8c","isDeprecated":false,"rightColumn":43.0,"iconName":"plus","widgetId":"6ltnrxrmp9","isVisible":true,"version":1.0,"parentId":"9be64kr4by","renderMode":"CANVAS","isLoading":false,"borderRadius":"0.375rem","buttonVariant":"TERTIARY"},{"boxShadow":"0px 0px 4px 3px rgba(0, 0, 0, 0.25)","widgetName":"EstimateState_Delete_Button","onClick":"{{EstimateState_Delete.run(() => EstimateState_Select.run())}}","buttonColor":"#008695","dynamicPropertyPathList":[{"key":"isDisabled"},{"key":"onClick"},{"key":"boxShadow"}],"displayName":"Icon Button","iconSVG":"/static/media/icon.1a0c634ac75f9fa6b6ae7a8df882a3ba.svg","searchTags":["click","submit"],"topRow":0.0,"bottomRow":4.0,"parentRowSpace":10.0,"type":"ICON_BUTTON_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":12.2119140625,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":54.0,"dynamicBindingPathList":[{"key":"isDisabled"}],"isDisabled":"{{Globals.disableDeleteButton(EstimateState_Table)}}","key":"wzrrs6ye8c","isDeprecated":false,"rightColumn":63.0,"iconName":"trash","widgetId":"7wid3w563q","isVisible":true,"version":1.0,"parentId":"9be64kr4by","renderMode":"CANVAS","isLoading":false,"borderRadius":"0.375rem","buttonVariant":"TERTIARY"},{"boxShadow":"0px 0px 4px 3px rgba(0, 0, 0, 0.25)","widgetName":"EstimateState_Update_Button","onClick":"{{EstimateState_Update.run(()=>EstimateState_Select.run(()=>showAlert('Values updated')))}}","buttonColor":"#008695","dynamicPropertyPathList":[{"key":"onClick"},{"key":"boxShadow"}],"displayName":"Icon Button","iconSVG":"/static/media/icon.1a0c634ac75f9fa6b6ae7a8df882a3ba.svg","searchTags":["click","submit"],"topRow":0.0,"bottomRow":4.0,"parentRowSpace":10.0,"type":"ICON_BUTTON_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":4.4577789306640625,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":46.0,"dynamicBindingPathList":[],"isDisabled":true,"key":"wzrrs6ye8c","isDeprecated":false,"rightColumn":49.0,"iconName":"edit","widgetId":"3hljtu9tl4","isVisible":true,"version":1.0,"parentId":"9be64kr4by","renderMode":"CANVAS","isLoading":false,"borderRadius":"0.375rem","buttonVariant":"TERTIARY"}],"key":"d8iejkdgm4","isDeprecated":false,"rightColumn":293.0859375,"detachFromLayout":true,"widgetId":"9be64kr4by","accentColor":"{{appsmith.theme.colors.primaryColor}}","containerStyle":"none","isVisible":true,"version":1.0,"parentId":"26stmng9l5","renderMode":"CANVAS","isLoading":false,"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}"}],"borderWidth":"0","key":"6c3pepr0hi","backgroundColor":"#FFFFFF","isDeprecated":false,"rightColumn":63.0,"dynamicHeight":"FIXED","widgetId":"26stmng9l5","containerStyle":"card","isVisible":true,"version":1.0,"parentId":"sl3e7be9ob","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","maxDynamicHeight":9000.0,"minDynamicHeight":4.0},{"boxShadow":"{{appsmith.theme.boxShadow.appBoxShadow}}","isVisibleDownload":false,"iconSVG":"/static/media/icon.db8a9cbd2acd22a31ea91cc37ea2a46c.svg","topRow":9.0,"isSortable":true,"type":"TABLE_WIDGET","animateLoading":false,"dynamicBindingPathList":[{"key":"accentColor"},{"key":"borderRadius"},{"key":"boxShadow"},{"key":"childStylesheet.button.buttonColor"},{"key":"childStylesheet.button.borderRadius"},{"key":"childStylesheet.menuButton.menuColor"},{"key":"childStylesheet.menuButton.borderRadius"},{"key":"childStylesheet.iconButton.buttonColor"},{"key":"childStylesheet.iconButton.borderRadius"},{"key":"tableData"},{"key":"primaryColumns.Name.computedValue"},{"key":"primaryColumns.UIOrder.computedValue"},{"key":"primaryColumns.Deleted.computedValue"}],"leftColumn":1.0,"delimiter":",","accentColor":"{{appsmith.theme.colors.primaryColor}}","isVisibleFilters":false,"isVisible":true,"enableClientSideSearch":false,"version":3.0,"totalRecordsCount":0.0,"isLoading":false,"childStylesheet":{"button":{"buttonColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"menuButton":{"menuColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"iconButton":{"buttonColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"}},"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","columnSizeMap":{"task":245.0,"step":62.0,"status":75.0},"widgetName":"EstimateState_Table","defaultPageSize":0.0,"columnOrder":["Name","UIOrder","Deleted"],"dynamicPropertyPathList":[{"key":"onRowSelected"}],"displayName":"Table","searchTags":["datagrid"],"bottomRow":53.0,"parentRowSpace":10.0,"defaultSelectedRow":"-1","hideCard":false,"parentColumnSpace":12.2119140625,"dynamicTriggerPathList":[{"key":"onRowSelected"}],"primaryColumns":{"Name":{"index":0.0,"width":150.0,"id":"Name","horizontalAlignment":"LEFT","verticalAlignment":"CENTER","columnType":"text","textColor":"","textSize":"0.875rem","enableFilter":true,"enableSort":true,"isVisible":true,"isDisabled":false,"isCellVisible":true,"isDerived":false,"label":"Name","computedValue":"{{EstimateState_Table.sanitizedTableData.map((currentRow) => ( currentRow.Name))}}","cellBackground":""},"UIOrder":{"index":1.0,"width":150.0,"id":"UIOrder","horizontalAlignment":"LEFT","verticalAlignment":"CENTER","columnType":"text","textColor":"","textSize":"0.875rem","enableFilter":true,"enableSort":true,"isVisible":false,"isDisabled":false,"isCellVisible":true,"isDerived":false,"label":"UIOrder","computedValue":"{{EstimateState_Table.sanitizedTableData.map((currentRow) => ( currentRow.UIOrder))}}","cellBackground":""},"Deleted":{"index":2.0,"width":150.0,"id":"Deleted","horizontalAlignment":"LEFT","verticalAlignment":"CENTER","columnType":"text","textColor":"","textSize":"0.875rem","enableFilter":true,"enableSort":true,"isVisible":false,"isDisabled":false,"isCellVisible":true,"isDerived":false,"label":"Deleted","computedValue":"{{EstimateState_Table.sanitizedTableData.map((currentRow) => ( currentRow.Deleted))}}","cellBackground":""}},"onRowSelected":"{{storeValue(\"tick\",false)}}","key":"an1e3kot1g","derivedColumns":{},"isDeprecated":false,"rightColumn":32.0,"textSize":"0.875rem","widgetId":"8i0hd40wjh","tableData":"{{EstimateState_Select.data}}","label":"Data","searchKey":"","parentId":"sl3e7be9ob","renderMode":"CANVAS","horizontalAlignment":"LEFT","isVisibleSearch":true,"isVisiblePagination":true,"verticalAlignment":"CENTER"},{"boxShadow":"{{appsmith.theme.boxShadow.appBoxShadow}}","widgetName":"EstimateState_Form_Container","borderColor":"#F6F7G8","isCanvas":true,"dynamicPropertyPathList":[{"key":"borderRadius"}],"displayName":"Container","iconSVG":"/static/media/icon.1977dca3370505e2db3a8e44cfd54907.svg","searchTags":["div","parent","group"],"topRow":9.0,"bottomRow":53.0,"parentRowSpace":10.0,"type":"CONTAINER_WIDGET","hideCard":false,"animateLoading":true,"parentColumnSpace":12.431640625,"dynamicTriggerPathList":[],"leftColumn":33.0,"dynamicBindingPathList":[{"key":"boxShadow"}],"children":[{"boxShadow":"none","widgetName":"Canvas3","displayName":"Canvas","topRow":0.0,"bottomRow":430.0,"parentRowSpace":1.0,"type":"CANVAS_WIDGET","canExtend":false,"hideCard":true,"minHeight":400.0,"parentColumnSpace":1.0,"leftColumn":0.0,"dynamicBindingPathList":[{"key":"borderRadius"},{"key":"accentColor"}],"children":[{"boxShadow":"none","widgetName":"EstimateState_Order_Input","dynamicPropertyPathList":[{"key":"labelTextColor"}],"displayName":"Input","iconSVG":"/static/media/icon.9f505595da61a34f563dba82adeb06ec.svg","searchTags":["form","text input","number","textarea"],"topRow":3.0,"bottomRow":7.0,"parentRowSpace":10.0,"labelWidth":"8","autoFocus":true,"type":"INPUT_WIDGET_V2","hideCard":false,"animateLoading":false,"parentColumnSpace":5.51483154296875,"dynamicTriggerPathList":[],"resetOnSubmit":false,"leftColumn":1.0,"dynamicBindingPathList":[{"key":"accentColor"},{"key":"borderRadius"},{"key":"defaultText"},{"key":"validation"},{"key":"labelTextColor"}],"labelPosition":"Left","labelStyle":"","labelTextColor":"{{Globals.LabelColor}}","inputType":"TEXT","isDisabled":false,"key":"a3zq3gh1b0","validation":"{{parseInt(EstimateState_Order_Input.text) > 0}}","labelTextSize":"0.875rem","isRequired":true,"isDeprecated":false,"rightColumn":63.0,"dynamicHeight":"FIXED","widgetId":"ccgpzfyx2r","accentColor":"{{appsmith.theme.colors.primaryColor}}","isVisible":true,"label":"UI Order","version":2.0,"parentId":"yjsq615sf5","labelAlignment":"left","renderMode":"CANVAS","isLoading":false,"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","maxDynamicHeight":9000.0,"iconAlign":"left","defaultText":"{{EstimateState_Table.selectedRow.UIOrder.toString().padStart(2,0)}}","minDynamicHeight":4.0},{"boxShadow":"none","widgetName":"EstimateState_Name_Input","dynamicPropertyPathList":[{"key":"labelTextColor"}],"displayName":"Input","iconSVG":"/static/media/icon.9f505595da61a34f563dba82adeb06ec.svg","searchTags":["form","text input","number","textarea"],"topRow":12.0,"bottomRow":16.0,"parentRowSpace":10.0,"labelWidth":"8","autoFocus":true,"type":"INPUT_WIDGET_V2","hideCard":false,"animateLoading":false,"parentColumnSpace":5.51483154296875,"dynamicTriggerPathList":[],"resetOnSubmit":false,"leftColumn":1.0,"dynamicBindingPathList":[{"key":"accentColor"},{"key":"borderRadius"},{"key":"defaultText"},{"key":"validation"},{"key":"labelTextColor"}],"labelPosition":"Left","labelStyle":"","labelTextColor":"{{Globals.LabelColor}}","inputType":"TEXT","isDisabled":false,"key":"a3zq3gh1b0","validation":"{{EstimateState_Name_Input.text.length>0}}","labelTextSize":"0.875rem","isRequired":true,"isDeprecated":false,"rightColumn":63.0,"dynamicHeight":"FIXED","widgetId":"r70mv4876x","accentColor":"{{appsmith.theme.colors.primaryColor}}","isVisible":true,"label":"Name","version":2.0,"parentId":"yjsq615sf5","labelAlignment":"left","renderMode":"CANVAS","isLoading":false,"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","maxDynamicHeight":9000.0,"iconAlign":"left","defaultText":"{{EstimateState_Table.selectedRow.Name}}","minDynamicHeight":4.0}],"key":"8a8rgkgj79","isDeprecated":false,"rightColumn":298.359375,"detachFromLayout":true,"widgetId":"yjsq615sf5","accentColor":"{{appsmith.theme.colors.primaryColor}}","containerStyle":"none","isVisible":true,"version":1.0,"parentId":"g81u3d80ln","renderMode":"CANVAS","isLoading":false,"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}"}],"borderWidth":"2","key":"fqg8gv2euq","backgroundColor":"#FFFFFF","isDeprecated":false,"rightColumn":63.0,"dynamicHeight":"FIXED","widgetId":"g81u3d80ln","containerStyle":"card","isVisible":true,"version":1.0,"parentId":"sl3e7be9ob","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","maxDynamicHeight":9000.0,"minDynamicHeight":4.0}],"key":"0sxz5q82x6","isDeprecated":false,"rightColumn":337.5,"detachFromLayout":true,"widgetId":"sl3e7be9ob","accentColor":"{{appsmith.theme.colors.primaryColor}}","containerStyle":"none","isVisible":true,"version":1.0,"parentId":"6m0bhegqhi","renderMode":"CANVAS","isLoading":false,"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}"}],"borderWidth":"0","key":"9oo1a89d7y","backgroundColor":"#FFFFFF","isDeprecated":false,"rightColumn":64.0,"dynamicHeight":"FIXED","widgetId":"6m0bhegqhi","containerStyle":"card","isVisible":true,"version":1.0,"parentId":"0","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","maxDynamicHeight":9000.0,"minDynamicHeight":4.0}]},"layoutOnLoadActions":[[{"id":"Estimate State_EstimateState_Select","name":"EstimateState_Select","confirmBeforeExecute":false,"pluginType":"DB","jsonPathKeys":[],"timeoutInMillisecond":10000.0}]],"layoutOnLoadActionErrors":[],"validOnPageLoadActions":true,"id":"Estimate State","deleted":false,"policies":[],"userPermissions":[]}],"userPermissions":[],"policies":[],"isHidden":true},"publishedPage":{"name":"Estimate State","slug":"estimate-state","layouts":[{"viewMode":false,"dsl":{"widgetName":"MainContainer","backgroundColor":"none","rightColumn":1224.0,"snapColumns":64.0,"detachFromLayout":true,"widgetId":"0","topRow":0.0,"bottomRow":590.0,"containerStyle":"none","snapRows":67.0,"parentRowSpace":1.0,"type":"CANVAS_WIDGET","canExtend":true,"version":89.0,"minHeight":680.0,"parentColumnSpace":1.0,"dynamicBindingPathList":[],"leftColumn":0.0,"children":[{"boxShadow":"0px 0px 4px 3px rgba(0, 0, 0, 0.25)","widgetName":"EstimateState_Container","borderColor":"transparent","isCanvas":true,"dynamicPropertyPathList":[{"key":"boxShadow"},{"key":"borderRadius"}],"displayName":"Container","iconSVG":"/static/media/icon.1977dca3370505e2db3a8e44cfd54907.svg","searchTags":["div","parent","group"],"topRow":0.0,"bottomRow":59.0,"parentRowSpace":10.0,"type":"CONTAINER_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":14.0625,"dynamicTriggerPathList":[],"leftColumn":0.0,"dynamicBindingPathList":[],"children":[{"boxShadow":"none","widgetName":"Canvas1","displayName":"Canvas","topRow":0.0,"bottomRow":590.0,"parentRowSpace":1.0,"type":"CANVAS_WIDGET","canExtend":false,"hideCard":true,"minHeight":400.0,"parentColumnSpace":1.0,"leftColumn":0.0,"dynamicBindingPathList":[{"key":"borderRadius"},{"key":"accentColor"}],"children":[{"boxShadow":"0px 0px 4px 3px rgba(0, 0, 0, 0.25)","widgetName":"EstimateProcess_Page_Button","onClick":"{{navigateTo('Estimate Process', {})}}","buttonColor":"#008695","dynamicPropertyPathList":[{"key":"boxShadow"}],"displayName":"Icon Button","iconSVG":"/static/media/icon.1a0c634ac75f9fa6b6ae7a8df882a3ba.svg","searchTags":["click","submit"],"topRow":2.0,"bottomRow":6.0,"parentRowSpace":10.0,"type":"ICON_BUTTON_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":14.0625,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":0.0,"dynamicBindingPathList":[],"isDisabled":false,"key":"9brg9mjyy1","isDeprecated":false,"rightColumn":3.0,"iconName":"arrow-left","widgetId":"v5myqekmo4","isVisible":true,"version":1.0,"parentId":"sl3e7be9ob","renderMode":"CANVAS","isLoading":false,"borderRadius":"0.375rem","buttonVariant":"TERTIARY"},{"widgetName":"EstimateState_Title","dynamicPropertyPathList":[{"key":"textColor"}],"displayName":"Text","iconSVG":"/static/media/icon.97c59b523e6f70ba6f40a10fc2c7c5b5.svg","searchTags":["typography","paragraph"],"topRow":2.0,"bottomRow":6.0,"parentRowSpace":10.0,"type":"TEXT_WIDGET","hideCard":false,"animateLoading":false,"overflow":"NONE","fontFamily":"{{appsmith.theme.fontFamily.appFont}}","parentColumnSpace":12.2119140625,"dynamicTriggerPathList":[],"leftColumn":3.0,"dynamicBindingPathList":[{"key":"fontFamily"},{"key":"borderRadius"},{"key":"textColor"}],"shouldTruncate":false,"borderWidth":"1","truncateButtonColor":"#FFC13D","text":"Estimate States","key":"tatyfb3emd","isDeprecated":false,"rightColumn":30.0,"textAlign":"LEFT","dynamicHeight":"FIXED","widgetId":"0y0ortuvf0","isVisible":true,"fontStyle":"BOLD,ITALIC","textColor":"{{Globals.LabelColor}}","version":1.0,"parentId":"sl3e7be9ob","renderMode":"CANVAS","isLoading":false,"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","maxDynamicHeight":9000.0,"fontSize":"1.875rem","minDynamicHeight":4.0},{"boxShadow":"{{appsmith.theme.boxShadow.appBoxShadow}}","widgetName":"Estimate_button_Container","borderColor":"transparent","isCanvas":true,"dynamicPropertyPathList":[{"key":"borderRadius"}],"displayName":"Container","iconSVG":"/static/media/icon.1977dca3370505e2db3a8e44cfd54907.svg","searchTags":["div","parent","group"],"topRow":1.0,"bottomRow":7.0,"parentRowSpace":10.0,"type":"CONTAINER_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":12.2119140625,"dynamicTriggerPathList":[],"leftColumn":45.0,"dynamicBindingPathList":[{"key":"boxShadow"}],"children":[{"boxShadow":"none","widgetName":"Canvas2","displayName":"Canvas","topRow":0.0,"bottomRow":60.0,"parentRowSpace":1.0,"type":"CANVAS_WIDGET","canExtend":false,"hideCard":true,"minHeight":400.0,"parentColumnSpace":1.0,"leftColumn":0.0,"dynamicBindingPathList":[{"key":"borderRadius"},{"key":"accentColor"}],"children":[{"boxShadow":"0px 0px 4px 3px rgba(0, 0, 0, 0.25)","widgetName":"EstimateState_Reset_Button","onClick":"{{Globals.resetForm([\"EstimateState_Form_Container\", \"EstimateState_Table\"])}}","buttonColor":"#008695","dynamicPropertyPathList":[{"key":"onClick"},{"key":"boxShadow"}],"displayName":"Icon Button","iconSVG":"/static/media/icon.1a0c634ac75f9fa6b6ae7a8df882a3ba.svg","searchTags":["click","submit"],"topRow":0.0,"bottomRow":4.0,"parentRowSpace":10.0,"type":"ICON_BUTTON_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":12.2119140625,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":22.0,"dynamicBindingPathList":[],"isDisabled":false,"key":"wzrrs6ye8c","isDeprecated":false,"rightColumn":31.0,"iconName":"reset","widgetId":"u6ndo6jh67","isVisible":true,"version":1.0,"parentId":"9be64kr4by","renderMode":"CANVAS","isLoading":false,"borderRadius":"0.375rem","buttonVariant":"TERTIARY"},{"boxShadow":"0px 0px 4px 3px rgba(0, 0, 0, 0.25)","widgetName":"EstimateState_Create_Button","onClick":"{{PageObjects.estimatestateCreate()}}","buttonColor":"#008695","dynamicPropertyPathList":[{"key":"isDisabled"},{"key":"boxShadow"},{"key":"onClick"}],"displayName":"Icon Button","iconSVG":"/static/media/icon.1a0c634ac75f9fa6b6ae7a8df882a3ba.svg","searchTags":["click","submit"],"topRow":0.0,"bottomRow":4.0,"parentRowSpace":10.0,"type":"ICON_BUTTON_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":4.4577789306640625,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":31.0,"dynamicBindingPathList":[{"key":"isDisabled"}],"isDisabled":"{{PageObjects.disableEstimatestateCreate()}}","key":"wzrrs6ye8c","isDeprecated":false,"rightColumn":43.0,"iconName":"plus","widgetId":"6ltnrxrmp9","isVisible":true,"version":1.0,"parentId":"9be64kr4by","renderMode":"CANVAS","isLoading":false,"borderRadius":"0.375rem","buttonVariant":"TERTIARY"},{"boxShadow":"0px 0px 4px 3px rgba(0, 0, 0, 0.25)","widgetName":"EstimateState_Delete_Button","onClick":"{{EstimateState_Delete.run(() => EstimateState_Select.run())}}","buttonColor":"#008695","dynamicPropertyPathList":[{"key":"isDisabled"},{"key":"onClick"},{"key":"boxShadow"}],"displayName":"Icon Button","iconSVG":"/static/media/icon.1a0c634ac75f9fa6b6ae7a8df882a3ba.svg","searchTags":["click","submit"],"topRow":0.0,"bottomRow":4.0,"parentRowSpace":10.0,"type":"ICON_BUTTON_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":12.2119140625,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":54.0,"dynamicBindingPathList":[{"key":"isDisabled"}],"isDisabled":"{{Globals.disableDeleteButton(EstimateState_Table)}}","key":"wzrrs6ye8c","isDeprecated":false,"rightColumn":63.0,"iconName":"trash","widgetId":"7wid3w563q","isVisible":true,"version":1.0,"parentId":"9be64kr4by","renderMode":"CANVAS","isLoading":false,"borderRadius":"0.375rem","buttonVariant":"TERTIARY"},{"boxShadow":"0px 0px 4px 3px rgba(0, 0, 0, 0.25)","widgetName":"EstimateState_Update_Button","onClick":"{{EstimateState_Update.run(()=>EstimateState_Select.run(()=>showAlert('Values updated')))}}","buttonColor":"#008695","dynamicPropertyPathList":[{"key":"onClick"},{"key":"boxShadow"}],"displayName":"Icon Button","iconSVG":"/static/media/icon.1a0c634ac75f9fa6b6ae7a8df882a3ba.svg","searchTags":["click","submit"],"topRow":0.0,"bottomRow":4.0,"parentRowSpace":10.0,"type":"ICON_BUTTON_WIDGET","hideCard":false,"animateLoading":false,"parentColumnSpace":4.4577789306640625,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":46.0,"dynamicBindingPathList":[],"isDisabled":true,"key":"wzrrs6ye8c","isDeprecated":false,"rightColumn":49.0,"iconName":"edit","widgetId":"3hljtu9tl4","isVisible":true,"version":1.0,"parentId":"9be64kr4by","renderMode":"CANVAS","isLoading":false,"borderRadius":"0.375rem","buttonVariant":"TERTIARY"}],"key":"d8iejkdgm4","isDeprecated":false,"rightColumn":293.0859375,"detachFromLayout":true,"widgetId":"9be64kr4by","accentColor":"{{appsmith.theme.colors.primaryColor}}","containerStyle":"none","isVisible":true,"version":1.0,"parentId":"26stmng9l5","renderMode":"CANVAS","isLoading":false,"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}"}],"borderWidth":"0","key":"6c3pepr0hi","backgroundColor":"#FFFFFF","isDeprecated":false,"rightColumn":63.0,"dynamicHeight":"FIXED","widgetId":"26stmng9l5","containerStyle":"card","isVisible":true,"version":1.0,"parentId":"sl3e7be9ob","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","maxDynamicHeight":9000.0,"minDynamicHeight":4.0},{"boxShadow":"{{appsmith.theme.boxShadow.appBoxShadow}}","isVisibleDownload":false,"iconSVG":"/static/media/icon.db8a9cbd2acd22a31ea91cc37ea2a46c.svg","topRow":9.0,"isSortable":true,"type":"TABLE_WIDGET","animateLoading":false,"dynamicBindingPathList":[{"key":"accentColor"},{"key":"borderRadius"},{"key":"boxShadow"},{"key":"childStylesheet.button.buttonColor"},{"key":"childStylesheet.button.borderRadius"},{"key":"childStylesheet.menuButton.menuColor"},{"key":"childStylesheet.menuButton.borderRadius"},{"key":"childStylesheet.iconButton.buttonColor"},{"key":"childStylesheet.iconButton.borderRadius"},{"key":"tableData"},{"key":"primaryColumns.Name.computedValue"},{"key":"primaryColumns.UIOrder.computedValue"},{"key":"primaryColumns.Deleted.computedValue"}],"leftColumn":1.0,"delimiter":",","accentColor":"{{appsmith.theme.colors.primaryColor}}","isVisibleFilters":false,"isVisible":true,"enableClientSideSearch":false,"version":3.0,"totalRecordsCount":0.0,"isLoading":false,"childStylesheet":{"button":{"buttonColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"menuButton":{"menuColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"iconButton":{"buttonColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"}},"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","columnSizeMap":{"task":245.0,"step":62.0,"status":75.0},"widgetName":"EstimateState_Table","defaultPageSize":0.0,"columnOrder":["Name","UIOrder","Deleted"],"dynamicPropertyPathList":[{"key":"onRowSelected"}],"displayName":"Table","searchTags":["datagrid"],"bottomRow":53.0,"parentRowSpace":10.0,"defaultSelectedRow":"-1","hideCard":false,"parentColumnSpace":12.2119140625,"dynamicTriggerPathList":[{"key":"onRowSelected"}],"primaryColumns":{"Name":{"index":0.0,"width":150.0,"id":"Name","horizontalAlignment":"LEFT","verticalAlignment":"CENTER","columnType":"text","textColor":"","textSize":"0.875rem","enableFilter":true,"enableSort":true,"isVisible":true,"isDisabled":false,"isCellVisible":true,"isDerived":false,"label":"Name","computedValue":"{{EstimateState_Table.sanitizedTableData.map((currentRow) => ( currentRow.Name))}}","cellBackground":""},"UIOrder":{"index":1.0,"width":150.0,"id":"UIOrder","horizontalAlignment":"LEFT","verticalAlignment":"CENTER","columnType":"text","textColor":"","textSize":"0.875rem","enableFilter":true,"enableSort":true,"isVisible":false,"isDisabled":false,"isCellVisible":true,"isDerived":false,"label":"UIOrder","computedValue":"{{EstimateState_Table.sanitizedTableData.map((currentRow) => ( currentRow.UIOrder))}}","cellBackground":""},"Deleted":{"index":2.0,"width":150.0,"id":"Deleted","horizontalAlignment":"LEFT","verticalAlignment":"CENTER","columnType":"text","textColor":"","textSize":"0.875rem","enableFilter":true,"enableSort":true,"isVisible":false,"isDisabled":false,"isCellVisible":true,"isDerived":false,"label":"Deleted","computedValue":"{{EstimateState_Table.sanitizedTableData.map((currentRow) => ( currentRow.Deleted))}}","cellBackground":""}},"onRowSelected":"{{storeValue(\"tick\",false)}}","key":"an1e3kot1g","derivedColumns":{},"isDeprecated":false,"rightColumn":32.0,"textSize":"0.875rem","widgetId":"8i0hd40wjh","tableData":"{{EstimateState_Select.data}}","label":"Data","searchKey":"","parentId":"sl3e7be9ob","renderMode":"CANVAS","horizontalAlignment":"LEFT","isVisibleSearch":true,"isVisiblePagination":true,"verticalAlignment":"CENTER"},{"boxShadow":"{{appsmith.theme.boxShadow.appBoxShadow}}","widgetName":"EstimateState_Form_Container","borderColor":"#F6F7G8","isCanvas":true,"dynamicPropertyPathList":[{"key":"borderRadius"}],"displayName":"Container","iconSVG":"/static/media/icon.1977dca3370505e2db3a8e44cfd54907.svg","searchTags":["div","parent","group"],"topRow":9.0,"bottomRow":53.0,"parentRowSpace":10.0,"type":"CONTAINER_WIDGET","hideCard":false,"animateLoading":true,"parentColumnSpace":12.431640625,"dynamicTriggerPathList":[],"leftColumn":33.0,"dynamicBindingPathList":[{"key":"boxShadow"}],"children":[{"boxShadow":"none","widgetName":"Canvas3","displayName":"Canvas","topRow":0.0,"bottomRow":430.0,"parentRowSpace":1.0,"type":"CANVAS_WIDGET","canExtend":false,"hideCard":true,"minHeight":400.0,"parentColumnSpace":1.0,"leftColumn":0.0,"dynamicBindingPathList":[{"key":"borderRadius"},{"key":"accentColor"}],"children":[{"boxShadow":"none","widgetName":"EstimateState_Order_Input","dynamicPropertyPathList":[{"key":"labelTextColor"}],"displayName":"Input","iconSVG":"/static/media/icon.9f505595da61a34f563dba82adeb06ec.svg","searchTags":["form","text input","number","textarea"],"topRow":3.0,"bottomRow":7.0,"parentRowSpace":10.0,"labelWidth":"8","autoFocus":true,"type":"INPUT_WIDGET_V2","hideCard":false,"animateLoading":false,"parentColumnSpace":5.51483154296875,"dynamicTriggerPathList":[],"resetOnSubmit":false,"leftColumn":1.0,"dynamicBindingPathList":[{"key":"accentColor"},{"key":"borderRadius"},{"key":"defaultText"},{"key":"validation"},{"key":"labelTextColor"}],"labelPosition":"Left","labelStyle":"","labelTextColor":"{{Globals.LabelColor}}","inputType":"TEXT","isDisabled":false,"key":"a3zq3gh1b0","validation":"{{parseInt(EstimateState_Order_Input.text) > 0}}","labelTextSize":"0.875rem","isRequired":true,"isDeprecated":false,"rightColumn":63.0,"dynamicHeight":"FIXED","widgetId":"ccgpzfyx2r","accentColor":"{{appsmith.theme.colors.primaryColor}}","isVisible":true,"label":"UI Order","version":2.0,"parentId":"yjsq615sf5","labelAlignment":"left","renderMode":"CANVAS","isLoading":false,"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","maxDynamicHeight":9000.0,"iconAlign":"left","defaultText":"{{EstimateState_Table.selectedRow.UIOrder.toString().padStart(2,0)}}","minDynamicHeight":4.0},{"boxShadow":"none","widgetName":"EstimateState_Name_Input","dynamicPropertyPathList":[{"key":"labelTextColor"}],"displayName":"Input","iconSVG":"/static/media/icon.9f505595da61a34f563dba82adeb06ec.svg","searchTags":["form","text input","number","textarea"],"topRow":12.0,"bottomRow":16.0,"parentRowSpace":10.0,"labelWidth":"8","autoFocus":true,"type":"INPUT_WIDGET_V2","hideCard":false,"animateLoading":false,"parentColumnSpace":5.51483154296875,"dynamicTriggerPathList":[],"resetOnSubmit":false,"leftColumn":1.0,"dynamicBindingPathList":[{"key":"accentColor"},{"key":"borderRadius"},{"key":"defaultText"},{"key":"validation"},{"key":"labelTextColor"}],"labelPosition":"Left","labelStyle":"","labelTextColor":"{{Globals.LabelColor}}","inputType":"TEXT","isDisabled":false,"key":"a3zq3gh1b0","validation":"{{EstimateState_Name_Input.text.length>0}}","labelTextSize":"0.875rem","isRequired":true,"isDeprecated":false,"rightColumn":63.0,"dynamicHeight":"FIXED","widgetId":"r70mv4876x","accentColor":"{{appsmith.theme.colors.primaryColor}}","isVisible":true,"label":"Name","version":2.0,"parentId":"yjsq615sf5","labelAlignment":"left","renderMode":"CANVAS","isLoading":false,"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","maxDynamicHeight":9000.0,"iconAlign":"left","defaultText":"{{EstimateState_Table.selectedRow.Name}}","minDynamicHeight":4.0}],"key":"8a8rgkgj79","isDeprecated":false,"rightColumn":298.359375,"detachFromLayout":true,"widgetId":"yjsq615sf5","accentColor":"{{appsmith.theme.colors.primaryColor}}","containerStyle":"none","isVisible":true,"version":1.0,"parentId":"g81u3d80ln","renderMode":"CANVAS","isLoading":false,"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}"}],"borderWidth":"2","key":"fqg8gv2euq","backgroundColor":"#FFFFFF","isDeprecated":false,"rightColumn":63.0,"dynamicHeight":"FIXED","widgetId":"g81u3d80ln","containerStyle":"card","isVisible":true,"version":1.0,"parentId":"sl3e7be9ob","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","maxDynamicHeight":9000.0,"minDynamicHeight":4.0}],"key":"0sxz5q82x6","isDeprecated":false,"rightColumn":337.5,"detachFromLayout":true,"widgetId":"sl3e7be9ob","accentColor":"{{appsmith.theme.colors.primaryColor}}","containerStyle":"none","isVisible":true,"version":1.0,"parentId":"6m0bhegqhi","renderMode":"CANVAS","isLoading":false,"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}"}],"borderWidth":"0","key":"9oo1a89d7y","backgroundColor":"#FFFFFF","isDeprecated":false,"rightColumn":64.0,"dynamicHeight":"FIXED","widgetId":"6m0bhegqhi","containerStyle":"card","isVisible":true,"version":1.0,"parentId":"0","renderMode":"CANVAS","isLoading":false,"borderRadius":"0px","maxDynamicHeight":9000.0,"minDynamicHeight":4.0}]},"layoutOnLoadActions":[[{"id":"Estimate State_EstimateState_Select","name":"EstimateState_Select","confirmBeforeExecute":false,"pluginType":"DB","jsonPathKeys":[],"timeoutInMillisecond":10000.0}]],"layoutOnLoadActionErrors":[],"validOnPageLoadActions":true,"id":"Estimate State","deleted":false,"policies":[],"userPermissions":[]}],"userPermissions":[],"policies":[],"isHidden":true},"deleted":false,"gitSyncId":"62c6dd94aa3be20812d63927_62c6fc16aa3be20812d63a0b"}],"actionList":[{"pluginType":"JS","pluginId":"js-plugin","unpublishedAction":{"name":"setError","fullyQualifiedName":"FileUploadProcess.setError","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","collectionId":"PO Entry_FileUploadProcess","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async errorMessage => {\n  await storeValue('ErrorMessage', errorMessage);\n  await storeValue('ErrorVisibility', true);\n  await storeValue('ErrorOccured', true);\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"errorMessage"}]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async errorMessage => {\n  await storeValue('ErrorMessage', errorMessage);\n  await storeValue('ErrorVisibility', true);\n  await storeValue('ErrorOccured', true);\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-15T09:06:23Z"},"publishedAction":{"name":"setError","fullyQualifiedName":"FileUploadProcess.setError","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","collectionId":"PO Entry_FileUploadProcess","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async errorMessage => {\n  await storeValue('ErrorMessage', errorMessage);\n  await storeValue('ErrorVisibility', true);\n  await storeValue('ErrorOccured', true);\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"errorMessage"}]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async errorMessage => {\n  await storeValue('ErrorMessage', errorMessage);\n  await storeValue('ErrorVisibility', true);\n  await storeValue('ErrorOccured', true);\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-15T09:06:23Z"},"id":"PO Entry_FileUploadProcess.setError","deleted":false,"gitSyncId":"67f4d81e59d0ae34925978ba_67fe218f358e8b1adbeac763"},{"pluginType":"JS","pluginId":"js-plugin","unpublishedAction":{"name":"runDeleteFile","fullyQualifiedName":"FileUploadProcess.runDeleteFile","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","collectionId":"PO Entry_FileUploadProcess","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async FileId => {\n  try {\n    let fileObject = \"\";\n    await FileUploadProcess.clearError();\n    fileObject = await FileUploadProcess.getFileObject(appsmith.store.ActualFileName, PO_Table.selectedRow.Id, 'POId');\n    if (appsmith.store.ErrorOccured === true) {\n      await showAlert(\"File not found in sharepoint, Deleting in database\");\n      await FileUploadProcess.setError(\"No files exist!\");\n    } else {\n      console.log(fileObject);\n      let driveId = FileUploadProcess.getValue('EstimatePO', 'DriveId');\n      let itemId = fileObject.driveItem[\"id\"];\n      let response = \"\";\n      response = await File_Delete.run({\n        \"driveId\": driveId,\n        \"itemId\": itemId\n      });\n    }\n    await EPOAttachments_Delete.run({\n      \"FileId\": FileId\n    }).then(() => EPOAttachments_Select.run({\n      \"POId\": PO_Table.selectedRow.Id\n    })).then(() => storeValue('ActualFileName', '')).then(() => showAlert(\"PO File Deleted\", \"success\")).then(() => FileUpload_Check.run({\n      \"POId\": PO_Table.selectedRow.EId\n    }));\n  } catch (err) {\n    if (err.message == \"Cannot read properties of undefined (reading 'data')\") {\n      Promise.all([FileUploadProcess.setError(\"Network got disconnected!, Please check your connection and retry\"), storeValue('closedisable', 'True'), showAlert('Network got disconnected!, Please check your connection and retry', 'error')]);\n    } else {\n      Promise.all([FileUploadProcess.setError(\"Delete Failed retry, \" + err.message), storeValue('closedisable', 'True'), showAlert(\"Delete Failed retry, \" + err.message, 'error')]);\n    }\n  }\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"FileId"}]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async FileId => {\n  try {\n    let fileObject = \"\";\n    await FileUploadProcess.clearError();\n    fileObject = await FileUploadProcess.getFileObject(appsmith.store.ActualFileName, PO_Table.selectedRow.Id, 'POId');\n    if (appsmith.store.ErrorOccured === true) {\n      await showAlert(\"File not found in sharepoint, Deleting in database\");\n      await FileUploadProcess.setError(\"No files exist!\");\n    } else {\n      console.log(fileObject);\n      let driveId = FileUploadProcess.getValue('EstimatePO', 'DriveId');\n      let itemId = fileObject.driveItem[\"id\"];\n      let response = \"\";\n      response = await File_Delete.run({\n        \"driveId\": driveId,\n        \"itemId\": itemId\n      });\n    }\n    await EPOAttachments_Delete.run({\n      \"FileId\": FileId\n    }).then(() => EPOAttachments_Select.run({\n      \"POId\": PO_Table.selectedRow.Id\n    })).then(() => storeValue('ActualFileName', '')).then(() => showAlert(\"PO File Deleted\", \"success\")).then(() => FileUpload_Check.run({\n      \"POId\": PO_Table.selectedRow.EId\n    }));\n  } catch (err) {\n    if (err.message == \"Cannot read properties of undefined (reading 'data')\") {\n      Promise.all([FileUploadProcess.setError(\"Network got disconnected!, Please check your connection and retry\"), storeValue('closedisable', 'True'), showAlert('Network got disconnected!, Please check your connection and retry', 'error')]);\n    } else {\n      Promise.all([FileUploadProcess.setError(\"Delete Failed retry, \" + err.message), storeValue('closedisable', 'True'), showAlert(\"Delete Failed retry, \" + err.message, 'error')]);\n    }\n  }\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-15T09:06:24Z"},"publishedAction":{"name":"runDeleteFile","fullyQualifiedName":"FileUploadProcess.runDeleteFile","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","collectionId":"PO Entry_FileUploadProcess","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async FileId => {\n  try {\n    let fileObject = \"\";\n    await FileUploadProcess.clearError();\n    fileObject = await FileUploadProcess.getFileObject(appsmith.store.ActualFileName, PO_Table.selectedRow.Id, 'POId');\n    if (appsmith.store.ErrorOccured === true) {\n      await showAlert(\"File not found in sharepoint, Deleting in database\");\n      await FileUploadProcess.setError(\"No files exist!\");\n    } else {\n      console.log(fileObject);\n      let driveId = FileUploadProcess.getValue('EstimatePO', 'DriveId');\n      let itemId = fileObject.driveItem[\"id\"];\n      let response = \"\";\n      response = await File_Delete.run({\n        \"driveId\": driveId,\n        \"itemId\": itemId\n      });\n    }\n    await EPOAttachments_Delete.run({\n      \"FileId\": FileId\n    }).then(() => EPOAttachments_Select.run({\n      \"POId\": PO_Table.selectedRow.Id\n    })).then(() => storeValue('ActualFileName', '')).then(() => showAlert(\"PO File Deleted\", \"success\")).then(() => FileUpload_Check.run({\n      \"POId\": PO_Table.selectedRow.EId\n    }));\n  } catch (err) {\n    if (err.message == \"Cannot read properties of undefined (reading 'data')\") {\n      Promise.all([FileUploadProcess.setError(\"Network got disconnected!, Please check your connection and retry\"), storeValue('closedisable', 'True'), showAlert('Network got disconnected!, Please check your connection and retry', 'error')]);\n    } else {\n      Promise.all([FileUploadProcess.setError(\"Delete Failed retry, \" + err.message), storeValue('closedisable', 'True'), showAlert(\"Delete Failed retry, \" + err.message, 'error')]);\n    }\n  }\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"FileId"}]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async FileId => {\n  try {\n    let fileObject = \"\";\n    await FileUploadProcess.clearError();\n    fileObject = await FileUploadProcess.getFileObject(appsmith.store.ActualFileName, PO_Table.selectedRow.Id, 'POId');\n    if (appsmith.store.ErrorOccured === true) {\n      await showAlert(\"File not found in sharepoint, Deleting in database\");\n      await FileUploadProcess.setError(\"No files exist!\");\n    } else {\n      console.log(fileObject);\n      let driveId = FileUploadProcess.getValue('EstimatePO', 'DriveId');\n      let itemId = fileObject.driveItem[\"id\"];\n      let response = \"\";\n      response = await File_Delete.run({\n        \"driveId\": driveId,\n        \"itemId\": itemId\n      });\n    }\n    await EPOAttachments_Delete.run({\n      \"FileId\": FileId\n    }).then(() => EPOAttachments_Select.run({\n      \"POId\": PO_Table.selectedRow.Id\n    })).then(() => storeValue('ActualFileName', '')).then(() => showAlert(\"PO File Deleted\", \"success\")).then(() => FileUpload_Check.run({\n      \"POId\": PO_Table.selectedRow.EId\n    }));\n  } catch (err) {\n    if (err.message == \"Cannot read properties of undefined (reading 'data')\") {\n      Promise.all([FileUploadProcess.setError(\"Network got disconnected!, Please check your connection and retry\"), storeValue('closedisable', 'True'), showAlert('Network got disconnected!, Please check your connection and retry', 'error')]);\n    } else {\n      Promise.all([FileUploadProcess.setError(\"Delete Failed retry, \" + err.message), storeValue('closedisable', 'True'), showAlert(\"Delete Failed retry, \" + err.message, 'error')]);\n    }\n  }\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-15T09:06:24Z"},"id":"PO Entry_FileUploadProcess.runDeleteFile","deleted":false,"gitSyncId":"67f4d81e59d0ae34925978ba_67fe2190358e8b1adbeac775"},{"pluginType":"JS","pluginId":"js-plugin","unpublishedAction":{"name":"retryfunction","fullyQualifiedName":"FileUploadProcess.retryfunction","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","collectionId":"PO Entry_FileUploadProcess","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async () => {\n  if (appsmith.store.add == 1) {\n    await FileUploadProcess.runCreateFile(PO_Table.selectedRow.Id, FileComments_Input.text);\n  } else if (appsmith.store.add == 2) {\n    await FileUploadProcess.runModifyFile(POAttachments_Table.selectedRow.Id, FileComments_Input.text);\n  } else {\n    await FileUploadProcess.setError('value error in retry');\n  }\n}","selfReferencingDataPaths":[],"jsArguments":[]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async () => {\n  if (appsmith.store.add == 1) {\n    await FileUploadProcess.runCreateFile(PO_Table.selectedRow.Id, FileComments_Input.text);\n  } else if (appsmith.store.add == 2) {\n    await FileUploadProcess.runModifyFile(POAttachments_Table.selectedRow.Id, FileComments_Input.text);\n  } else {\n    await FileUploadProcess.setError('value error in retry');\n  }\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-15T09:06:24Z"},"publishedAction":{"name":"retryfunction","fullyQualifiedName":"FileUploadProcess.retryfunction","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","collectionId":"PO Entry_FileUploadProcess","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async () => {\n  if (appsmith.store.add == 1) {\n    await FileUploadProcess.runCreateFile(PO_Table.selectedRow.Id, FileComments_Input.text);\n  } else if (appsmith.store.add == 2) {\n    await FileUploadProcess.runModifyFile(POAttachments_Table.selectedRow.Id, FileComments_Input.text);\n  } else {\n    await FileUploadProcess.setError('value error in retry');\n  }\n}","selfReferencingDataPaths":[],"jsArguments":[]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async () => {\n  if (appsmith.store.add == 1) {\n    await FileUploadProcess.runCreateFile(PO_Table.selectedRow.Id, FileComments_Input.text);\n  } else if (appsmith.store.add == 2) {\n    await FileUploadProcess.runModifyFile(POAttachments_Table.selectedRow.Id, FileComments_Input.text);\n  } else {\n    await FileUploadProcess.setError('value error in retry');\n  }\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-15T09:06:24Z"},"id":"PO Entry_FileUploadProcess.retryfunction","deleted":false,"gitSyncId":"67f4d81e59d0ae34925978ba_67fe2190358e8b1adbeac76f"},{"pluginType":"JS","pluginId":"js-plugin","unpublishedAction":{"name":"getValue","fullyQualifiedName":"FileUploadProcess.getValue","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","collectionId":"PO Entry_FileUploadProcess","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"(modelType, key) => {\n  if (appsmith.URL.hostname == \"erp-dev.anoralabs.com\") {\n    return FileUploadProcess.fileUploadStruct[modelType][key];\n  } else {\n    return FileUploadProcess.fileUploadStructProd[modelType][key];\n  }\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"modelType"},{"name":"key"}]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["(modelType, key) => {\n  if (appsmith.URL.hostname == \"erp-dev.anoralabs.com\") {\n    return FileUploadProcess.fileUploadStruct[modelType][key];\n  } else {\n    return FileUploadProcess.fileUploadStructProd[modelType][key];\n  }\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-15T09:06:24Z"},"publishedAction":{"name":"getValue","fullyQualifiedName":"FileUploadProcess.getValue","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","collectionId":"PO Entry_FileUploadProcess","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"(modelType, key) => {\n  if (appsmith.URL.hostname == \"erp-dev.anoralabs.com\") {\n    return FileUploadProcess.fileUploadStruct[modelType][key];\n  } else {\n    return FileUploadProcess.fileUploadStructProd[modelType][key];\n  }\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"modelType"},{"name":"key"}]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["(modelType, key) => {\n  if (appsmith.URL.hostname == \"erp-dev.anoralabs.com\") {\n    return FileUploadProcess.fileUploadStruct[modelType][key];\n  } else {\n    return FileUploadProcess.fileUploadStructProd[modelType][key];\n  }\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-15T09:06:24Z"},"id":"PO Entry_FileUploadProcess.getValue","deleted":false,"gitSyncId":"67f4d81e59d0ae34925978ba_67fe2190358e8b1adbeac773"},{"pluginType":"JS","pluginId":"js-plugin","unpublishedAction":{"name":"getFileObject","fullyQualifiedName":"FileUploadProcess.getFileObject","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","collectionId":"PO Entry_FileUploadProcess","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async (fileName, Number, NumberName) => {\n  let response = \"\";\n  let params = {\n    'siteId': FileUploadProcess.getValue('EstimatePO', 'SharepointId'),\n    'listId': FileUploadProcess.getValue('EstimatePO', 'ListId'),\n    'Number': Number,\n    'NumberName': NumberName\n  };\n  response = await ListItemsDelete_Select.run(params);\n  console.log('dwnld res is', response);\n  if (response.value.length == 0) {\n    return await FileUploadProcess.setError(\"No files exist!\");\n  }\n  for (const eachFile of response.value) {\n    if (eachFile.driveItem.name == fileName) {\n      await storeValue('fileerror', 'false');\n      return eachFile;\n    }\n  }\n  await storeValue('fileerror', 'true');\n  return await FileUploadProcess.setError(\"Cannot find file \" + fileName);\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"fileName"},{"name":"Number"},{"name":"NumberName"}]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async (fileName, Number, NumberName) => {\n  let response = \"\";\n  let params = {\n    'siteId': FileUploadProcess.getValue('EstimatePO', 'SharepointId'),\n    'listId': FileUploadProcess.getValue('EstimatePO', 'ListId'),\n    'Number': Number,\n    'NumberName': NumberName\n  };\n  response = await ListItemsDelete_Select.run(params);\n  console.log('dwnld res is', response);\n  if (response.value.length == 0) {\n    return await FileUploadProcess.setError(\"No files exist!\");\n  }\n  for (const eachFile of response.value) {\n    if (eachFile.driveItem.name == fileName) {\n      await storeValue('fileerror', 'false');\n      return eachFile;\n    }\n  }\n  await storeValue('fileerror', 'true');\n  return await FileUploadProcess.setError(\"Cannot find file \" + fileName);\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-15T09:06:23Z"},"publishedAction":{"name":"getFileObject","fullyQualifiedName":"FileUploadProcess.getFileObject","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","collectionId":"PO Entry_FileUploadProcess","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async (fileName, Number, NumberName) => {\n  let response = \"\";\n  let params = {\n    'siteId': FileUploadProcess.getValue('EstimatePO', 'SharepointId'),\n    'listId': FileUploadProcess.getValue('EstimatePO', 'ListId'),\n    'Number': Number,\n    'NumberName': NumberName\n  };\n  response = await ListItemsDelete_Select.run(params);\n  console.log('dwnld res is', response);\n  if (response.value.length == 0) {\n    return await FileUploadProcess.setError(\"No files exist!\");\n  }\n  for (const eachFile of response.value) {\n    if (eachFile.driveItem.name == fileName) {\n      await storeValue('fileerror', 'false');\n      return eachFile;\n    }\n  }\n  await storeValue('fileerror', 'true');\n  return await FileUploadProcess.setError(\"Cannot find file \" + fileName);\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"fileName"},{"name":"Number"},{"name":"NumberName"}]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async (fileName, Number, NumberName) => {\n  let response = \"\";\n  let params = {\n    'siteId': FileUploadProcess.getValue('EstimatePO', 'SharepointId'),\n    'listId': FileUploadProcess.getValue('EstimatePO', 'ListId'),\n    'Number': Number,\n    'NumberName': NumberName\n  };\n  response = await ListItemsDelete_Select.run(params);\n  console.log('dwnld res is', response);\n  if (response.value.length == 0) {\n    return await FileUploadProcess.setError(\"No files exist!\");\n  }\n  for (const eachFile of response.value) {\n    if (eachFile.driveItem.name == fileName) {\n      await storeValue('fileerror', 'false');\n      return eachFile;\n    }\n  }\n  await storeValue('fileerror', 'true');\n  return await FileUploadProcess.setError(\"Cannot find file \" + fileName);\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-15T09:06:23Z"},"id":"PO Entry_FileUploadProcess.getFileObject","deleted":false,"gitSyncId":"67f4d81e59d0ae34925978ba_67fe218f358e8b1adbeac761"},{"pluginType":"JS","pluginId":"js-plugin","unpublishedAction":{"name":"modifyFileMetadata","fullyQualifiedName":"FileUploadProcess.modifyFileMetadata","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","collectionId":"PO Entry_FileUploadProcess","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async (fileName, fileParams, NumberName, Number) => {\n  let response = \"\";\n  let params = {\n    'siteId': FileUploadProcess.getValue('EstimatePO', 'SharepointId'),\n    'listId': FileUploadProcess.getValue('EstimatePO', 'ListId'),\n    'NumberName': NumberName,\n    'Number': Number\n  };\n  if (POAttachments_Table.selectedRowIndex == -1) {\n    console.log(params, 'metabreak');\n    response = await ListItemMetaDataCreate_Select.run(params);\n    console.log(response);\n  } else {\n    response = await ListItemsDelete_Select.run(params);\n  }\n  if (response.value.length == 0) {\n    return await FileUploadProcess.setError(\"No files exist!\");\n  }\n  for (const eachFile of response.value) {\n    console.log(\"eachfile\", eachFile);\n    if (eachFile.driveItem.name == fileName) {\n      console.log(\"eachfile\", eachFile);\n      let query_params = {\n        'siteId': FileUploadProcess.getValue('EstimatePO', 'SharepointId'),\n        'listId': FileUploadProcess.getValue('EstimatePO', 'ListId'),\n        'listItemId': eachFile.id,\n        'fileParams': fileParams\n      };\n      console.log(query_params);\n      return await FileMetadata_Create.run(query_params);\n    }\n  }\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"fileName"},{"name":"fileParams"},{"name":"NumberName"},{"name":"Number"}]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async (fileName, fileParams, NumberName, Number) => {\n  let response = \"\";\n  let params = {\n    'siteId': FileUploadProcess.getValue('EstimatePO', 'SharepointId'),\n    'listId': FileUploadProcess.getValue('EstimatePO', 'ListId'),\n    'NumberName': NumberName,\n    'Number': Number\n  };\n  if (POAttachments_Table.selectedRowIndex == -1) {\n    console.log(params, 'metabreak');\n    response = await ListItemMetaDataCreate_Select.run(params);\n    console.log(response);\n  } else {\n    response = await ListItemsDelete_Select.run(params);\n  }\n  if (response.value.length == 0) {\n    return await FileUploadProcess.setError(\"No files exist!\");\n  }\n  for (const eachFile of response.value) {\n    console.log(\"eachfile\", eachFile);\n    if (eachFile.driveItem.name == fileName) {\n      console.log(\"eachfile\", eachFile);\n      let query_params = {\n        'siteId': FileUploadProcess.getValue('EstimatePO', 'SharepointId'),\n        'listId': FileUploadProcess.getValue('EstimatePO', 'ListId'),\n        'listItemId': eachFile.id,\n        'fileParams': fileParams\n      };\n      console.log(query_params);\n      return await FileMetadata_Create.run(query_params);\n    }\n  }\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-15T09:06:24Z"},"publishedAction":{"name":"modifyFileMetadata","fullyQualifiedName":"FileUploadProcess.modifyFileMetadata","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","collectionId":"PO Entry_FileUploadProcess","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async (fileName, fileParams, NumberName, Number) => {\n  let response = \"\";\n  let params = {\n    'siteId': FileUploadProcess.getValue('EstimatePO', 'SharepointId'),\n    'listId': FileUploadProcess.getValue('EstimatePO', 'ListId'),\n    'NumberName': NumberName,\n    'Number': Number\n  };\n  if (POAttachments_Table.selectedRowIndex == -1) {\n    console.log(params, 'metabreak');\n    response = await ListItemMetaDataCreate_Select.run(params);\n    console.log(response);\n  } else {\n    response = await ListItemsDelete_Select.run(params);\n  }\n  if (response.value.length == 0) {\n    return await FileUploadProcess.setError(\"No files exist!\");\n  }\n  for (const eachFile of response.value) {\n    console.log(\"eachfile\", eachFile);\n    if (eachFile.driveItem.name == fileName) {\n      console.log(\"eachfile\", eachFile);\n      let query_params = {\n        'siteId': FileUploadProcess.getValue('EstimatePO', 'SharepointId'),\n        'listId': FileUploadProcess.getValue('EstimatePO', 'ListId'),\n        'listItemId': eachFile.id,\n        'fileParams': fileParams\n      };\n      console.log(query_params);\n      return await FileMetadata_Create.run(query_params);\n    }\n  }\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"fileName"},{"name":"fileParams"},{"name":"NumberName"},{"name":"Number"}]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async (fileName, fileParams, NumberName, Number) => {\n  let response = \"\";\n  let params = {\n    'siteId': FileUploadProcess.getValue('EstimatePO', 'SharepointId'),\n    'listId': FileUploadProcess.getValue('EstimatePO', 'ListId'),\n    'NumberName': NumberName,\n    'Number': Number\n  };\n  if (POAttachments_Table.selectedRowIndex == -1) {\n    console.log(params, 'metabreak');\n    response = await ListItemMetaDataCreate_Select.run(params);\n    console.log(response);\n  } else {\n    response = await ListItemsDelete_Select.run(params);\n  }\n  if (response.value.length == 0) {\n    return await FileUploadProcess.setError(\"No files exist!\");\n  }\n  for (const eachFile of response.value) {\n    console.log(\"eachfile\", eachFile);\n    if (eachFile.driveItem.name == fileName) {\n      console.log(\"eachfile\", eachFile);\n      let query_params = {\n        'siteId': FileUploadProcess.getValue('EstimatePO', 'SharepointId'),\n        'listId': FileUploadProcess.getValue('EstimatePO', 'ListId'),\n        'listItemId': eachFile.id,\n        'fileParams': fileParams\n      };\n      console.log(query_params);\n      return await FileMetadata_Create.run(query_params);\n    }\n  }\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-15T09:06:24Z"},"id":"PO Entry_FileUploadProcess.modifyFileMetadata","deleted":false,"gitSyncId":"67f4d81e59d0ae34925978ba_67fe2190358e8b1adbeac777"},{"pluginType":"JS","pluginId":"js-plugin","unpublishedAction":{"name":"clearError","fullyQualifiedName":"FileUploadProcess.clearError","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","collectionId":"PO Entry_FileUploadProcess","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async () => {\n  await storeValue('ErrorMessage', \"\");\n  await storeValue('ErrorVisibility', false);\n  await storeValue('ErrorOccured', false);\n}","selfReferencingDataPaths":[],"jsArguments":[]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async () => {\n  await storeValue('ErrorMessage', \"\");\n  await storeValue('ErrorVisibility', false);\n  await storeValue('ErrorOccured', false);\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-15T09:06:23Z"},"publishedAction":{"name":"clearError","fullyQualifiedName":"FileUploadProcess.clearError","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","collectionId":"PO Entry_FileUploadProcess","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async () => {\n  await storeValue('ErrorMessage', \"\");\n  await storeValue('ErrorVisibility', false);\n  await storeValue('ErrorOccured', false);\n}","selfReferencingDataPaths":[],"jsArguments":[]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async () => {\n  await storeValue('ErrorMessage', \"\");\n  await storeValue('ErrorVisibility', false);\n  await storeValue('ErrorOccured', false);\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-15T09:06:23Z"},"id":"PO Entry_FileUploadProcess.clearError","deleted":false,"gitSyncId":"67f4d81e59d0ae34925978ba_67fe218f358e8b1adbeac769"},{"pluginType":"JS","pluginId":"js-plugin","unpublishedAction":{"name":"runCreateFile","fullyQualifiedName":"FileUploadProcess.runCreateFile","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","collectionId":"PO Entry_FileUploadProcess","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async (POId, Comments) => {\n  try {\n    let statename = appsmith.store.statename == null ? storeValue('statename', 'FileCheck') : appsmith.store.statename;\n    let progressstatus = appsmith.store.progressstatus == null ? storeValue('progressstatus', '0') : appsmith.store.progressstatus;\n    let retry = 0;\n    await FileUploadProcess.clearError();\n    await storeValue('closedisable', 'False');\n    if (appsmith.store.statename == 'Completed') {\n      statename = \"FileCheck\";\n      progressstatus = 0;\n      await storeValue('statename', statename);\n      await storeValue('progressstatus', progressstatus);\n    }\n    showModal('Progress_Modal');\n    let fileParams = {\n      \"ModifiedBy\": appsmith.user.email.split(\"@\")[0],\n      \"FileType\": FilePicker.files[0].name.split('.').pop().trim(),\n      \"PONumber\": PO_Table.selectedRow.PurchaseOrderNumber,\n      \"POId\": PO_Table.selectedRow.Id,\n      \"OriginalFileName\": FilePicker.files[0].name\n    };\n    let DriveId = FileUploadProcess.getValue('EstimatePO', 'DriveId');\n    let DriveItemId = FileUploadProcess.getValue('EstimatePO', 'DriveItemId');\n    while (statename != 'Completed') {\n      console.log('statusckeckn', progressstatus);\n      console.log(statename);\n      if (statename != 'Error') {\n        await storeValue('statename', statename);\n        await storeValue('progressstatus', progressstatus);\n      }\n      switch (statename) {\n        case 'FileCheck':\n          let response = await SpecificFilesInDrive_Select.run({\n            'DriveId': DriveId,\n            'DriveItemId': DriveItemId,\n            'FileName': ActualFileName_Input.text\n          });\n          console.log(response, 'response');\n          if (response.value.length == 0) {\n            statename = 'UploadToSharePoint';\n            progressstatus = 25;\n          } else {\n            await FileUploadProcess.setError(\"File Name Not Unique! Enter different user \");\n            statename = 'Error';\n          }\n          break;\n        case 'DBInsert':\n          await EPOAttachments_Insert.run({\n            \"POId\": POId,\n            \"FileName\": appsmith.store.ActualFileName,\n            \"Comments\": Comments\n          }).then(() => EPOAttachments_Select.run({\n            \"POId\": POId\n          }));\n          statename = 'UpdateMetadata';\n          progressstatus = 75;\n          break;\n        case 'UploadToSharePoint':\n          let uploadurl = await UploadSession_Create.run({\n            'DriveId': DriveId,\n            'DriveItemId': DriveItemId,\n            'fileName': ActualFileName_Input.text\n          });\n          console.log('uploadurl is', uploadurl.uploadUrl);\n          let filesize = FilePicker.files[0].size;\n          let startindex = 0;\n          let responsecreate = \"\";\n          let upload_chunk = filesize;\n          let endindex = filesize - 1;\n          responsecreate = await FileUpload_Create.run(() => {}, () => {}, {\n            'uploadurl': UploadSession_Create.data.uploadUrl.split('//')[1],\n            'range': upload_chunk,\n            'startindex': startindex,\n            'endindex': endindex,\n            'filesize': filesize\n          });\n          console.log('responsecreate is', FileUpload_Create.data);\n          console.log('name', FileUpload_Create.data.name, \"Name\");\n          if (FileUpload_Create.data.length != 0) {\n            if (FileUpload_Create.data.name == ActualFileName_Input.text) {\n              statename = 'DBInsert';\n              progressstatus = 50;\n            }\n          } else if (retry == 0) {\n            retry++;\n            await FileUploadProcess.setError(\"Upload Failed in first attempt, attempting second\");\n          } else {\n            await FileUploadProcess.setError(\"Upload Failed!, File Upload Create Response not valid\");\n            statename = 'Error';\n          }\n          break;\n        case 'UpdateMetadata':\n          let responsemetadata = \"\";\n          responsemetadata = await FileUploadProcess.modifyFileMetadata(appsmith.store.ActualFileName, fileParams, 'POId', PO_Table.selectedRow.Id);\n          console.log('metadata', responsemetadata);\n          if (FileMetadata_Create.data.length != 0) {\n            if (FileMetadata_Create.data.POId == PO_Table.selectedRow.Id) {\n              statename = 'Completed';\n              progressstatus = 100;\n            }\n          } else if (retry == 0) {\n            retry++;\n            await FileUploadProcess.setError(\"First Attempt for Metadata is failed, Attempting Second\");\n          } else {\n            await FileUploadProcess.setError(\"Upload Failed!, Metadata create response not valid\");\n            statename = 'Error';\n          }\n          break;\n        case 'Error':\n          await storeValue('closedisable', 'True');\n          statename = 'Completed';\n          break;\n      }\n    }\n    await storeValue('statename', statename);\n    await storeValue('progressstatus', progressstatus);\n    if (appsmith.store.statename == 'Completed' && appsmith.store.ErrorMessage == '') {\n      await FileUploadProcess.runRefreshFunc().then(() => closeModal('Progress_Modal')).then(() => Promise.all([showModal('FileUpload_Modal'), EPOAttachments_Select.run({\n        \"POId\": PO_Table.selectedRow.Id\n      })])).then(() => showAlert('PO File Inserted', 'success')).then(() => FileUpload_Check.run({\n        'POId': PO_Table.selectedRow.Id\n      }));\n    }\n  } catch (err) {\n    if (err.message == \"Cannot read properties of undefined (reading 'data')\") {\n      Promise.all([FileUploadProcess.setError(\"Network got disconnected!, Please check your connection and retry\"), storeValue('closedisable', 'True'), showAlert('Network got disconnected!, Please check your connection and retry', 'error')]);\n    } else {\n      Promise.all([FileUploadProcess.setError(\"Upload Failed retry, \" + err.message), storeValue('closedisable', 'True'), showAlert(\"Upload Failed retry, \" + err.message, 'error')]);\n    }\n  }\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"POId"},{"name":"Comments"}]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async (POId, Comments) => {\n  try {\n    let statename = appsmith.store.statename == null ? storeValue('statename', 'FileCheck') : appsmith.store.statename;\n    let progressstatus = appsmith.store.progressstatus == null ? storeValue('progressstatus', '0') : appsmith.store.progressstatus;\n    let retry = 0;\n    await FileUploadProcess.clearError();\n    await storeValue('closedisable', 'False');\n    if (appsmith.store.statename == 'Completed') {\n      statename = \"FileCheck\";\n      progressstatus = 0;\n      await storeValue('statename', statename);\n      await storeValue('progressstatus', progressstatus);\n    }\n    showModal('Progress_Modal');\n    let fileParams = {\n      \"ModifiedBy\": appsmith.user.email.split(\"@\")[0],\n      \"FileType\": FilePicker.files[0].name.split('.').pop().trim(),\n      \"PONumber\": PO_Table.selectedRow.PurchaseOrderNumber,\n      \"POId\": PO_Table.selectedRow.Id,\n      \"OriginalFileName\": FilePicker.files[0].name\n    };\n    let DriveId = FileUploadProcess.getValue('EstimatePO', 'DriveId');\n    let DriveItemId = FileUploadProcess.getValue('EstimatePO', 'DriveItemId');\n    while (statename != 'Completed') {\n      console.log('statusckeckn', progressstatus);\n      console.log(statename);\n      if (statename != 'Error') {\n        await storeValue('statename', statename);\n        await storeValue('progressstatus', progressstatus);\n      }\n      switch (statename) {\n        case 'FileCheck':\n          let response = await SpecificFilesInDrive_Select.run({\n            'DriveId': DriveId,\n            'DriveItemId': DriveItemId,\n            'FileName': ActualFileName_Input.text\n          });\n          console.log(response, 'response');\n          if (response.value.length == 0) {\n            statename = 'UploadToSharePoint';\n            progressstatus = 25;\n          } else {\n            await FileUploadProcess.setError(\"File Name Not Unique! Enter different user \");\n            statename = 'Error';\n          }\n          break;\n        case 'DBInsert':\n          await EPOAttachments_Insert.run({\n            \"POId\": POId,\n            \"FileName\": appsmith.store.ActualFileName,\n            \"Comments\": Comments\n          }).then(() => EPOAttachments_Select.run({\n            \"POId\": POId\n          }));\n          statename = 'UpdateMetadata';\n          progressstatus = 75;\n          break;\n        case 'UploadToSharePoint':\n          let uploadurl = await UploadSession_Create.run({\n            'DriveId': DriveId,\n            'DriveItemId': DriveItemId,\n            'fileName': ActualFileName_Input.text\n          });\n          console.log('uploadurl is', uploadurl.uploadUrl);\n          let filesize = FilePicker.files[0].size;\n          let startindex = 0;\n          let responsecreate = \"\";\n          let upload_chunk = filesize;\n          let endindex = filesize - 1;\n          responsecreate = await FileUpload_Create.run(() => {}, () => {}, {\n            'uploadurl': UploadSession_Create.data.uploadUrl.split('//')[1],\n            'range': upload_chunk,\n            'startindex': startindex,\n            'endindex': endindex,\n            'filesize': filesize\n          });\n          console.log('responsecreate is', FileUpload_Create.data);\n          console.log('name', FileUpload_Create.data.name, \"Name\");\n          if (FileUpload_Create.data.length != 0) {\n            if (FileUpload_Create.data.name == ActualFileName_Input.text) {\n              statename = 'DBInsert';\n              progressstatus = 50;\n            }\n          } else if (retry == 0) {\n            retry++;\n            await FileUploadProcess.setError(\"Upload Failed in first attempt, attempting second\");\n          } else {\n            await FileUploadProcess.setError(\"Upload Failed!, File Upload Create Response not valid\");\n            statename = 'Error';\n          }\n          break;\n        case 'UpdateMetadata':\n          let responsemetadata = \"\";\n          responsemetadata = await FileUploadProcess.modifyFileMetadata(appsmith.store.ActualFileName, fileParams, 'POId', PO_Table.selectedRow.Id);\n          console.log('metadata', responsemetadata);\n          if (FileMetadata_Create.data.length != 0) {\n            if (FileMetadata_Create.data.POId == PO_Table.selectedRow.Id) {\n              statename = 'Completed';\n              progressstatus = 100;\n            }\n          } else if (retry == 0) {\n            retry++;\n            await FileUploadProcess.setError(\"First Attempt for Metadata is failed, Attempting Second\");\n          } else {\n            await FileUploadProcess.setError(\"Upload Failed!, Metadata create response not valid\");\n            statename = 'Error';\n          }\n          break;\n        case 'Error':\n          await storeValue('closedisable', 'True');\n          statename = 'Completed';\n          break;\n      }\n    }\n    await storeValue('statename', statename);\n    await storeValue('progressstatus', progressstatus);\n    if (appsmith.store.statename == 'Completed' && appsmith.store.ErrorMessage == '') {\n      await FileUploadProcess.runRefreshFunc().then(() => closeModal('Progress_Modal')).then(() => Promise.all([showModal('FileUpload_Modal'), EPOAttachments_Select.run({\n        \"POId\": PO_Table.selectedRow.Id\n      })])).then(() => showAlert('PO File Inserted', 'success')).then(() => FileUpload_Check.run({\n        'POId': PO_Table.selectedRow.Id\n      }));\n    }\n  } catch (err) {\n    if (err.message == \"Cannot read properties of undefined (reading 'data')\") {\n      Promise.all([FileUploadProcess.setError(\"Network got disconnected!, Please check your connection and retry\"), storeValue('closedisable', 'True'), showAlert('Network got disconnected!, Please check your connection and retry', 'error')]);\n    } else {\n      Promise.all([FileUploadProcess.setError(\"Upload Failed retry, \" + err.message), storeValue('closedisable', 'True'), showAlert(\"Upload Failed retry, \" + err.message, 'error')]);\n    }\n  }\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-15T09:06:23Z"},"publishedAction":{"name":"runCreateFile","fullyQualifiedName":"FileUploadProcess.runCreateFile","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","collectionId":"PO Entry_FileUploadProcess","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async (POId, Comments) => {\n  try {\n    let statename = appsmith.store.statename == null ? storeValue('statename', 'FileCheck') : appsmith.store.statename;\n    let progressstatus = appsmith.store.progressstatus == null ? storeValue('progressstatus', '0') : appsmith.store.progressstatus;\n    let retry = 0;\n    await FileUploadProcess.clearError();\n    await storeValue('closedisable', 'False');\n    if (appsmith.store.statename == 'Completed') {\n      statename = \"FileCheck\";\n      progressstatus = 0;\n      await storeValue('statename', statename);\n      await storeValue('progressstatus', progressstatus);\n    }\n    showModal('Progress_Modal');\n    let fileParams = {\n      \"ModifiedBy\": appsmith.user.email.split(\"@\")[0],\n      \"FileType\": FilePicker.files[0].name.split('.').pop().trim(),\n      \"PONumber\": PO_Table.selectedRow.PurchaseOrderNumber,\n      \"POId\": PO_Table.selectedRow.Id,\n      \"OriginalFileName\": FilePicker.files[0].name\n    };\n    let DriveId = FileUploadProcess.getValue('EstimatePO', 'DriveId');\n    let DriveItemId = FileUploadProcess.getValue('EstimatePO', 'DriveItemId');\n    while (statename != 'Completed') {\n      console.log('statusckeckn', progressstatus);\n      console.log(statename);\n      if (statename != 'Error') {\n        await storeValue('statename', statename);\n        await storeValue('progressstatus', progressstatus);\n      }\n      switch (statename) {\n        case 'FileCheck':\n          let response = await SpecificFilesInDrive_Select.run({\n            'DriveId': DriveId,\n            'DriveItemId': DriveItemId,\n            'FileName': ActualFileName_Input.text\n          });\n          console.log(response, 'response');\n          if (response.value.length == 0) {\n            statename = 'UploadToSharePoint';\n            progressstatus = 25;\n          } else {\n            await FileUploadProcess.setError(\"File Name Not Unique! Enter different user \");\n            statename = 'Error';\n          }\n          break;\n        case 'DBInsert':\n          await EPOAttachments_Insert.run({\n            \"POId\": POId,\n            \"FileName\": appsmith.store.ActualFileName,\n            \"Comments\": Comments\n          }).then(() => EPOAttachments_Select.run({\n            \"POId\": POId\n          }));\n          statename = 'UpdateMetadata';\n          progressstatus = 75;\n          break;\n        case 'UploadToSharePoint':\n          let uploadurl = await UploadSession_Create.run({\n            'DriveId': DriveId,\n            'DriveItemId': DriveItemId,\n            'fileName': ActualFileName_Input.text\n          });\n          console.log('uploadurl is', uploadurl.uploadUrl);\n          let filesize = FilePicker.files[0].size;\n          let startindex = 0;\n          let responsecreate = \"\";\n          let upload_chunk = filesize;\n          let endindex = filesize - 1;\n          responsecreate = await FileUpload_Create.run(() => {}, () => {}, {\n            'uploadurl': UploadSession_Create.data.uploadUrl.split('//')[1],\n            'range': upload_chunk,\n            'startindex': startindex,\n            'endindex': endindex,\n            'filesize': filesize\n          });\n          console.log('responsecreate is', FileUpload_Create.data);\n          console.log('name', FileUpload_Create.data.name, \"Name\");\n          if (FileUpload_Create.data.length != 0) {\n            if (FileUpload_Create.data.name == ActualFileName_Input.text) {\n              statename = 'DBInsert';\n              progressstatus = 50;\n            }\n          } else if (retry == 0) {\n            retry++;\n            await FileUploadProcess.setError(\"Upload Failed in first attempt, attempting second\");\n          } else {\n            await FileUploadProcess.setError(\"Upload Failed!, File Upload Create Response not valid\");\n            statename = 'Error';\n          }\n          break;\n        case 'UpdateMetadata':\n          let responsemetadata = \"\";\n          responsemetadata = await FileUploadProcess.modifyFileMetadata(appsmith.store.ActualFileName, fileParams, 'POId', PO_Table.selectedRow.Id);\n          console.log('metadata', responsemetadata);\n          if (FileMetadata_Create.data.length != 0) {\n            if (FileMetadata_Create.data.POId == PO_Table.selectedRow.Id) {\n              statename = 'Completed';\n              progressstatus = 100;\n            }\n          } else if (retry == 0) {\n            retry++;\n            await FileUploadProcess.setError(\"First Attempt for Metadata is failed, Attempting Second\");\n          } else {\n            await FileUploadProcess.setError(\"Upload Failed!, Metadata create response not valid\");\n            statename = 'Error';\n          }\n          break;\n        case 'Error':\n          await storeValue('closedisable', 'True');\n          statename = 'Completed';\n          break;\n      }\n    }\n    await storeValue('statename', statename);\n    await storeValue('progressstatus', progressstatus);\n    if (appsmith.store.statename == 'Completed' && appsmith.store.ErrorMessage == '') {\n      await FileUploadProcess.runRefreshFunc().then(() => closeModal('Progress_Modal')).then(() => Promise.all([showModal('FileUpload_Modal'), EPOAttachments_Select.run({\n        \"POId\": PO_Table.selectedRow.Id\n      })])).then(() => showAlert('PO File Inserted', 'success')).then(() => FileUpload_Check.run({\n        'POId': PO_Table.selectedRow.Id\n      }));\n    }\n  } catch (err) {\n    if (err.message == \"Cannot read properties of undefined (reading 'data')\") {\n      Promise.all([FileUploadProcess.setError(\"Network got disconnected!, Please check your connection and retry\"), storeValue('closedisable', 'True'), showAlert('Network got disconnected!, Please check your connection and retry', 'error')]);\n    } else {\n      Promise.all([FileUploadProcess.setError(\"Upload Failed retry, \" + err.message), storeValue('closedisable', 'True'), showAlert(\"Upload Failed retry, \" + err.message, 'error')]);\n    }\n  }\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"POId"},{"name":"Comments"}]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async (POId, Comments) => {\n  try {\n    let statename = appsmith.store.statename == null ? storeValue('statename', 'FileCheck') : appsmith.store.statename;\n    let progressstatus = appsmith.store.progressstatus == null ? storeValue('progressstatus', '0') : appsmith.store.progressstatus;\n    let retry = 0;\n    await FileUploadProcess.clearError();\n    await storeValue('closedisable', 'False');\n    if (appsmith.store.statename == 'Completed') {\n      statename = \"FileCheck\";\n      progressstatus = 0;\n      await storeValue('statename', statename);\n      await storeValue('progressstatus', progressstatus);\n    }\n    showModal('Progress_Modal');\n    let fileParams = {\n      \"ModifiedBy\": appsmith.user.email.split(\"@\")[0],\n      \"FileType\": FilePicker.files[0].name.split('.').pop().trim(),\n      \"PONumber\": PO_Table.selectedRow.PurchaseOrderNumber,\n      \"POId\": PO_Table.selectedRow.Id,\n      \"OriginalFileName\": FilePicker.files[0].name\n    };\n    let DriveId = FileUploadProcess.getValue('EstimatePO', 'DriveId');\n    let DriveItemId = FileUploadProcess.getValue('EstimatePO', 'DriveItemId');\n    while (statename != 'Completed') {\n      console.log('statusckeckn', progressstatus);\n      console.log(statename);\n      if (statename != 'Error') {\n        await storeValue('statename', statename);\n        await storeValue('progressstatus', progressstatus);\n      }\n      switch (statename) {\n        case 'FileCheck':\n          let response = await SpecificFilesInDrive_Select.run({\n            'DriveId': DriveId,\n            'DriveItemId': DriveItemId,\n            'FileName': ActualFileName_Input.text\n          });\n          console.log(response, 'response');\n          if (response.value.length == 0) {\n            statename = 'UploadToSharePoint';\n            progressstatus = 25;\n          } else {\n            await FileUploadProcess.setError(\"File Name Not Unique! Enter different user \");\n            statename = 'Error';\n          }\n          break;\n        case 'DBInsert':\n          await EPOAttachments_Insert.run({\n            \"POId\": POId,\n            \"FileName\": appsmith.store.ActualFileName,\n            \"Comments\": Comments\n          }).then(() => EPOAttachments_Select.run({\n            \"POId\": POId\n          }));\n          statename = 'UpdateMetadata';\n          progressstatus = 75;\n          break;\n        case 'UploadToSharePoint':\n          let uploadurl = await UploadSession_Create.run({\n            'DriveId': DriveId,\n            'DriveItemId': DriveItemId,\n            'fileName': ActualFileName_Input.text\n          });\n          console.log('uploadurl is', uploadurl.uploadUrl);\n          let filesize = FilePicker.files[0].size;\n          let startindex = 0;\n          let responsecreate = \"\";\n          let upload_chunk = filesize;\n          let endindex = filesize - 1;\n          responsecreate = await FileUpload_Create.run(() => {}, () => {}, {\n            'uploadurl': UploadSession_Create.data.uploadUrl.split('//')[1],\n            'range': upload_chunk,\n            'startindex': startindex,\n            'endindex': endindex,\n            'filesize': filesize\n          });\n          console.log('responsecreate is', FileUpload_Create.data);\n          console.log('name', FileUpload_Create.data.name, \"Name\");\n          if (FileUpload_Create.data.length != 0) {\n            if (FileUpload_Create.data.name == ActualFileName_Input.text) {\n              statename = 'DBInsert';\n              progressstatus = 50;\n            }\n          } else if (retry == 0) {\n            retry++;\n            await FileUploadProcess.setError(\"Upload Failed in first attempt, attempting second\");\n          } else {\n            await FileUploadProcess.setError(\"Upload Failed!, File Upload Create Response not valid\");\n            statename = 'Error';\n          }\n          break;\n        case 'UpdateMetadata':\n          let responsemetadata = \"\";\n          responsemetadata = await FileUploadProcess.modifyFileMetadata(appsmith.store.ActualFileName, fileParams, 'POId', PO_Table.selectedRow.Id);\n          console.log('metadata', responsemetadata);\n          if (FileMetadata_Create.data.length != 0) {\n            if (FileMetadata_Create.data.POId == PO_Table.selectedRow.Id) {\n              statename = 'Completed';\n              progressstatus = 100;\n            }\n          } else if (retry == 0) {\n            retry++;\n            await FileUploadProcess.setError(\"First Attempt for Metadata is failed, Attempting Second\");\n          } else {\n            await FileUploadProcess.setError(\"Upload Failed!, Metadata create response not valid\");\n            statename = 'Error';\n          }\n          break;\n        case 'Error':\n          await storeValue('closedisable', 'True');\n          statename = 'Completed';\n          break;\n      }\n    }\n    await storeValue('statename', statename);\n    await storeValue('progressstatus', progressstatus);\n    if (appsmith.store.statename == 'Completed' && appsmith.store.ErrorMessage == '') {\n      await FileUploadProcess.runRefreshFunc().then(() => closeModal('Progress_Modal')).then(() => Promise.all([showModal('FileUpload_Modal'), EPOAttachments_Select.run({\n        \"POId\": PO_Table.selectedRow.Id\n      })])).then(() => showAlert('PO File Inserted', 'success')).then(() => FileUpload_Check.run({\n        'POId': PO_Table.selectedRow.Id\n      }));\n    }\n  } catch (err) {\n    if (err.message == \"Cannot read properties of undefined (reading 'data')\") {\n      Promise.all([FileUploadProcess.setError(\"Network got disconnected!, Please check your connection and retry\"), storeValue('closedisable', 'True'), showAlert('Network got disconnected!, Please check your connection and retry', 'error')]);\n    } else {\n      Promise.all([FileUploadProcess.setError(\"Upload Failed retry, \" + err.message), storeValue('closedisable', 'True'), showAlert(\"Upload Failed retry, \" + err.message, 'error')]);\n    }\n  }\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-15T09:06:23Z"},"id":"PO Entry_FileUploadProcess.runCreateFile","deleted":false,"gitSyncId":"67f4d81e59d0ae34925978ba_67fe218f358e8b1adbeac76d"},{"pluginType":"JS","pluginId":"js-plugin","unpublishedAction":{"name":"testRunRefreshFunc","fullyQualifiedName":"FileUploadProcess.testRunRefreshFunc","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","collectionId":"PO Entry_FileUploadProcess","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async () => {\n  Promise.all([resetWidget(\"FilePicker\"), storeValue('ActualFileName', \"\"), storeValue('disable', false), FileUploadProcess.clearError()]);\n}","selfReferencingDataPaths":[],"jsArguments":[]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async () => {\n  Promise.all([resetWidget(\"FilePicker\"), storeValue('ActualFileName', \"\"), storeValue('disable', false), FileUploadProcess.clearError()]);\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-15T09:06:23Z"},"publishedAction":{"name":"testRunRefreshFunc","fullyQualifiedName":"FileUploadProcess.testRunRefreshFunc","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","collectionId":"PO Entry_FileUploadProcess","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async () => {\n  Promise.all([resetWidget(\"FilePicker\"), storeValue('ActualFileName', \"\"), storeValue('disable', false), FileUploadProcess.clearError()]);\n}","selfReferencingDataPaths":[],"jsArguments":[]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async () => {\n  Promise.all([resetWidget(\"FilePicker\"), storeValue('ActualFileName', \"\"), storeValue('disable', false), FileUploadProcess.clearError()]);\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-15T09:06:23Z"},"id":"PO Entry_FileUploadProcess.testRunRefreshFunc","deleted":false,"gitSyncId":"67f4d81e59d0ae34925978ba_67fe218f358e8b1adbeac76b"},{"pluginType":"JS","pluginId":"js-plugin","unpublishedAction":{"name":"modifyMetadata","fullyQualifiedName":"FileUploadProcess.modifyMetadata","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","collectionId":"PO Entry_FileUploadProcess","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async (fileParams, Number, NumberName) => {\n  let response = \"\";\n  let metaresponse = \"\";\n  let siteId = \"\";\n  let listId = \"\";\n  Promise.all([siteId = FileUploadProcess.getValue('EstimatePO', 'SharepointId'), listId = FileUploadProcess.getValue('EstimatePO', 'ListId')]);\n  let params = {\n    'siteId': siteId,\n    'listId': listId,\n    'Number': Number,\n    'NumberName': NumberName\n  };\n  response = await ListItemsDelete_Select.run(params);\n  if (response.value.length == 0) {\n    await showAlert('Update failed', 'error');\n  }\n  let data = [];\n  for (const eachFile of response.value) {\n    let query_params = {\n      'siteId': FileUploadProcess.getValue('EstimatePO', 'SharepointId'),\n      'listId': FileUploadProcess.getValue('EstimatePO', 'ListId'),\n      'listItemId': eachFile.id,\n      'fileParams': fileParams\n    };\n    data.push(query_params);\n  }\n  const metadata = data.map(data => FileMetadata_Create.run(data));\n  return Promise.all(metadata);\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"fileParams"},{"name":"Number"},{"name":"NumberName"}]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async (fileParams, Number, NumberName) => {\n  let response = \"\";\n  let metaresponse = \"\";\n  let siteId = \"\";\n  let listId = \"\";\n  Promise.all([siteId = FileUploadProcess.getValue('EstimatePO', 'SharepointId'), listId = FileUploadProcess.getValue('EstimatePO', 'ListId')]);\n  let params = {\n    'siteId': siteId,\n    'listId': listId,\n    'Number': Number,\n    'NumberName': NumberName\n  };\n  response = await ListItemsDelete_Select.run(params);\n  if (response.value.length == 0) {\n    await showAlert('Update failed', 'error');\n  }\n  let data = [];\n  for (const eachFile of response.value) {\n    let query_params = {\n      'siteId': FileUploadProcess.getValue('EstimatePO', 'SharepointId'),\n      'listId': FileUploadProcess.getValue('EstimatePO', 'ListId'),\n      'listItemId': eachFile.id,\n      'fileParams': fileParams\n    };\n    data.push(query_params);\n  }\n  const metadata = data.map(data => FileMetadata_Create.run(data));\n  return Promise.all(metadata);\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-15T09:06:23Z"},"publishedAction":{"name":"modifyMetadata","fullyQualifiedName":"FileUploadProcess.modifyMetadata","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","collectionId":"PO Entry_FileUploadProcess","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async (fileParams, Number, NumberName) => {\n  let response = \"\";\n  let metaresponse = \"\";\n  let siteId = \"\";\n  let listId = \"\";\n  Promise.all([siteId = FileUploadProcess.getValue('EstimatePO', 'SharepointId'), listId = FileUploadProcess.getValue('EstimatePO', 'ListId')]);\n  let params = {\n    'siteId': siteId,\n    'listId': listId,\n    'Number': Number,\n    'NumberName': NumberName\n  };\n  response = await ListItemsDelete_Select.run(params);\n  if (response.value.length == 0) {\n    await showAlert('Update failed', 'error');\n  }\n  let data = [];\n  for (const eachFile of response.value) {\n    let query_params = {\n      'siteId': FileUploadProcess.getValue('EstimatePO', 'SharepointId'),\n      'listId': FileUploadProcess.getValue('EstimatePO', 'ListId'),\n      'listItemId': eachFile.id,\n      'fileParams': fileParams\n    };\n    data.push(query_params);\n  }\n  const metadata = data.map(data => FileMetadata_Create.run(data));\n  return Promise.all(metadata);\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"fileParams"},{"name":"Number"},{"name":"NumberName"}]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async (fileParams, Number, NumberName) => {\n  let response = \"\";\n  let metaresponse = \"\";\n  let siteId = \"\";\n  let listId = \"\";\n  Promise.all([siteId = FileUploadProcess.getValue('EstimatePO', 'SharepointId'), listId = FileUploadProcess.getValue('EstimatePO', 'ListId')]);\n  let params = {\n    'siteId': siteId,\n    'listId': listId,\n    'Number': Number,\n    'NumberName': NumberName\n  };\n  response = await ListItemsDelete_Select.run(params);\n  if (response.value.length == 0) {\n    await showAlert('Update failed', 'error');\n  }\n  let data = [];\n  for (const eachFile of response.value) {\n    let query_params = {\n      'siteId': FileUploadProcess.getValue('EstimatePO', 'SharepointId'),\n      'listId': FileUploadProcess.getValue('EstimatePO', 'ListId'),\n      'listItemId': eachFile.id,\n      'fileParams': fileParams\n    };\n    data.push(query_params);\n  }\n  const metadata = data.map(data => FileMetadata_Create.run(data));\n  return Promise.all(metadata);\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-15T09:06:23Z"},"id":"PO Entry_FileUploadProcess.modifyMetadata","deleted":false,"gitSyncId":"67f4d81e59d0ae34925978ba_67fe218f358e8b1adbeac75d"},{"pluginType":"JS","pluginId":"js-plugin","unpublishedAction":{"name":"getInitialState","fullyQualifiedName":"Process.getInitialState","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","organizationId":"62a1cace93e9481dacb0f741","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","collectionId":"PO Entry_Process","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"() => {\n  if (appsmith.store.currentStateName) {\n    return appsmith.store.currentStateName;\n  } else {\n    storeValue(\"currentStateName\", 'EnterPO');\n    return \"EnterPO\";\n  }\n}","selfReferencingDataPaths":[],"jsArguments":[],"isAsync":false},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["() => {\n  if (appsmith.store.currentStateName) {\n    return appsmith.store.currentStateName;\n  } else {\n    storeValue(\"currentStateName\", 'EnterPO');\n    return \"EnterPO\";\n  }\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"publishedAction":{"name":"getInitialState","fullyQualifiedName":"Process.getInitialState","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","organizationId":"62a1cace93e9481dacb0f741","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","collectionId":"PO Entry_Process","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"() => {\n  if (appsmith.store.currentStateName) {\n    return appsmith.store.currentStateName;\n  } else {\n    storeValue(\"currentStateName\", 'EnterPO');\n    return \"EnterPO\";\n  }\n}","selfReferencingDataPaths":[],"jsArguments":[],"isAsync":false},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["() => {\n  if (appsmith.store.currentStateName) {\n    return appsmith.store.currentStateName;\n  } else {\n    storeValue(\"currentStateName\", 'EnterPO');\n    return \"EnterPO\";\n  }\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"id":"PO Entry_Process.getInitialState","deleted":false,"gitSyncId":"62c6dd94aa3be20812d63927_62c6dd94aa3be20812d6395c"},{"pluginType":"DB","pluginId":"mysql-plugin","unpublishedAction":{"name":"PO_Insert","datasource":{"name":"appsmithmysql","pluginId":"mysql-plugin","messages":[],"isAutoGenerated":false,"id":"appsmithmysql","deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"INSERT INTO PurchaseOrder \n            (EstimateId,NUMBER,Description, BillTo, Shipto,PaymentTerm,Taxable) \nVALUES\n            ({{this.params?.estimateId}},\n            {{this.params?.PONumber}},\n            {{this.params?.PODes}},\n            {{this.params?.POBillto}},\n            {{this.params?.POShipto}},\n            {{this.params?.PaymentTerm}},\n\t\t\t\t\t\t{{this.params?.Taxable}}\n            );","selfReferencingDataPaths":[]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["this.params?.estimateId","this.params?.PaymentTerm","this.params?.POBillto","this.params?.PODes","this.params?.POShipto","this.params?.Taxable","this.params?.PONumber"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"publishedAction":{"name":"PO_Insert","datasource":{"name":"appsmithmysql","pluginId":"mysql-plugin","messages":[],"isAutoGenerated":false,"id":"appsmithmysql","deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"INSERT INTO PurchaseOrder \n            (EstimateId,NUMBER,Description, BillTo, Shipto,PaymentTerm,Taxable) \nVALUES\n            ({{this.params?.estimateId}},\n            {{this.params?.PONumber}},\n            {{this.params?.PODes}},\n            {{this.params?.POBillto}},\n            {{this.params?.POShipto}},\n            {{this.params?.PaymentTerm}},\n\t\t\t\t\t\t{{this.params?.Taxable}}\n            );","selfReferencingDataPaths":[]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["this.params?.estimateId","this.params?.PaymentTerm","this.params?.POBillto","this.params?.PODes","this.params?.POShipto","this.params?.Taxable","this.params?.PONumber"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"id":"PO Entry_PO_Insert","deleted":false,"gitSyncId":"62c6dd94aa3be20812d63927_62c6dd94aa3be20812d6393b"},{"pluginType":"JS","pluginId":"js-plugin","unpublishedAction":{"name":"runModifyFile","fullyQualifiedName":"FileUploadProcess.runModifyFile","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","collectionId":"PO Entry_FileUploadProcess","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async (FileId, FileComments) => {\n  try {\n    if (FilePicker.files.length > 0) {\n      let statename = appsmith.store.statename == null ? storeValue('statename', 'FileCheck') : appsmith.store.statename;\n      let progressstatus = appsmith.store.progressstatus == null ? storeValue('progressstatus', '0') : appsmith.store.progressstatus;\n      let retry = 0;\n      await FileUploadProcess.clearError();\n      await storeValue('closedisable', 'False');\n      if (appsmith.store.statename == 'Completed') {\n        statename = \"FileCheck\";\n        progressstatus = 0;\n        await storeValue('statename', statename);\n        await storeValue('progressstatus', progressstatus);\n      }\n      let DriveId = FileUploadProcess.getValue('EstimatePO', 'DriveId');\n      let DriveItemId = FileUploadProcess.getValue('EstimatePO', 'DriveItemId');\n      let fileParams = {\n        \"FileType\": FilePicker.files[0].name.split('.').pop().trim(),\n        \"PONumber\": PO_Table.selectedRow.PurchaseOrderNumber,\n        \"ModifiedBy\": appsmith.user.email.split(\"@\")[0],\n        \"POId\": PO_Table.selectedRow.Id,\n        \"OriginalFileName\": appsmith.store.tabledata[4].Value\n      };\n      await showModal('Progress_Modal');\n      while (statename != 'Completed') {\n        console.log(progressstatus);\n        console.log(statename);\n        if (statename != 'Error') {\n          await storeValue('statename', statename);\n          await storeValue('progressstatus', progressstatus);\n        }\n        switch (statename) {\n          case 'FileCheck':\n            let response = await SpecificFilesInDrive_Select.run({\n              'DriveId': DriveId,\n              'DriveItemId': DriveItemId,\n              'FileName': POAttachments_Table.selectedRow.FileName\n            });\n            if (response.value.length > 0) {\n              for (const eachFile of response.value) {\n                if (eachFile.name == ActualFileName_Input.text) {\n                  statename = 'UploadToSharePoint';\n                  progressstatus = 25;\n                  break;\n                }\n              }\n            }\n            if (statename != 'UploadToSharePoint') {\n              await FileUploadProcess.setError(\"File Not Found In Sharepoint!\");\n              statename = 'Error';\n            }\n            break;\n          case 'DBUpdate':\n            await EPOAttachments_Update.run({\n              \"FileId\": FileId,\n              \"FileComments\": FileComments\n            });\n            statename = 'UpdateMetadata';\n            progressstatus = 75;\n            break;\n          case 'UploadToSharePoint':\n            if (FilePicker.files.length > 0) {\n              console.log('start2...');\n              let uploadurl = await UploadSession_Create.run({\n                'DriveId': DriveId,\n                'DriveItemId': DriveItemId,\n                'fileName': appsmith.store.ActualFileName\n              });\n              console.log(uploadurl.uploadUrl);\n              let filesize = FilePicker.files[0].size;\n              let startindex = 0;\n              let responsecreate = \"\";\n              let upload_chunk = filesize;\n              let endindex = filesize - 1;\n              responsecreate = await FileUpload_Create.run(() => {}, () => {}, {\n                'uploadurl': UploadSession_Create.data.uploadUrl.split('//')[1],\n                'range': upload_chunk,\n                'startindex': startindex,\n                'endindex': endindex,\n                'filesize': filesize\n              });\n              console.log('response is', FileUpload_Create.data);\n              if (FileUpload_Create.data.length != 0) {\n                if (FileUpload_Create.data.name == ActualFileName_Input.text) {\n                  statename = 'DBUpdate';\n                  progressstatus = 50;\n                }\n              } else if (retry == 0) {\n                retry++;\n                await FileUploadProcess.setError(\"Upload Failed in first attempt, attempting second\");\n              } else {\n                await FileUploadProcess.setError(\"Upload Failed!, File Upload Update Response not valid\");\n                statename = 'Error';\n              }\n            } else {\n              statename = 'Completed';\n              progressstatus = 100;\n            }\n            break;\n          case 'UpdateMetadata':\n            let responsemetadata = \"\";\n            responsemetadata = await FileUploadProcess.modifyFileMetadata(appsmith.store.ActualFileName, fileParams, 'POId', PO_Table.selectedRow.Id);\n            console.log(responsemetadata);\n            if (responsemetadata.length != 0) {\n              if (responsemetadata.POId == PO_Table.selectedRow.Id) {\n                statename = 'Completed';\n                progressstatus = 100;\n              }\n            } else if (retry == 0) {\n              retry++;\n              await FileUploadProcess.setError(\"First Attemp for Metadata is failed, Attempting Second\");\n            } else {\n              await FileUploadProcess.setError(\"Upload Failed!, Metadata create response not valid\");\n              statename = 'Error';\n            }\n            break;\n          case 'Error':\n            await storeValue('closedisable', 'True');\n            statename = 'Completed';\n            break;\n        }\n      }\n      await storeValue('statename', statename).then(() => storeValue('progressstatus', progressstatus));\n      if (appsmith.store.statename == 'Completed' && appsmith.store.ErrorMessage == '') {\n        await EPOAttachments_Select.run({\n          \"POId\": PO_Table.selectedRow.Id\n        });\n        await FileUploadProcess.runRefreshFunc().then(() => closeModal('Progress_Modal')).then(() => storeValue('ActualFileName', '')).then(() => Promise.all([showModal('FileUpload_Modal'), EPOAttachments_Select.run({\n          \"POId\": PO_Table.selectedRow.Id\n        })])).then(() => showAlert('PO File Updated', 'success')).then(() => resetWidget('EPOAttachments_Table'));\n      }\n    } else {\n      await EPOAttachments_Update.run({\n        \"FileId\": FileId,\n        \"FileComments\": FileComments\n      }).then(() => EPOAttachments_Select.run({\n        \"POId\": PO_Table.selectedRow.Id\n      })).then(() => storeValue('ActualFileName', '')).then(() => Promise.all([showModal('FileUpload_Modal'), EPOAttachments_Select.run({\n        \"POId\": PO_Table.selectedRow.Id\n      })])).then(() => showAlert('File Comments Updated', 'success'));\n    }\n  } catch (err) {\n    if (err.message == \"Cannot read properties of undefined (reading 'data')\") {\n      Promise.all([FileUploadProcess.setError(\"Network got disconnected!, Please check your connection and retry\"), storeValue('closedisable', 'True'), showAlert('Network got disconnected!, Please check your connection and retry', 'error')]);\n    } else {\n      Promise.all([FileUploadProcess.setError(\"Upload Failed retry, \" + err.message), storeValue('closedisable', 'True'), showAlert(\"Upload Failed retry, \" + err.message, 'error')]);\n    }\n  }\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"FileId"},{"name":"FileComments"}]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async (FileId, FileComments) => {\n  try {\n    if (FilePicker.files.length > 0) {\n      let statename = appsmith.store.statename == null ? storeValue('statename', 'FileCheck') : appsmith.store.statename;\n      let progressstatus = appsmith.store.progressstatus == null ? storeValue('progressstatus', '0') : appsmith.store.progressstatus;\n      let retry = 0;\n      await FileUploadProcess.clearError();\n      await storeValue('closedisable', 'False');\n      if (appsmith.store.statename == 'Completed') {\n        statename = \"FileCheck\";\n        progressstatus = 0;\n        await storeValue('statename', statename);\n        await storeValue('progressstatus', progressstatus);\n      }\n      let DriveId = FileUploadProcess.getValue('EstimatePO', 'DriveId');\n      let DriveItemId = FileUploadProcess.getValue('EstimatePO', 'DriveItemId');\n      let fileParams = {\n        \"FileType\": FilePicker.files[0].name.split('.').pop().trim(),\n        \"PONumber\": PO_Table.selectedRow.PurchaseOrderNumber,\n        \"ModifiedBy\": appsmith.user.email.split(\"@\")[0],\n        \"POId\": PO_Table.selectedRow.Id,\n        \"OriginalFileName\": appsmith.store.tabledata[4].Value\n      };\n      await showModal('Progress_Modal');\n      while (statename != 'Completed') {\n        console.log(progressstatus);\n        console.log(statename);\n        if (statename != 'Error') {\n          await storeValue('statename', statename);\n          await storeValue('progressstatus', progressstatus);\n        }\n        switch (statename) {\n          case 'FileCheck':\n            let response = await SpecificFilesInDrive_Select.run({\n              'DriveId': DriveId,\n              'DriveItemId': DriveItemId,\n              'FileName': POAttachments_Table.selectedRow.FileName\n            });\n            if (response.value.length > 0) {\n              for (const eachFile of response.value) {\n                if (eachFile.name == ActualFileName_Input.text) {\n                  statename = 'UploadToSharePoint';\n                  progressstatus = 25;\n                  break;\n                }\n              }\n            }\n            if (statename != 'UploadToSharePoint') {\n              await FileUploadProcess.setError(\"File Not Found In Sharepoint!\");\n              statename = 'Error';\n            }\n            break;\n          case 'DBUpdate':\n            await EPOAttachments_Update.run({\n              \"FileId\": FileId,\n              \"FileComments\": FileComments\n            });\n            statename = 'UpdateMetadata';\n            progressstatus = 75;\n            break;\n          case 'UploadToSharePoint':\n            if (FilePicker.files.length > 0) {\n              console.log('start2...');\n              let uploadurl = await UploadSession_Create.run({\n                'DriveId': DriveId,\n                'DriveItemId': DriveItemId,\n                'fileName': appsmith.store.ActualFileName\n              });\n              console.log(uploadurl.uploadUrl);\n              let filesize = FilePicker.files[0].size;\n              let startindex = 0;\n              let responsecreate = \"\";\n              let upload_chunk = filesize;\n              let endindex = filesize - 1;\n              responsecreate = await FileUpload_Create.run(() => {}, () => {}, {\n                'uploadurl': UploadSession_Create.data.uploadUrl.split('//')[1],\n                'range': upload_chunk,\n                'startindex': startindex,\n                'endindex': endindex,\n                'filesize': filesize\n              });\n              console.log('response is', FileUpload_Create.data);\n              if (FileUpload_Create.data.length != 0) {\n                if (FileUpload_Create.data.name == ActualFileName_Input.text) {\n                  statename = 'DBUpdate';\n                  progressstatus = 50;\n                }\n              } else if (retry == 0) {\n                retry++;\n                await FileUploadProcess.setError(\"Upload Failed in first attempt, attempting second\");\n              } else {\n                await FileUploadProcess.setError(\"Upload Failed!, File Upload Update Response not valid\");\n                statename = 'Error';\n              }\n            } else {\n              statename = 'Completed';\n              progressstatus = 100;\n            }\n            break;\n          case 'UpdateMetadata':\n            let responsemetadata = \"\";\n            responsemetadata = await FileUploadProcess.modifyFileMetadata(appsmith.store.ActualFileName, fileParams, 'POId', PO_Table.selectedRow.Id);\n            console.log(responsemetadata);\n            if (responsemetadata.length != 0) {\n              if (responsemetadata.POId == PO_Table.selectedRow.Id) {\n                statename = 'Completed';\n                progressstatus = 100;\n              }\n            } else if (retry == 0) {\n              retry++;\n              await FileUploadProcess.setError(\"First Attemp for Metadata is failed, Attempting Second\");\n            } else {\n              await FileUploadProcess.setError(\"Upload Failed!, Metadata create response not valid\");\n              statename = 'Error';\n            }\n            break;\n          case 'Error':\n            await storeValue('closedisable', 'True');\n            statename = 'Completed';\n            break;\n        }\n      }\n      await storeValue('statename', statename).then(() => storeValue('progressstatus', progressstatus));\n      if (appsmith.store.statename == 'Completed' && appsmith.store.ErrorMessage == '') {\n        await EPOAttachments_Select.run({\n          \"POId\": PO_Table.selectedRow.Id\n        });\n        await FileUploadProcess.runRefreshFunc().then(() => closeModal('Progress_Modal')).then(() => storeValue('ActualFileName', '')).then(() => Promise.all([showModal('FileUpload_Modal'), EPOAttachments_Select.run({\n          \"POId\": PO_Table.selectedRow.Id\n        })])).then(() => showAlert('PO File Updated', 'success')).then(() => resetWidget('EPOAttachments_Table'));\n      }\n    } else {\n      await EPOAttachments_Update.run({\n        \"FileId\": FileId,\n        \"FileComments\": FileComments\n      }).then(() => EPOAttachments_Select.run({\n        \"POId\": PO_Table.selectedRow.Id\n      })).then(() => storeValue('ActualFileName', '')).then(() => Promise.all([showModal('FileUpload_Modal'), EPOAttachments_Select.run({\n        \"POId\": PO_Table.selectedRow.Id\n      })])).then(() => showAlert('File Comments Updated', 'success'));\n    }\n  } catch (err) {\n    if (err.message == \"Cannot read properties of undefined (reading 'data')\") {\n      Promise.all([FileUploadProcess.setError(\"Network got disconnected!, Please check your connection and retry\"), storeValue('closedisable', 'True'), showAlert('Network got disconnected!, Please check your connection and retry', 'error')]);\n    } else {\n      Promise.all([FileUploadProcess.setError(\"Upload Failed retry, \" + err.message), storeValue('closedisable', 'True'), showAlert(\"Upload Failed retry, \" + err.message, 'error')]);\n    }\n  }\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-15T09:06:23Z"},"publishedAction":{"name":"runModifyFile","fullyQualifiedName":"FileUploadProcess.runModifyFile","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","collectionId":"PO Entry_FileUploadProcess","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async (FileId, FileComments) => {\n  try {\n    if (FilePicker.files.length > 0) {\n      let statename = appsmith.store.statename == null ? storeValue('statename', 'FileCheck') : appsmith.store.statename;\n      let progressstatus = appsmith.store.progressstatus == null ? storeValue('progressstatus', '0') : appsmith.store.progressstatus;\n      let retry = 0;\n      await FileUploadProcess.clearError();\n      await storeValue('closedisable', 'False');\n      if (appsmith.store.statename == 'Completed') {\n        statename = \"FileCheck\";\n        progressstatus = 0;\n        await storeValue('statename', statename);\n        await storeValue('progressstatus', progressstatus);\n      }\n      let DriveId = FileUploadProcess.getValue('EstimatePO', 'DriveId');\n      let DriveItemId = FileUploadProcess.getValue('EstimatePO', 'DriveItemId');\n      let fileParams = {\n        \"FileType\": FilePicker.files[0].name.split('.').pop().trim(),\n        \"PONumber\": PO_Table.selectedRow.PurchaseOrderNumber,\n        \"ModifiedBy\": appsmith.user.email.split(\"@\")[0],\n        \"POId\": PO_Table.selectedRow.Id,\n        \"OriginalFileName\": appsmith.store.tabledata[4].Value\n      };\n      await showModal('Progress_Modal');\n      while (statename != 'Completed') {\n        console.log(progressstatus);\n        console.log(statename);\n        if (statename != 'Error') {\n          await storeValue('statename', statename);\n          await storeValue('progressstatus', progressstatus);\n        }\n        switch (statename) {\n          case 'FileCheck':\n            let response = await SpecificFilesInDrive_Select.run({\n              'DriveId': DriveId,\n              'DriveItemId': DriveItemId,\n              'FileName': POAttachments_Table.selectedRow.FileName\n            });\n            if (response.value.length > 0) {\n              for (const eachFile of response.value) {\n                if (eachFile.name == ActualFileName_Input.text) {\n                  statename = 'UploadToSharePoint';\n                  progressstatus = 25;\n                  break;\n                }\n              }\n            }\n            if (statename != 'UploadToSharePoint') {\n              await FileUploadProcess.setError(\"File Not Found In Sharepoint!\");\n              statename = 'Error';\n            }\n            break;\n          case 'DBUpdate':\n            await EPOAttachments_Update.run({\n              \"FileId\": FileId,\n              \"FileComments\": FileComments\n            });\n            statename = 'UpdateMetadata';\n            progressstatus = 75;\n            break;\n          case 'UploadToSharePoint':\n            if (FilePicker.files.length > 0) {\n              console.log('start2...');\n              let uploadurl = await UploadSession_Create.run({\n                'DriveId': DriveId,\n                'DriveItemId': DriveItemId,\n                'fileName': appsmith.store.ActualFileName\n              });\n              console.log(uploadurl.uploadUrl);\n              let filesize = FilePicker.files[0].size;\n              let startindex = 0;\n              let responsecreate = \"\";\n              let upload_chunk = filesize;\n              let endindex = filesize - 1;\n              responsecreate = await FileUpload_Create.run(() => {}, () => {}, {\n                'uploadurl': UploadSession_Create.data.uploadUrl.split('//')[1],\n                'range': upload_chunk,\n                'startindex': startindex,\n                'endindex': endindex,\n                'filesize': filesize\n              });\n              console.log('response is', FileUpload_Create.data);\n              if (FileUpload_Create.data.length != 0) {\n                if (FileUpload_Create.data.name == ActualFileName_Input.text) {\n                  statename = 'DBUpdate';\n                  progressstatus = 50;\n                }\n              } else if (retry == 0) {\n                retry++;\n                await FileUploadProcess.setError(\"Upload Failed in first attempt, attempting second\");\n              } else {\n                await FileUploadProcess.setError(\"Upload Failed!, File Upload Update Response not valid\");\n                statename = 'Error';\n              }\n            } else {\n              statename = 'Completed';\n              progressstatus = 100;\n            }\n            break;\n          case 'UpdateMetadata':\n            let responsemetadata = \"\";\n            responsemetadata = await FileUploadProcess.modifyFileMetadata(appsmith.store.ActualFileName, fileParams, 'POId', PO_Table.selectedRow.Id);\n            console.log(responsemetadata);\n            if (responsemetadata.length != 0) {\n              if (responsemetadata.POId == PO_Table.selectedRow.Id) {\n                statename = 'Completed';\n                progressstatus = 100;\n              }\n            } else if (retry == 0) {\n              retry++;\n              await FileUploadProcess.setError(\"First Attemp for Metadata is failed, Attempting Second\");\n            } else {\n              await FileUploadProcess.setError(\"Upload Failed!, Metadata create response not valid\");\n              statename = 'Error';\n            }\n            break;\n          case 'Error':\n            await storeValue('closedisable', 'True');\n            statename = 'Completed';\n            break;\n        }\n      }\n      await storeValue('statename', statename).then(() => storeValue('progressstatus', progressstatus));\n      if (appsmith.store.statename == 'Completed' && appsmith.store.ErrorMessage == '') {\n        await EPOAttachments_Select.run({\n          \"POId\": PO_Table.selectedRow.Id\n        });\n        await FileUploadProcess.runRefreshFunc().then(() => closeModal('Progress_Modal')).then(() => storeValue('ActualFileName', '')).then(() => Promise.all([showModal('FileUpload_Modal'), EPOAttachments_Select.run({\n          \"POId\": PO_Table.selectedRow.Id\n        })])).then(() => showAlert('PO File Updated', 'success')).then(() => resetWidget('EPOAttachments_Table'));\n      }\n    } else {\n      await EPOAttachments_Update.run({\n        \"FileId\": FileId,\n        \"FileComments\": FileComments\n      }).then(() => EPOAttachments_Select.run({\n        \"POId\": PO_Table.selectedRow.Id\n      })).then(() => storeValue('ActualFileName', '')).then(() => Promise.all([showModal('FileUpload_Modal'), EPOAttachments_Select.run({\n        \"POId\": PO_Table.selectedRow.Id\n      })])).then(() => showAlert('File Comments Updated', 'success'));\n    }\n  } catch (err) {\n    if (err.message == \"Cannot read properties of undefined (reading 'data')\") {\n      Promise.all([FileUploadProcess.setError(\"Network got disconnected!, Please check your connection and retry\"), storeValue('closedisable', 'True'), showAlert('Network got disconnected!, Please check your connection and retry', 'error')]);\n    } else {\n      Promise.all([FileUploadProcess.setError(\"Upload Failed retry, \" + err.message), storeValue('closedisable', 'True'), showAlert(\"Upload Failed retry, \" + err.message, 'error')]);\n    }\n  }\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"FileId"},{"name":"FileComments"}]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async (FileId, FileComments) => {\n  try {\n    if (FilePicker.files.length > 0) {\n      let statename = appsmith.store.statename == null ? storeValue('statename', 'FileCheck') : appsmith.store.statename;\n      let progressstatus = appsmith.store.progressstatus == null ? storeValue('progressstatus', '0') : appsmith.store.progressstatus;\n      let retry = 0;\n      await FileUploadProcess.clearError();\n      await storeValue('closedisable', 'False');\n      if (appsmith.store.statename == 'Completed') {\n        statename = \"FileCheck\";\n        progressstatus = 0;\n        await storeValue('statename', statename);\n        await storeValue('progressstatus', progressstatus);\n      }\n      let DriveId = FileUploadProcess.getValue('EstimatePO', 'DriveId');\n      let DriveItemId = FileUploadProcess.getValue('EstimatePO', 'DriveItemId');\n      let fileParams = {\n        \"FileType\": FilePicker.files[0].name.split('.').pop().trim(),\n        \"PONumber\": PO_Table.selectedRow.PurchaseOrderNumber,\n        \"ModifiedBy\": appsmith.user.email.split(\"@\")[0],\n        \"POId\": PO_Table.selectedRow.Id,\n        \"OriginalFileName\": appsmith.store.tabledata[4].Value\n      };\n      await showModal('Progress_Modal');\n      while (statename != 'Completed') {\n        console.log(progressstatus);\n        console.log(statename);\n        if (statename != 'Error') {\n          await storeValue('statename', statename);\n          await storeValue('progressstatus', progressstatus);\n        }\n        switch (statename) {\n          case 'FileCheck':\n            let response = await SpecificFilesInDrive_Select.run({\n              'DriveId': DriveId,\n              'DriveItemId': DriveItemId,\n              'FileName': POAttachments_Table.selectedRow.FileName\n            });\n            if (response.value.length > 0) {\n              for (const eachFile of response.value) {\n                if (eachFile.name == ActualFileName_Input.text) {\n                  statename = 'UploadToSharePoint';\n                  progressstatus = 25;\n                  break;\n                }\n              }\n            }\n            if (statename != 'UploadToSharePoint') {\n              await FileUploadProcess.setError(\"File Not Found In Sharepoint!\");\n              statename = 'Error';\n            }\n            break;\n          case 'DBUpdate':\n            await EPOAttachments_Update.run({\n              \"FileId\": FileId,\n              \"FileComments\": FileComments\n            });\n            statename = 'UpdateMetadata';\n            progressstatus = 75;\n            break;\n          case 'UploadToSharePoint':\n            if (FilePicker.files.length > 0) {\n              console.log('start2...');\n              let uploadurl = await UploadSession_Create.run({\n                'DriveId': DriveId,\n                'DriveItemId': DriveItemId,\n                'fileName': appsmith.store.ActualFileName\n              });\n              console.log(uploadurl.uploadUrl);\n              let filesize = FilePicker.files[0].size;\n              let startindex = 0;\n              let responsecreate = \"\";\n              let upload_chunk = filesize;\n              let endindex = filesize - 1;\n              responsecreate = await FileUpload_Create.run(() => {}, () => {}, {\n                'uploadurl': UploadSession_Create.data.uploadUrl.split('//')[1],\n                'range': upload_chunk,\n                'startindex': startindex,\n                'endindex': endindex,\n                'filesize': filesize\n              });\n              console.log('response is', FileUpload_Create.data);\n              if (FileUpload_Create.data.length != 0) {\n                if (FileUpload_Create.data.name == ActualFileName_Input.text) {\n                  statename = 'DBUpdate';\n                  progressstatus = 50;\n                }\n              } else if (retry == 0) {\n                retry++;\n                await FileUploadProcess.setError(\"Upload Failed in first attempt, attempting second\");\n              } else {\n                await FileUploadProcess.setError(\"Upload Failed!, File Upload Update Response not valid\");\n                statename = 'Error';\n              }\n            } else {\n              statename = 'Completed';\n              progressstatus = 100;\n            }\n            break;\n          case 'UpdateMetadata':\n            let responsemetadata = \"\";\n            responsemetadata = await FileUploadProcess.modifyFileMetadata(appsmith.store.ActualFileName, fileParams, 'POId', PO_Table.selectedRow.Id);\n            console.log(responsemetadata);\n            if (responsemetadata.length != 0) {\n              if (responsemetadata.POId == PO_Table.selectedRow.Id) {\n                statename = 'Completed';\n                progressstatus = 100;\n              }\n            } else if (retry == 0) {\n              retry++;\n              await FileUploadProcess.setError(\"First Attemp for Metadata is failed, Attempting Second\");\n            } else {\n              await FileUploadProcess.setError(\"Upload Failed!, Metadata create response not valid\");\n              statename = 'Error';\n            }\n            break;\n          case 'Error':\n            await storeValue('closedisable', 'True');\n            statename = 'Completed';\n            break;\n        }\n      }\n      await storeValue('statename', statename).then(() => storeValue('progressstatus', progressstatus));\n      if (appsmith.store.statename == 'Completed' && appsmith.store.ErrorMessage == '') {\n        await EPOAttachments_Select.run({\n          \"POId\": PO_Table.selectedRow.Id\n        });\n        await FileUploadProcess.runRefreshFunc().then(() => closeModal('Progress_Modal')).then(() => storeValue('ActualFileName', '')).then(() => Promise.all([showModal('FileUpload_Modal'), EPOAttachments_Select.run({\n          \"POId\": PO_Table.selectedRow.Id\n        })])).then(() => showAlert('PO File Updated', 'success')).then(() => resetWidget('EPOAttachments_Table'));\n      }\n    } else {\n      await EPOAttachments_Update.run({\n        \"FileId\": FileId,\n        \"FileComments\": FileComments\n      }).then(() => EPOAttachments_Select.run({\n        \"POId\": PO_Table.selectedRow.Id\n      })).then(() => storeValue('ActualFileName', '')).then(() => Promise.all([showModal('FileUpload_Modal'), EPOAttachments_Select.run({\n        \"POId\": PO_Table.selectedRow.Id\n      })])).then(() => showAlert('File Comments Updated', 'success'));\n    }\n  } catch (err) {\n    if (err.message == \"Cannot read properties of undefined (reading 'data')\") {\n      Promise.all([FileUploadProcess.setError(\"Network got disconnected!, Please check your connection and retry\"), storeValue('closedisable', 'True'), showAlert('Network got disconnected!, Please check your connection and retry', 'error')]);\n    } else {\n      Promise.all([FileUploadProcess.setError(\"Upload Failed retry, \" + err.message), storeValue('closedisable', 'True'), showAlert(\"Upload Failed retry, \" + err.message, 'error')]);\n    }\n  }\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-15T09:06:23Z"},"id":"PO Entry_FileUploadProcess.runModifyFile","deleted":false,"gitSyncId":"67f4d81e59d0ae34925978ba_67fe218f358e8b1adbeac759"},{"pluginType":"JS","pluginId":"js-plugin","unpublishedAction":{"name":"getState","fullyQualifiedName":"Process.getState","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","organizationId":"62a1cace93e9481dacb0f741","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","collectionId":"PO Entry_Process","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"stateName => {\n  return EstimateStatesJS.states.find(state => {\n    return state.Name == stateName;\n  });\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"stateName"}],"isAsync":false},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["stateName => {\n  return EstimateStatesJS.states.find(state => {\n    return state.Name == stateName;\n  });\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"publishedAction":{"name":"getState","fullyQualifiedName":"Process.getState","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","organizationId":"62a1cace93e9481dacb0f741","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","collectionId":"PO Entry_Process","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"stateName => {\n  return EstimateStatesJS.states.find(state => {\n    return state.Name == stateName;\n  });\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"stateName"}],"isAsync":false},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["stateName => {\n  return EstimateStatesJS.states.find(state => {\n    return state.Name == stateName;\n  });\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"id":"PO Entry_Process.getState","deleted":false,"gitSyncId":"62c6dd94aa3be20812d63927_62c6dd94aa3be20812d63953"},{"pluginType":"JS","pluginId":"js-plugin","unpublishedAction":{"name":"updatePOItem","fullyQualifiedName":"PageObjects.updatePOItem","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","organizationId":"62a1cace93e9481dacb0f741","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","collectionId":"PO Entry_PageObjects","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async (POItemNum, POItemDes, POItemQty, POItemAmt, SalesTax, POItemId) => {\n  await PO_Item_Update.run({\n    \"POItemNum\": POItemNum,\n    \"POItemDes\": POItemDes,\n    \"POItemQty\": POItemQty,\n    \"POItemAmt\": POItemAmt,\n    \"SalesTax\": SalesTax,\n    \"POItemId\": POItemId\n  }).then(() => {\n    return Promise.all([PO_Item_Select.run({\n      'purchaseOrderId': PO_Table.selectedRow.Id\n    }, PO_Details_Select.run())]);\n  }).then(() => {\n    return GlobalVariables.resetWidgets([\"PO_Item_Container\"]);\n  }).then(res => showAlert(\"Update Done\", \"success\")).catch(error => showAlert(error.toString(), \"error\"));\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"POItemNum"},{"name":"POItemDes"},{"name":"POItemQty"},{"name":"POItemAmt"},{"name":"SalesTax"},{"name":"POItemId"}],"isAsync":true},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async (POItemNum, POItemDes, POItemQty, POItemAmt, SalesTax, POItemId) => {\n  await PO_Item_Update.run({\n    \"POItemNum\": POItemNum,\n    \"POItemDes\": POItemDes,\n    \"POItemQty\": POItemQty,\n    \"POItemAmt\": POItemAmt,\n    \"SalesTax\": SalesTax,\n    \"POItemId\": POItemId\n  }).then(() => {\n    return Promise.all([PO_Item_Select.run({\n      'purchaseOrderId': PO_Table.selectedRow.Id\n    }, PO_Details_Select.run())]);\n  }).then(() => {\n    return GlobalVariables.resetWidgets([\"PO_Item_Container\"]);\n  }).then(res => showAlert(\"Update Done\", \"success\")).catch(error => showAlert(error.toString(), \"error\"));\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"publishedAction":{"name":"updatePOItem","fullyQualifiedName":"PageObjects.updatePOItem","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","organizationId":"62a1cace93e9481dacb0f741","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","collectionId":"PO Entry_PageObjects","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async (POItemNum, POItemDes, POItemQty, POItemAmt, SalesTax, POItemId) => {\n  await PO_Item_Update.run({\n    \"POItemNum\": POItemNum,\n    \"POItemDes\": POItemDes,\n    \"POItemQty\": POItemQty,\n    \"POItemAmt\": POItemAmt,\n    \"SalesTax\": SalesTax,\n    \"POItemId\": POItemId\n  }).then(() => {\n    return Promise.all([PO_Item_Select.run({\n      'purchaseOrderId': PO_Table.selectedRow.Id\n    }, PO_Details_Select.run())]);\n  }).then(() => {\n    return GlobalVariables.resetWidgets([\"PO_Item_Container\"]);\n  }).then(res => showAlert(\"Update Done\", \"success\")).catch(error => showAlert(error.toString(), \"error\"));\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"POItemNum"},{"name":"POItemDes"},{"name":"POItemQty"},{"name":"POItemAmt"},{"name":"SalesTax"},{"name":"POItemId"}],"isAsync":true},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async (POItemNum, POItemDes, POItemQty, POItemAmt, SalesTax, POItemId) => {\n  await PO_Item_Update.run({\n    \"POItemNum\": POItemNum,\n    \"POItemDes\": POItemDes,\n    \"POItemQty\": POItemQty,\n    \"POItemAmt\": POItemAmt,\n    \"SalesTax\": SalesTax,\n    \"POItemId\": POItemId\n  }).then(() => {\n    return Promise.all([PO_Item_Select.run({\n      'purchaseOrderId': PO_Table.selectedRow.Id\n    }, PO_Details_Select.run())]);\n  }).then(() => {\n    return GlobalVariables.resetWidgets([\"PO_Item_Container\"]);\n  }).then(res => showAlert(\"Update Done\", \"success\")).catch(error => showAlert(error.toString(), \"error\"));\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"id":"PO Entry_PageObjects.updatePOItem","deleted":false,"gitSyncId":"62c6dd94aa3be20812d63927_62c6dd94aa3be20812d63931"},{"pluginType":"JS","pluginId":"js-plugin","unpublishedAction":{"name":"clickState","fullyQualifiedName":"Process.clickState","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","organizationId":"62a1cace93e9481dacb0f741","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","collectionId":"PO Entry_Process","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async function (stateName, query = null) {\n  await storeValue(\"currentState\", Process.getState(stateName));\n  await storeValue(\"currentStateName\", stateName);\n  if (query !== null) {\n    query.run({\n      \"currentStateName\": stateName\n    });\n    showAlert(\"Loading Estimate in state \" + appsmith.store.currentStateName, \"success\");\n  }\n  await GlobalVariables.resetForm([\"PO_Table\"]);\n  Estimate_Select.run();\n  PO_Select.run();\n  PO_Item_Select.run({\n    'purchaseOrderId': -1\n  });\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"stateName"},{"name":"query"}],"isAsync":true},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async function (stateName, query = null) {\n  await storeValue(\"currentState\", Process.getState(stateName));\n  await storeValue(\"currentStateName\", stateName);\n  if (query !== null) {\n    query.run({\n      \"currentStateName\": stateName\n    });\n    showAlert(\"Loading Estimate in state \" + appsmith.store.currentStateName, \"success\");\n  }\n  await GlobalVariables.resetForm([\"PO_Table\"]);\n  Estimate_Select.run();\n  PO_Select.run();\n  PO_Item_Select.run({\n    'purchaseOrderId': -1\n  });\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"publishedAction":{"name":"clickState","fullyQualifiedName":"Process.clickState","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","organizationId":"62a1cace93e9481dacb0f741","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","collectionId":"PO Entry_Process","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async function (stateName, query = null) {\n  await storeValue(\"currentState\", Process.getState(stateName));\n  await storeValue(\"currentStateName\", stateName);\n  if (query !== null) {\n    query.run({\n      \"currentStateName\": stateName\n    });\n    showAlert(\"Loading Estimate in state \" + appsmith.store.currentStateName, \"success\");\n  }\n  await GlobalVariables.resetForm([\"PO_Table\"]);\n  Estimate_Select.run();\n  PO_Select.run();\n  PO_Item_Select.run({\n    'purchaseOrderId': -1\n  });\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"stateName"},{"name":"query"}],"isAsync":true},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async function (stateName, query = null) {\n  await storeValue(\"currentState\", Process.getState(stateName));\n  await storeValue(\"currentStateName\", stateName);\n  if (query !== null) {\n    query.run({\n      \"currentStateName\": stateName\n    });\n    showAlert(\"Loading Estimate in state \" + appsmith.store.currentStateName, \"success\");\n  }\n  await GlobalVariables.resetForm([\"PO_Table\"]);\n  Estimate_Select.run();\n  PO_Select.run();\n  PO_Item_Select.run({\n    'purchaseOrderId': -1\n  });\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"id":"PO Entry_Process.clickState","deleted":false,"gitSyncId":"62c6dd94aa3be20812d63927_62c6dd94aa3be20812d63973"},{"pluginType":"JS","pluginId":"js-plugin","unpublishedAction":{"name":"myFun1","fullyQualifiedName":"Process.myFun1","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","organizationId":"62a1cace93e9481dacb0f741","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","collectionId":"PO Entry_Process","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"() => {}","selfReferencingDataPaths":[],"jsArguments":[],"isAsync":false},"executeOnLoad":false,"clientSideExecution":true,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["() => {}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"publishedAction":{"name":"myFun1","fullyQualifiedName":"Process.myFun1","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","organizationId":"62a1cace93e9481dacb0f741","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","collectionId":"PO Entry_Process","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"() => {}","selfReferencingDataPaths":[],"jsArguments":[],"isAsync":false},"executeOnLoad":false,"clientSideExecution":true,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["() => {}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"id":"PO Entry_Process.myFun1","deleted":false,"gitSyncId":"62c6dd94aa3be20812d63927_62c6dd95aa3be20812d639b8"},{"pluginType":"JS","pluginId":"js-plugin","unpublishedAction":{"name":"disableUpdateButton","fullyQualifiedName":"GlobalVariables.disableUpdateButton","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","organizationId":"62a1cace93e9481dacb0f741","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","collectionId":"PO Entry_GlobalVariables","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"(formWidgets, formTable) => {\n  let disableWidget = false;\n  if (formTable.selectedRowIndex === -1) {\n    disableWidget = true;\n  } else if (GlobalVariables.validateForm(formWidgets) === false) {\n    disableWidget = true;\n  } else {\n    disableWidget = false;\n  }\n  return disableWidget;\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"formWidgets"},{"name":"formTable"}],"isAsync":false},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["(formWidgets, formTable) => {\n  let disableWidget = false;\n  if (formTable.selectedRowIndex === -1) {\n    disableWidget = true;\n  } else if (GlobalVariables.validateForm(formWidgets) === false) {\n    disableWidget = true;\n  } else {\n    disableWidget = false;\n  }\n  return disableWidget;\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"publishedAction":{"name":"disableUpdateButton","fullyQualifiedName":"GlobalVariables.disableUpdateButton","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","organizationId":"62a1cace93e9481dacb0f741","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","collectionId":"PO Entry_GlobalVariables","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"(formWidgets, formTable) => {\n  let disableWidget = false;\n  if (formTable.selectedRowIndex === -1) {\n    disableWidget = true;\n  } else if (GlobalVariables.validateForm(formWidgets) === false) {\n    disableWidget = true;\n  } else {\n    disableWidget = false;\n  }\n  return disableWidget;\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"formWidgets"},{"name":"formTable"}],"isAsync":false},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["(formWidgets, formTable) => {\n  let disableWidget = false;\n  if (formTable.selectedRowIndex === -1) {\n    disableWidget = true;\n  } else if (GlobalVariables.validateForm(formWidgets) === false) {\n    disableWidget = true;\n  } else {\n    disableWidget = false;\n  }\n  return disableWidget;\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"id":"PO Entry_GlobalVariables.disableUpdateButton","deleted":false,"gitSyncId":"62c6dd94aa3be20812d63927_62c6dd94aa3be20812d63957"},{"pluginType":"JS","pluginId":"js-plugin","unpublishedAction":{"name":"DisablePODetailsInsertButton","fullyQualifiedName":"PageObjects.DisablePODetailsInsertButton","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","organizationId":"62a1cace93e9481dacb0f741","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","collectionId":"PO Entry_PageObjects","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"() => {\n  return Estimate_PO_Table.selectedRowIndex == -1 || appsmith.store.currentStateName == 'Completed' || GlobalVariables.disableCreateButton([PO_Number_Input, PO_Description_Input, PO_BillTo_Input, PO_ShipTo_Input, PO_PaymentTerm_Input]);\n}","selfReferencingDataPaths":[],"jsArguments":[],"isAsync":false},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["() => {\n  return Estimate_PO_Table.selectedRowIndex == -1 || appsmith.store.currentStateName == 'Completed' || GlobalVariables.disableCreateButton([PO_Number_Input, PO_Description_Input, PO_BillTo_Input, PO_ShipTo_Input, PO_PaymentTerm_Input]);\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"publishedAction":{"name":"DisablePODetailsInsertButton","fullyQualifiedName":"PageObjects.DisablePODetailsInsertButton","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","organizationId":"62a1cace93e9481dacb0f741","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","collectionId":"PO Entry_PageObjects","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"() => {\n  return Estimate_PO_Table.selectedRowIndex == -1 || appsmith.store.currentStateName == 'Completed' || GlobalVariables.disableCreateButton([PO_Number_Input, PO_Description_Input, PO_BillTo_Input, PO_ShipTo_Input, PO_PaymentTerm_Input]);\n}","selfReferencingDataPaths":[],"jsArguments":[],"isAsync":false},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["() => {\n  return Estimate_PO_Table.selectedRowIndex == -1 || appsmith.store.currentStateName == 'Completed' || GlobalVariables.disableCreateButton([PO_Number_Input, PO_Description_Input, PO_BillTo_Input, PO_ShipTo_Input, PO_PaymentTerm_Input]);\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"id":"PO Entry_PageObjects.DisablePODetailsInsertButton","deleted":false,"gitSyncId":"62c6dd94aa3be20812d63927_62c6dd94aa3be20812d6399d"},{"pluginType":"JS","pluginId":"js-plugin","unpublishedAction":{"name":"runDownloadFile","fullyQualifiedName":"FileUploadProcess.runDownloadFile","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","collectionId":"PO Entry_FileUploadProcess","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async () => {\n  let fileObject = await FileUploadProcess.getFileObject(ActualFileName_Input.text, appsmith.store.POId, 'POId');\n  console.log(fileObject);\n  if (appsmith.store.fileerror == 'true') {\n    await showModal('ShowAlert_Modal');\n  } else {\n    let download_url = fileObject.driveItem[\"@microsoft.graph.downloadUrl\"];\n    let filename = fileObject.driveItem['name'];\n    let filetype = fileObject.driveItem[\"file\"][\"mimeType\"];\n    console.log(filetype, 'File');\n    download(download_url, filename, filetype);\n    await showAlert('File Downloaded Successfully', 'success');\n  }\n}","selfReferencingDataPaths":[],"jsArguments":[]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async () => {\n  let fileObject = await FileUploadProcess.getFileObject(ActualFileName_Input.text, appsmith.store.POId, 'POId');\n  console.log(fileObject);\n  if (appsmith.store.fileerror == 'true') {\n    await showModal('ShowAlert_Modal');\n  } else {\n    let download_url = fileObject.driveItem[\"@microsoft.graph.downloadUrl\"];\n    let filename = fileObject.driveItem['name'];\n    let filetype = fileObject.driveItem[\"file\"][\"mimeType\"];\n    console.log(filetype, 'File');\n    download(download_url, filename, filetype);\n    await showAlert('File Downloaded Successfully', 'success');\n  }\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-15T09:06:23Z"},"publishedAction":{"name":"runDownloadFile","fullyQualifiedName":"FileUploadProcess.runDownloadFile","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","collectionId":"PO Entry_FileUploadProcess","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async () => {\n  let fileObject = await FileUploadProcess.getFileObject(ActualFileName_Input.text, appsmith.store.POId, 'POId');\n  console.log(fileObject);\n  if (appsmith.store.fileerror == 'true') {\n    await showModal('ShowAlert_Modal');\n  } else {\n    let download_url = fileObject.driveItem[\"@microsoft.graph.downloadUrl\"];\n    let filename = fileObject.driveItem['name'];\n    let filetype = fileObject.driveItem[\"file\"][\"mimeType\"];\n    console.log(filetype, 'File');\n    download(download_url, filename, filetype);\n    await showAlert('File Downloaded Successfully', 'success');\n  }\n}","selfReferencingDataPaths":[],"jsArguments":[]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async () => {\n  let fileObject = await FileUploadProcess.getFileObject(ActualFileName_Input.text, appsmith.store.POId, 'POId');\n  console.log(fileObject);\n  if (appsmith.store.fileerror == 'true') {\n    await showModal('ShowAlert_Modal');\n  } else {\n    let download_url = fileObject.driveItem[\"@microsoft.graph.downloadUrl\"];\n    let filename = fileObject.driveItem['name'];\n    let filetype = fileObject.driveItem[\"file\"][\"mimeType\"];\n    console.log(filetype, 'File');\n    download(download_url, filename, filetype);\n    await showAlert('File Downloaded Successfully', 'success');\n  }\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-15T09:06:23Z"},"id":"PO Entry_FileUploadProcess.runDownloadFile","deleted":false,"gitSyncId":"67f4d81e59d0ae34925978ba_67fe218f358e8b1adbeac75f"},{"pluginType":"JS","pluginId":"js-plugin","unpublishedAction":{"name":"myFun2","fullyQualifiedName":"Process.myFun2","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","organizationId":"62a1cace93e9481dacb0f741","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","collectionId":"PO Entry_Process","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async () => {}","selfReferencingDataPaths":[],"jsArguments":[],"isAsync":true},"executeOnLoad":false,"clientSideExecution":true,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async () => {}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"publishedAction":{"name":"myFun2","fullyQualifiedName":"Process.myFun2","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","organizationId":"62a1cace93e9481dacb0f741","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","collectionId":"PO Entry_Process","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async () => {}","selfReferencingDataPaths":[],"jsArguments":[],"isAsync":true},"executeOnLoad":false,"clientSideExecution":true,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async () => {}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"id":"PO Entry_Process.myFun2","deleted":false,"gitSyncId":"62c6dd94aa3be20812d63927_62c6dd94aa3be20812d63942"},{"pluginType":"JS","pluginId":"js-plugin","unpublishedAction":{"name":"getModalTitle","fullyQualifiedName":"Process.getModalTitle","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","organizationId":"62a1cace93e9481dacb0f741","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","collectionId":"PO Entry_Process","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"() => {\n  return appsmith.store.currentDecision?.Title || \"\";\n}","selfReferencingDataPaths":[],"jsArguments":[],"isAsync":false},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["() => {\n  return appsmith.store.currentDecision?.Title || \"\";\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"publishedAction":{"name":"getModalTitle","fullyQualifiedName":"Process.getModalTitle","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","organizationId":"62a1cace93e9481dacb0f741","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","collectionId":"PO Entry_Process","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"() => {\n  return appsmith.store.currentDecision?.Title || \"\";\n}","selfReferencingDataPaths":[],"jsArguments":[],"isAsync":false},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["() => {\n  return appsmith.store.currentDecision?.Title || \"\";\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"id":"PO Entry_Process.getModalTitle","deleted":false,"gitSyncId":"62c6dd94aa3be20812d63927_62c6dd94aa3be20812d63958"},{"pluginType":"DB","pluginId":"mysql-plugin","unpublishedAction":{"name":"EPOAttachments_Select","datasource":{"name":"appsmithmysql","pluginId":"mysql-plugin","messages":[],"isAutoGenerated":false,"id":"appsmithmysql","deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"SELECT * FROM EstimatePOAttachments\nWHERE EstimatePOAttachments.POId = {{this.params?.POId}}\n","selfReferencingDataPaths":[],"pluginSpecifiedTemplates":[{"value":true}]},"executeOnLoad":true,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["this.params?.POId"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-16T05:52:56Z"},"publishedAction":{"name":"EPOAttachments_Select","datasource":{"name":"appsmithmysql","pluginId":"mysql-plugin","messages":[],"isAutoGenerated":false,"id":"appsmithmysql","deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"SELECT * FROM EstimatePOAttachments\nWHERE EstimatePOAttachments.POId = {{this.params?.POId}}\n","selfReferencingDataPaths":[],"pluginSpecifiedTemplates":[{"value":true}]},"executeOnLoad":true,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["this.params?.POId"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-16T05:52:56Z"},"id":"PO Entry_EPOAttachments_Select","deleted":false,"gitSyncId":"67f4d81e59d0ae34925978ba_67ff45b8358e8b1adbeac881"},{"pluginType":"DB","pluginId":"mysql-plugin","unpublishedAction":{"name":"EPOAttachments_Insert","datasource":{"name":"appsmithmysql","pluginId":"mysql-plugin","messages":[],"isAutoGenerated":false,"id":"appsmithmysql","deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"INSERT INTO EstimatePOAttachments\n   (POId, FileName, Comments)\nVALUES (\n       {{this.params?.POId}},\n       {{this.params?.FileName}},\n       {{this.params?.Comments}}\n)\n","selfReferencingDataPaths":[],"pluginSpecifiedTemplates":[{"value":true}]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["this.params?.Comments","this.params?.FileName","this.params?.POId"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-16T05:55:38Z"},"publishedAction":{"name":"EPOAttachments_Insert","datasource":{"name":"appsmithmysql","pluginId":"mysql-plugin","messages":[],"isAutoGenerated":false,"id":"appsmithmysql","deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"INSERT INTO EstimatePOAttachments\n   (POId, FileName, Comments)\nVALUES (\n       {{this.params?.POId}},\n       {{this.params?.FileName}},\n       {{this.params?.Comments}}\n)\n","selfReferencingDataPaths":[],"pluginSpecifiedTemplates":[{"value":true}]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["this.params?.Comments","this.params?.FileName","this.params?.POId"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-16T05:55:38Z"},"id":"PO Entry_EPOAttachments_Insert","deleted":false,"gitSyncId":"67f4d81e59d0ae34925978ba_67ff465a358e8b1adbeac883"},{"pluginType":"DB","pluginId":"mysql-plugin","unpublishedAction":{"name":"PO_Update","datasource":{"name":"appsmithmysql","pluginId":"mysql-plugin","messages":[],"isAutoGenerated":false,"id":"appsmithmysql","deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"UPDATE PurchaseOrder \nSET\t   Number = {{this.params?.PONum}},\n\t     Description = {{this.params?.PODes}},\n\t     BillTo = {{this.params?.Billto}},\n\t     Shipto = {{this.params?.Shipto}}\t,\n\t     PaymentTerm = {{this.params?.PaymentTerm}},\n\t\t\tTaxable = {{this.params?.Taxable}}\nWHERE  PurchaseOrder.Id = {{ PO_Details_Select.data?.find((row) => row.EId == Estimate_PO_Table.selectedRow.EstimateId)?.PurchaseOrderId}}\n","selfReferencingDataPaths":[]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["this.params?.PONum"," PO_Details_Select.data?.find((row) => row.EId == Estimate_PO_Table.selectedRow.EstimateId)?.PurchaseOrderId","this.params?.PaymentTerm","this.params?.Billto","this.params?.PODes","this.params?.Taxable","this.params?.Shipto"],"userSetOnLoad":false,"confirmBeforeExecute":true,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"publishedAction":{"name":"PO_Update","datasource":{"name":"appsmithmysql","pluginId":"mysql-plugin","messages":[],"isAutoGenerated":false,"id":"appsmithmysql","deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"UPDATE PurchaseOrder \nSET\t   Number = {{this.params?.PONum}},\n\t     Description = {{this.params?.PODes}},\n\t     BillTo = {{this.params?.Billto}},\n\t     Shipto = {{this.params?.Shipto}}\t,\n\t     PaymentTerm = {{this.params?.PaymentTerm}},\n\t\t\tTaxable = {{this.params?.Taxable}}\nWHERE  PurchaseOrder.Id = {{ PO_Details_Select.data?.find((row) => row.EId == Estimate_PO_Table.selectedRow.EstimateId)?.PurchaseOrderId}}\n","selfReferencingDataPaths":[]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["this.params?.PONum"," PO_Details_Select.data?.find((row) => row.EId == Estimate_PO_Table.selectedRow.EstimateId)?.PurchaseOrderId","this.params?.PaymentTerm","this.params?.Billto","this.params?.PODes","this.params?.Taxable","this.params?.Shipto"],"userSetOnLoad":false,"confirmBeforeExecute":true,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"id":"PO Entry_PO_Update","deleted":false,"gitSyncId":"62c6dd94aa3be20812d63927_62c6dd94aa3be20812d63979"},{"pluginType":"API","pluginId":"restapi-plugin","unpublishedAction":{"name":"ListItemMetaDataCreate_Select","datasource":{"name":"MS Graph","pluginId":"restapi-plugin","messages":[],"isAutoGenerated":false,"id":"MS Graph","deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","path":"/v1.0/sites/{{this.params.siteId}}/lists/{{this.params.listId}}/items","headers":[],"autoGeneratedHeaders":[],"encodeParamsToggle":true,"queryParameters":[{"key":"$expand","value":"driveItem"},{"key":"$filter","value":"fields/{{this.params.NumberName}} eq null"},{"key":"$select","value":"id"}],"body":"","bodyFormData":[],"httpMethod":"GET","httpVersion":"HTTP11","selfReferencingDataPaths":[],"pluginSpecifiedTemplates":[{"value":true}],"formData":{"apiContentType":"none"}},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"path"},{"key":"queryParameters[1].value"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["this.params.siteId","this.params.listId","this.params.NumberName"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-15T09:09:57Z"},"publishedAction":{"name":"ListItemMetaDataCreate_Select","datasource":{"name":"MS Graph","pluginId":"restapi-plugin","messages":[],"isAutoGenerated":false,"id":"MS Graph","deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","path":"/v1.0/sites/{{this.params.siteId}}/lists/{{this.params.listId}}/items","headers":[],"autoGeneratedHeaders":[],"encodeParamsToggle":true,"queryParameters":[{"key":"$expand","value":"driveItem"},{"key":"$filter","value":"fields/{{this.params.NumberName}} eq null"},{"key":"$select","value":"id"}],"body":"","bodyFormData":[],"httpMethod":"GET","httpVersion":"HTTP11","selfReferencingDataPaths":[],"pluginSpecifiedTemplates":[{"value":true}],"formData":{"apiContentType":"none"}},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"path"},{"key":"queryParameters[1].value"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["this.params.siteId","this.params.listId","this.params.NumberName"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-15T09:09:57Z"},"id":"PO Entry_ListItemMetaDataCreate_Select","deleted":false,"gitSyncId":"67f4d81e59d0ae34925978ba_67fe2265358e8b1adbeac786"},{"pluginType":"JS","pluginId":"js-plugin","unpublishedAction":{"name":"validateForm","fullyQualifiedName":"GlobalVariables.validateForm","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","organizationId":"62a1cace93e9481dacb0f741","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","collectionId":"PO Entry_GlobalVariables","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"formWidgets => {\n  let validity = true;\n  for (let aWidget of formWidgets) {\n    validity = validity && GlobalVariables.validateWidget(aWidget);\n    if (validity === false) break;\n  }\n  return validity;\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"formWidgets"}],"isAsync":false},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["formWidgets => {\n  let validity = true;\n  for (let aWidget of formWidgets) {\n    validity = validity && GlobalVariables.validateWidget(aWidget);\n    if (validity === false) break;\n  }\n  return validity;\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"publishedAction":{"name":"validateForm","fullyQualifiedName":"GlobalVariables.validateForm","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","organizationId":"62a1cace93e9481dacb0f741","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","collectionId":"PO Entry_GlobalVariables","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"formWidgets => {\n  let validity = true;\n  for (let aWidget of formWidgets) {\n    validity = validity && GlobalVariables.validateWidget(aWidget);\n    if (validity === false) break;\n  }\n  return validity;\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"formWidgets"}],"isAsync":false},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["formWidgets => {\n  let validity = true;\n  for (let aWidget of formWidgets) {\n    validity = validity && GlobalVariables.validateWidget(aWidget);\n    if (validity === false) break;\n  }\n  return validity;\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"id":"PO Entry_GlobalVariables.validateForm","deleted":false,"gitSyncId":"62c6dd94aa3be20812d63927_62c6dd94aa3be20812d639a1"},{"pluginType":"API","pluginId":"restapi-plugin","unpublishedAction":{"name":"SpecificFilesInDrive_Select","datasource":{"name":"MS Graph","pluginId":"restapi-plugin","messages":[],"isAutoGenerated":false,"id":"MS Graph","deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","path":"/v1.0/drives/{{this.params.DriveId}}/items/{{this.params.DriveItemId}}/children","headers":[],"autoGeneratedHeaders":[],"encodeParamsToggle":true,"queryParameters":[{"key":"$filter","value":"name eq '{{this.params.FileName}}'"}],"body":"","bodyFormData":[],"httpMethod":"GET","httpVersion":"HTTP11","selfReferencingDataPaths":[],"pluginSpecifiedTemplates":[{"value":true}],"formData":{"apiContentType":"none"}},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"path"},{"key":"queryParameters[0].value"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["this.params.DriveItemId","this.params.DriveId","this.params.FileName"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-15T09:10:36Z"},"publishedAction":{"name":"SpecificFilesInDrive_Select","datasource":{"name":"MS Graph","pluginId":"restapi-plugin","messages":[],"isAutoGenerated":false,"id":"MS Graph","deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","path":"/v1.0/drives/{{this.params.DriveId}}/items/{{this.params.DriveItemId}}/children","headers":[],"autoGeneratedHeaders":[],"encodeParamsToggle":true,"queryParameters":[{"key":"$filter","value":"name eq '{{this.params.FileName}}'"}],"body":"","bodyFormData":[],"httpMethod":"GET","httpVersion":"HTTP11","selfReferencingDataPaths":[],"pluginSpecifiedTemplates":[{"value":true}],"formData":{"apiContentType":"none"}},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"path"},{"key":"queryParameters[0].value"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["this.params.DriveItemId","this.params.DriveId","this.params.FileName"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-15T09:10:36Z"},"id":"PO Entry_SpecificFilesInDrive_Select","deleted":false,"gitSyncId":"67f4d81e59d0ae34925978ba_67fe228c358e8b1adbeac78f"},{"pluginType":"DB","pluginId":"mysql-plugin","unpublishedAction":{"name":"PO_Item_Select","datasource":{"name":"appsmithmysql","pluginId":"mysql-plugin","messages":[],"isAutoGenerated":false,"id":"appsmithmysql","deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"SELECT * \nFROM   PurchaseOrderItem  \nWHERE  PurchaseOrderItem.PurchaseOrderId = {{this.params?.purchaseOrderId}} \n       AND PurchaseOrderItem.Deleted = 0 ","selfReferencingDataPaths":[],"pluginSpecifiedTemplates":[{"value":true}]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["this.params?.purchaseOrderId"],"userSetOnLoad":true,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"publishedAction":{"name":"PO_Item_Select","datasource":{"name":"appsmithmysql","pluginId":"mysql-plugin","messages":[],"isAutoGenerated":false,"id":"appsmithmysql","deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"SELECT * \nFROM   PurchaseOrderItem  \nWHERE  PurchaseOrderItem.PurchaseOrderId = {{this.params?.purchaseOrderId}} \n       AND PurchaseOrderItem.Deleted = 0 ","selfReferencingDataPaths":[],"pluginSpecifiedTemplates":[{"value":true}]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["this.params?.purchaseOrderId"],"userSetOnLoad":true,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"id":"PO Entry_PO_Item_Select","deleted":false,"gitSyncId":"62c6dd94aa3be20812d63927_62c6dd94aa3be20812d63955"},{"pluginType":"JS","pluginId":"js-plugin","unpublishedAction":{"name":"disableEstCompleteArrow","fullyQualifiedName":"PageObjects.disableEstCompleteArrow","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","collectionId":"PO Entry_PageObjects","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"() => {\n  if (Estimates_POItems_Select.data.length > 0) {\n    return false;\n  }\n}","selfReferencingDataPaths":[],"jsArguments":[]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["() => {\n  if (Estimates_POItems_Select.data.length > 0) {\n    return false;\n  }\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-05-27T05:33:46Z"},"publishedAction":{"name":"disableEstCompleteArrow","fullyQualifiedName":"PageObjects.disableEstCompleteArrow","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","collectionId":"PO Entry_PageObjects","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"() => {\n  if (Estimates_POItems_Select.data.length > 0) {\n    return false;\n  }\n}","selfReferencingDataPaths":[],"jsArguments":[]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["() => {\n  if (Estimates_POItems_Select.data.length > 0) {\n    return false;\n  }\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-05-27T05:33:46Z"},"id":"PO Entry_PageObjects.disableEstCompleteArrow","deleted":false,"gitSyncId":"67f4d81e59d0ae34925978ba_68354eba8ac7e426300c3802"},{"pluginType":"DB","pluginId":"mysql-plugin","unpublishedAction":{"name":"PO_Item_Update","datasource":{"name":"appsmithmysql","pluginId":"mysql-plugin","messages":[],"isAutoGenerated":false,"id":"appsmithmysql","deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"UPDATE PurchaseOrderItem \nSET    Number = {{this.params?.POItemNum}},\n       Description = {{this.params?.POItemDes}},\n\t\t\t Quantity = {{parseFloat(this.params?.POItemQty)}},\n\t\t\t Amount = {{parseFloat(this.params?.POItemAmt)}},\n       SalesTax = {{this.params?.SalesTax}}\nWHERE  PurchaseOrderItem.Id = {{this.params?.POItemId}}","selfReferencingDataPaths":[],"pluginSpecifiedTemplates":[{"value":true}]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["this.params?.POItemNum","parseFloat(this.params?.POItemAmt)","this.params?.POItemDes","parseFloat(this.params?.POItemQty)","this.params?.POItemId","this.params?.SalesTax"],"userSetOnLoad":false,"confirmBeforeExecute":true,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"publishedAction":{"name":"PO_Item_Update","datasource":{"name":"appsmithmysql","pluginId":"mysql-plugin","messages":[],"isAutoGenerated":false,"id":"appsmithmysql","deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"UPDATE PurchaseOrderItem \nSET    Number = {{this.params?.POItemNum}},\n       Description = {{this.params?.POItemDes}},\n\t\t\t Quantity = {{parseFloat(this.params?.POItemQty)}},\n\t\t\t Amount = {{parseFloat(this.params?.POItemAmt)}},\n       SalesTax = {{this.params?.SalesTax}}\nWHERE  PurchaseOrderItem.Id = {{this.params?.POItemId}}","selfReferencingDataPaths":[],"pluginSpecifiedTemplates":[{"value":true}]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["this.params?.POItemNum","parseFloat(this.params?.POItemAmt)","this.params?.POItemDes","parseFloat(this.params?.POItemQty)","this.params?.POItemId","this.params?.SalesTax"],"userSetOnLoad":false,"confirmBeforeExecute":true,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"id":"PO Entry_PO_Item_Update","deleted":false,"gitSyncId":"62c6dd94aa3be20812d63927_62c6dd94aa3be20812d6395f"},{"pluginType":"DB","pluginId":"mysql-plugin","unpublishedAction":{"name":"UserRoles_Select","datasource":{"name":"appsmithmysql","pluginId":"mysql-plugin","messages":[],"isAutoGenerated":false,"id":"appsmithmysql","deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"SELECT Role.Name \nFROM Role \nINNER JOIN UserRole ON Role.Id  = UserRole.RoleId  \nINNER JOIN AppUser ON UserRole.UserId = AppUser.Id  \nWHERE AppUser.UserName = '{{appsmith.user.username.split('@')[0]}}'","selfReferencingDataPaths":[],"pluginSpecifiedTemplates":[{"value":true}]},"executeOnLoad":true,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["appsmith.user.username.split('@')[0]"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-02-23T09:05:37Z"},"publishedAction":{"name":"UserRoles_Select","datasource":{"name":"appsmithmysql","pluginId":"mysql-plugin","messages":[],"isAutoGenerated":false,"id":"appsmithmysql","deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"SELECT Role.Name \nFROM Role \nINNER JOIN UserRole ON Role.Id  = UserRole.RoleId  \nINNER JOIN AppUser ON UserRole.UserId = AppUser.Id  \nWHERE AppUser.UserName = '{{appsmith.user.username.split('@')[0]}}'","selfReferencingDataPaths":[],"pluginSpecifiedTemplates":[{"value":true}]},"executeOnLoad":true,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["appsmith.user.username.split('@')[0]"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-02-23T09:05:37Z"},"id":"PO Entry_UserRoles_Select","deleted":false,"gitSyncId":"67bae209bfd36a5abab32b21_67bae4e1bfd36a5abab32b9b"},{"pluginType":"DB","pluginId":"mysql-plugin","unpublishedAction":{"name":"PO_Item_Delete","datasource":{"name":"appsmithmysql","pluginId":"mysql-plugin","messages":[],"isAutoGenerated":false,"id":"appsmithmysql","deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"UPDATE PurchaseOrderItem \nSET    Deleted = 1\nWHERE  PurchaseOrderItem.Id = {{this.params?.POItemId}};","selfReferencingDataPaths":[]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["this.params?.POItemId"],"userSetOnLoad":false,"confirmBeforeExecute":true,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"publishedAction":{"name":"PO_Item_Delete","datasource":{"name":"appsmithmysql","pluginId":"mysql-plugin","messages":[],"isAutoGenerated":false,"id":"appsmithmysql","deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"UPDATE PurchaseOrderItem \nSET    Deleted = 1\nWHERE  PurchaseOrderItem.Id = {{this.params?.POItemId}};","selfReferencingDataPaths":[]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["this.params?.POItemId"],"userSetOnLoad":false,"confirmBeforeExecute":true,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"id":"PO Entry_PO_Item_Delete","deleted":false,"gitSyncId":"62c6dd94aa3be20812d63927_62c6dd94aa3be20812d63963"},{"pluginType":"DB","pluginId":"mysql-plugin","unpublishedAction":{"name":"Estimate_State_Update","datasource":{"name":"appsmithmysql","pluginId":"mysql-plugin","messages":[],"isAutoGenerated":false,"id":"appsmithmysql","deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"UPDATE Estimate \nSET    CurrentState = {{this.params?.nextState}}\nWHERE  Estimate.Id = {{this.params?.estimateId}};","selfReferencingDataPaths":[]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["this.params?.nextState","this.params?.estimateId"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"publishedAction":{"name":"Estimate_State_Update","datasource":{"name":"appsmithmysql","pluginId":"mysql-plugin","messages":[],"isAutoGenerated":false,"id":"appsmithmysql","deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"UPDATE Estimate \nSET    CurrentState = {{this.params?.nextState}}\nWHERE  Estimate.Id = {{this.params?.estimateId}};","selfReferencingDataPaths":[]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["this.params?.nextState","this.params?.estimateId"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"id":"PO Entry_Estimate_State_Update","deleted":false,"gitSyncId":"62c6dd94aa3be20812d63927_62c6dd94aa3be20812d63971"},{"pluginType":"JS","pluginId":"js-plugin","unpublishedAction":{"name":"validateWidget","fullyQualifiedName":"GlobalVariables.validateWidget","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","organizationId":"62a1cace93e9481dacb0f741","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","collectionId":"PO Entry_GlobalVariables","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"widgetObject => {\n  let valid = false;\n  if (widgetObject.isValid === true) {\n    valid = true;\n  } else {\n    valid = false;\n  }\n  return valid;\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"widgetObject"}],"isAsync":false},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["widgetObject => {\n  let valid = false;\n  if (widgetObject.isValid === true) {\n    valid = true;\n  } else {\n    valid = false;\n  }\n  return valid;\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"publishedAction":{"name":"validateWidget","fullyQualifiedName":"GlobalVariables.validateWidget","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","organizationId":"62a1cace93e9481dacb0f741","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","collectionId":"PO Entry_GlobalVariables","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"widgetObject => {\n  let valid = false;\n  if (widgetObject.isValid === true) {\n    valid = true;\n  } else {\n    valid = false;\n  }\n  return valid;\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"widgetObject"}],"isAsync":false},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["widgetObject => {\n  let valid = false;\n  if (widgetObject.isValid === true) {\n    valid = true;\n  } else {\n    valid = false;\n  }\n  return valid;\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"id":"PO Entry_GlobalVariables.validateWidget","deleted":false,"gitSyncId":"62c6dd94aa3be20812d63927_62c6dd94aa3be20812d63930"},{"pluginType":"API","pluginId":"restapi-plugin","unpublishedAction":{"name":"File_Delete","datasource":{"name":"MS Graph","pluginId":"restapi-plugin","messages":[],"isAutoGenerated":false,"id":"MS Graph","deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","path":"/v1.0/drives/{{this.params.driveId}}/items/{{this.params.itemId}}","headers":[{"key":"Content-type","value":"text/plain"}],"autoGeneratedHeaders":[{"key":"content-type","value":"application/json"}],"encodeParamsToggle":true,"queryParameters":[],"body":"","bodyFormData":[],"httpMethod":"DELETE","httpVersion":"HTTP11","selfReferencingDataPaths":[],"pluginSpecifiedTemplates":[{"value":true}],"formData":{"apiContentType":"none"}},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"path"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["this.params.driveId","this.params.itemId"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-15T09:08:08Z"},"publishedAction":{"name":"File_Delete","datasource":{"name":"MS Graph","pluginId":"restapi-plugin","messages":[],"isAutoGenerated":false,"id":"MS Graph","deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","path":"/v1.0/drives/{{this.params.driveId}}/items/{{this.params.itemId}}","headers":[{"key":"Content-type","value":"text/plain"}],"autoGeneratedHeaders":[{"key":"content-type","value":"application/json"}],"encodeParamsToggle":true,"queryParameters":[],"body":"","bodyFormData":[],"httpMethod":"DELETE","httpVersion":"HTTP11","selfReferencingDataPaths":[],"pluginSpecifiedTemplates":[{"value":true}],"formData":{"apiContentType":"none"}},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"path"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["this.params.driveId","this.params.itemId"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-15T09:08:08Z"},"id":"PO Entry_File_Delete","deleted":false,"gitSyncId":"67f4d81e59d0ae34925978ba_67fe21f8358e8b1adbeac782"},{"pluginType":"JS","pluginId":"js-plugin","unpublishedAction":{"name":"DisablePODetailsUpdateButton","fullyQualifiedName":"PageObjects.DisablePODetailsUpdateButton","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","organizationId":"62a1cace93e9481dacb0f741","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","collectionId":"PO Entry_PageObjects","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"() => {\n  return Estimate_PO_Table.selectedRowIndex == -1 || appsmith.store.currentStateName == 'Completed' || GlobalVariables.disableCreateButton([PO_Number_Input, PO_Description_Input, PO_BillTo_Input, PO_ShipTo_Input, PO_PaymentTerm_Input]);\n}","selfReferencingDataPaths":[],"jsArguments":[],"isAsync":false},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["() => {\n  return Estimate_PO_Table.selectedRowIndex == -1 || appsmith.store.currentStateName == 'Completed' || GlobalVariables.disableCreateButton([PO_Number_Input, PO_Description_Input, PO_BillTo_Input, PO_ShipTo_Input, PO_PaymentTerm_Input]);\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"publishedAction":{"name":"DisablePODetailsUpdateButton","fullyQualifiedName":"PageObjects.DisablePODetailsUpdateButton","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","organizationId":"62a1cace93e9481dacb0f741","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","collectionId":"PO Entry_PageObjects","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"() => {\n  return Estimate_PO_Table.selectedRowIndex == -1 || appsmith.store.currentStateName == 'Completed' || GlobalVariables.disableCreateButton([PO_Number_Input, PO_Description_Input, PO_BillTo_Input, PO_ShipTo_Input, PO_PaymentTerm_Input]);\n}","selfReferencingDataPaths":[],"jsArguments":[],"isAsync":false},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["() => {\n  return Estimate_PO_Table.selectedRowIndex == -1 || appsmith.store.currentStateName == 'Completed' || GlobalVariables.disableCreateButton([PO_Number_Input, PO_Description_Input, PO_BillTo_Input, PO_ShipTo_Input, PO_PaymentTerm_Input]);\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"id":"PO Entry_PageObjects.DisablePODetailsUpdateButton","deleted":false,"gitSyncId":"62c6dd94aa3be20812d63927_62c6dd94aa3be20812d6397f"},{"pluginType":"DB","pluginId":"mysql-plugin","unpublishedAction":{"name":"PO_Details_Select","datasource":{"name":"appsmithmysql","pluginId":"mysql-plugin","messages":[],"isAutoGenerated":false,"id":"appsmithmysql","deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"SELECT  PurchaseOrder.Id AS PurchaseOrderId,\n\t\t    PurchaseOrder.Number AS PurchaseOrderNumber,\n\t\t    PurchaseOrder.Description AS PurchaseOrderDescription,\n\t\t    PurchaseOrder.BillTo,\n\t\t    PurchaseOrder.ShipTo,\n\t\t    PurchaseOrder.PaymentTerm,\n\t\t\t  PurchaseOrder.EstimateId as EId,\n\t\t   (SELECT COUNT(*) FROM PurchaseOrderItem \n\t\t\t \t\tWHERE PurchaseOrderItem.PurchaseOrderId = PurchaseOrder.Id           \n\t\t\t\t\t\t\t\tAND PurchaseOrderItem.Deleted = 0) AS POitemsNO \nFROM PurchaseOrder \nWHERE PurchaseOrder.Deleted = 0;","selfReferencingDataPaths":[],"pluginSpecifiedTemplates":[{"value":true}]},"executeOnLoad":true,"dynamicBindingPathList":[],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":[],"userSetOnLoad":true,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"publishedAction":{"name":"PO_Details_Select","datasource":{"name":"appsmithmysql","pluginId":"mysql-plugin","messages":[],"isAutoGenerated":false,"id":"appsmithmysql","deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"SELECT  PurchaseOrder.Id AS PurchaseOrderId,\n\t\t    PurchaseOrder.Number AS PurchaseOrderNumber,\n\t\t    PurchaseOrder.Description AS PurchaseOrderDescription,\n\t\t    PurchaseOrder.BillTo,\n\t\t    PurchaseOrder.ShipTo,\n\t\t    PurchaseOrder.PaymentTerm,\n\t\t\t  PurchaseOrder.EstimateId as EId,\n\t\t   (SELECT COUNT(*) FROM PurchaseOrderItem \n\t\t\t \t\tWHERE PurchaseOrderItem.PurchaseOrderId = PurchaseOrder.Id           \n\t\t\t\t\t\t\t\tAND PurchaseOrderItem.Deleted = 0) AS POitemsNO \nFROM PurchaseOrder \nWHERE PurchaseOrder.Deleted = 0;","selfReferencingDataPaths":[],"pluginSpecifiedTemplates":[{"value":true}]},"executeOnLoad":true,"dynamicBindingPathList":[],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":[],"userSetOnLoad":true,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"id":"PO Entry_PO_Details_Select","deleted":false,"gitSyncId":"62c6dd94aa3be20812d63927_62c6dd95aa3be20812d639b9"},{"pluginType":"DB","pluginId":"mysql-plugin","unpublishedAction":{"name":"Duplicate_Value_Select","datasource":{"name":"appsmithmysql","pluginId":"mysql-plugin","messages":[],"isAutoGenerated":false,"id":"appsmithmysql","deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"SELECT COUNT(*) AS row_count \nFROM   `{{this.params.tableName}}` \nWHERE  `{{this.params.columnName}}` = '{{this.params?.columnValue}}'; ","selfReferencingDataPaths":[],"pluginSpecifiedTemplates":[{"value":false}]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["this.params.tableName","this.params.columnName","this.params?.columnValue"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"publishedAction":{"name":"Duplicate_Value_Select","datasource":{"name":"appsmithmysql","pluginId":"mysql-plugin","messages":[],"isAutoGenerated":false,"id":"appsmithmysql","deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"SELECT COUNT(*) AS row_count \nFROM   `{{this.params.tableName}}` \nWHERE  `{{this.params.columnName}}` = '{{this.params?.columnValue}}'; ","selfReferencingDataPaths":[],"pluginSpecifiedTemplates":[{"value":false}]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["this.params.tableName","this.params.columnName","this.params?.columnValue"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"id":"PO Entry_Duplicate_Value_Select","deleted":false,"gitSyncId":"62c6dd94aa3be20812d63927_62c6dd94aa3be20812d63974"},{"pluginType":"DB","pluginId":"mysql-plugin","unpublishedAction":{"name":"Estimates_POItems_Select","datasource":{"name":"appsmithmysql","pluginId":"mysql-plugin","messages":[],"isAutoGenerated":false,"id":"appsmithmysql","deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"SELECT PurchaseOrderItem.Id FROM PurchaseOrderItem\nINNER JOIN PurchaseOrder ON PurchaseOrderItem.PurchaseOrderId = PurchaseOrder.Id\nINNER JOIN Estimate ON PurchaseOrder.EstimateId = Estimate.Id\nWHERE Estimate.Id = {{this.params?.EId}} AND PurchaseOrder.Deleted = 0 AND PurchaseOrderItem.Deleted = 0","selfReferencingDataPaths":[],"pluginSpecifiedTemplates":[{"value":true}]},"executeOnLoad":true,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["this.params?.EId"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-05-27T05:52:22Z"},"publishedAction":{"name":"Estimates_POItems_Select","datasource":{"name":"appsmithmysql","pluginId":"mysql-plugin","messages":[],"isAutoGenerated":false,"id":"appsmithmysql","deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"SELECT PurchaseOrderItem.Id FROM PurchaseOrderItem\nINNER JOIN PurchaseOrder ON PurchaseOrderItem.PurchaseOrderId = PurchaseOrder.Id\nINNER JOIN Estimate ON PurchaseOrder.EstimateId = Estimate.Id\nWHERE Estimate.Id = {{this.params?.EId}} AND PurchaseOrder.Deleted = 0 AND PurchaseOrderItem.Deleted = 0","selfReferencingDataPaths":[],"pluginSpecifiedTemplates":[{"value":true}]},"executeOnLoad":true,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["this.params?.EId"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-05-27T05:52:22Z"},"id":"PO Entry_Estimates_POItems_Select","deleted":false,"gitSyncId":"67f4d81e59d0ae34925978ba_683553168ac7e426300c385d"},{"pluginType":"API","pluginId":"restapi-plugin","unpublishedAction":{"name":"FileMetadata_Create","datasource":{"name":"MS Graph","pluginId":"restapi-plugin","messages":[],"isAutoGenerated":false,"id":"MS Graph","deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","path":"/v1.0/sites/{{this.params.siteId}}/lists/{{this.params.listId}}/items/{{this.params.listItemId}}/fields","headers":[{"key":"content-type","value":"application/json"}],"autoGeneratedHeaders":[{"key":"content-type","value":"application/json"}],"encodeParamsToggle":true,"queryParameters":[],"body":"{{\nthis.params.fileParams\n}}","bodyFormData":[],"httpMethod":"PATCH","httpVersion":"HTTP11","selfReferencingDataPaths":[],"pluginSpecifiedTemplates":[{"value":true}],"formData":{"apiContentType":"none"}},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"path"},{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["this.params.siteId","this.params.listItemId","this.params.listId","\nthis.params.fileParams\n"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-15T09:07:56Z"},"publishedAction":{"name":"FileMetadata_Create","datasource":{"name":"MS Graph","pluginId":"restapi-plugin","messages":[],"isAutoGenerated":false,"id":"MS Graph","deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","path":"/v1.0/sites/{{this.params.siteId}}/lists/{{this.params.listId}}/items/{{this.params.listItemId}}/fields","headers":[{"key":"content-type","value":"application/json"}],"autoGeneratedHeaders":[{"key":"content-type","value":"application/json"}],"encodeParamsToggle":true,"queryParameters":[],"body":"{{\nthis.params.fileParams\n}}","bodyFormData":[],"httpMethod":"PATCH","httpVersion":"HTTP11","selfReferencingDataPaths":[],"pluginSpecifiedTemplates":[{"value":true}],"formData":{"apiContentType":"none"}},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"path"},{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["this.params.siteId","this.params.listItemId","this.params.listId","\nthis.params.fileParams\n"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-15T09:07:56Z"},"id":"PO Entry_FileMetadata_Create","deleted":false,"gitSyncId":"67f4d81e59d0ae34925978ba_67fe21ec358e8b1adbeac780"},{"pluginType":"DB","pluginId":"mysql-plugin","unpublishedAction":{"name":"PO_Select","datasource":{"name":"appsmithmysql","pluginId":"mysql-plugin","messages":[],"isAutoGenerated":false,"id":"appsmithmysql","deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"SELECT PurchaseOrder.Id, \n       PurchaseOrder.Number as PurchaseOrderNumber,\n\t\t\t PurchaseOrder.Description, PurchaseOrder.Taxable,\n\t\t\t Estimate.Number as EstimateNumber,Sales.Number AS SalesNumber,\n\t\t\t Estimate.Id AS EstId,\n\t\t\t EstimatePOAttachments.Id AS FileId\n\t\t\t \nFROM   Sales \n\t     JOIN Estimate \n\t     JOIN PurchaseOrder \n\t\t   ON Sales.Id = Estimate.SalesId \n\t\t   AND Estimate.Id = PurchaseOrder.EstimateId \n\t\t\t LEFT JOIN AppUser AS BusinessManager ON Sales.BusinessManagerId = BusinessManager.Id \n\t\t\t LEFT JOIN EstimatePOAttachments ON PurchaseOrder.Id = EstimatePOAttachments.POId\nWHERE  PurchaseOrder.Deleted = 0 \n       AND Estimate.CurrentState = '{{ appsmith.store?.currentStateName || 'EnterPO' }}' \n\t\t\t \tAND (\n        (\n            '{{appsmith.store.FilterRole}}' = 'BusinessManager'\n            AND BusinessManager.UserName = '{{appsmith.user.username.split('@')[0]}}'\n        )\n        OR\n        '{{appsmith.store.FilterRole}}' = 'SalesManager'\n    )\nORDER BY \n       Sales.Number DESC;\n","selfReferencingDataPaths":[],"pluginSpecifiedTemplates":[{"value":true}]},"executeOnLoad":true,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":[" appsmith.store?.currentStateName || 'EnterPO' ","appsmith.store.FilterRole","appsmith.user.username.split('@')[0]"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"publishedAction":{"name":"PO_Select","datasource":{"name":"appsmithmysql","pluginId":"mysql-plugin","messages":[],"isAutoGenerated":false,"id":"appsmithmysql","deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"SELECT PurchaseOrder.Id, \n       PurchaseOrder.Number as PurchaseOrderNumber,\n\t\t\t PurchaseOrder.Description, PurchaseOrder.Taxable,\n\t\t\t Estimate.Number as EstimateNumber,Sales.Number AS SalesNumber,\n\t\t\t Estimate.Id AS EstId,\n\t\t\t EstimatePOAttachments.Id AS FileId\n\t\t\t \nFROM   Sales \n\t     JOIN Estimate \n\t     JOIN PurchaseOrder \n\t\t   ON Sales.Id = Estimate.SalesId \n\t\t   AND Estimate.Id = PurchaseOrder.EstimateId \n\t\t\t LEFT JOIN AppUser AS BusinessManager ON Sales.BusinessManagerId = BusinessManager.Id \n\t\t\t LEFT JOIN EstimatePOAttachments ON PurchaseOrder.Id = EstimatePOAttachments.POId\nWHERE  PurchaseOrder.Deleted = 0 \n       AND Estimate.CurrentState = '{{ appsmith.store?.currentStateName || 'EnterPO' }}' \n\t\t\t \tAND (\n        (\n            '{{appsmith.store.FilterRole}}' = 'BusinessManager'\n            AND BusinessManager.UserName = '{{appsmith.user.username.split('@')[0]}}'\n        )\n        OR\n        '{{appsmith.store.FilterRole}}' = 'SalesManager'\n    )\nORDER BY \n       Sales.Number DESC;\n","selfReferencingDataPaths":[],"pluginSpecifiedTemplates":[{"value":true}]},"executeOnLoad":true,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":[" appsmith.store?.currentStateName || 'EnterPO' ","appsmith.store.FilterRole","appsmith.user.username.split('@')[0]"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"id":"PO Entry_PO_Select","deleted":false,"gitSyncId":"62c6dd94aa3be20812d63927_62c6dd94aa3be20812d63954"},{"pluginType":"DB","pluginId":"mysql-plugin","unpublishedAction":{"name":"EPOAttachments_Delete","datasource":{"name":"appsmithmysql","pluginId":"mysql-plugin","messages":[],"isAutoGenerated":false,"id":"appsmithmysql","deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"DELETE \nFROM EstimatePOAttachments\nWHERE Id = {{this.params?.FileId}};\n","selfReferencingDataPaths":[],"pluginSpecifiedTemplates":[{"value":true}]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["this.params?.FileId"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-22T09:15:13Z"},"publishedAction":{"name":"EPOAttachments_Delete","datasource":{"name":"appsmithmysql","pluginId":"mysql-plugin","messages":[],"isAutoGenerated":false,"id":"appsmithmysql","deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"DELETE \nFROM EstimatePOAttachments\nWHERE Id = {{this.params?.FileId}};\n","selfReferencingDataPaths":[],"pluginSpecifiedTemplates":[{"value":true}]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["this.params?.FileId"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-22T09:15:13Z"},"id":"PO Entry_EPOAttachments_Delete","deleted":false,"gitSyncId":"67f4d81e59d0ae34925978ba_68075e21cf72a01915d99c5b"},{"pluginType":"DB","pluginId":"mysql-plugin","unpublishedAction":{"name":"PO_Item_Insert","datasource":{"name":"appsmithmysql","pluginId":"mysql-plugin","messages":[],"isAutoGenerated":false,"id":"appsmithmysql","deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"INSERT INTO PurchaseOrderItem \n           (PurchaseOrderId, Number , Description, Quantity, Amount, SalesTax) \nVALUES\n            ({{this.params?.POId}},\n\t          {{this.params?.POItemNum}},\n\t          {{this.params?.POItemDes}},\n\t          {{parseFloat(this.params?.POItemQty)}},\n\t          {{parseFloat(this.params?.POItemAmt)}},\n \t          {{this.params?.SalesTax}}\n            );","selfReferencingDataPaths":[]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["this.params?.POItemNum","parseFloat(this.params?.POItemAmt)","this.params?.POItemDes","parseFloat(this.params?.POItemQty)","this.params?.POId","this.params?.SalesTax"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"publishedAction":{"name":"PO_Item_Insert","datasource":{"name":"appsmithmysql","pluginId":"mysql-plugin","messages":[],"isAutoGenerated":false,"id":"appsmithmysql","deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"INSERT INTO PurchaseOrderItem \n           (PurchaseOrderId, Number , Description, Quantity, Amount, SalesTax) \nVALUES\n            ({{this.params?.POId}},\n\t          {{this.params?.POItemNum}},\n\t          {{this.params?.POItemDes}},\n\t          {{parseFloat(this.params?.POItemQty)}},\n\t          {{parseFloat(this.params?.POItemAmt)}},\n \t          {{this.params?.SalesTax}}\n            );","selfReferencingDataPaths":[]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["this.params?.POItemNum","parseFloat(this.params?.POItemAmt)","this.params?.POItemDes","parseFloat(this.params?.POItemQty)","this.params?.POId","this.params?.SalesTax"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"id":"PO Entry_PO_Item_Insert","deleted":false,"gitSyncId":"62c6dd94aa3be20812d63927_62c6dd94aa3be20812d6394d"},{"pluginType":"DB","pluginId":"mysql-plugin","unpublishedAction":{"name":"EPOAttachments_Update","datasource":{"name":"appsmithmysql","pluginId":"mysql-plugin","messages":[],"isAutoGenerated":false,"id":"appsmithmysql","deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"UPDATE EstimatePOAttachments\n  SET Comments = {{this.params?.FileComments}}\n  WHERE Id = {{this.params?.FileId}};\n","selfReferencingDataPaths":[],"pluginSpecifiedTemplates":[{"value":true}]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["this.params?.FileComments","this.params?.FileId"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-16T05:56:37Z"},"publishedAction":{"name":"EPOAttachments_Update","datasource":{"name":"appsmithmysql","pluginId":"mysql-plugin","messages":[],"isAutoGenerated":false,"id":"appsmithmysql","deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"UPDATE EstimatePOAttachments\n  SET Comments = {{this.params?.FileComments}}\n  WHERE Id = {{this.params?.FileId}};\n","selfReferencingDataPaths":[],"pluginSpecifiedTemplates":[{"value":true}]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["this.params?.FileComments","this.params?.FileId"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-16T05:56:37Z"},"id":"PO Entry_EPOAttachments_Update","deleted":false,"gitSyncId":"67f4d81e59d0ae34925978ba_67ff4695358e8b1adbeac886"},{"pluginType":"API","pluginId":"restapi-plugin","unpublishedAction":{"name":"MetaData_Select","datasource":{"name":"MS Graph","pluginId":"restapi-plugin","messages":[],"isAutoGenerated":false,"id":"MS Graph","deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","path":"/v1.0/sites/{{this.params.siteId}}/lists/{{this.params.listId}}/items","headers":[],"autoGeneratedHeaders":[],"encodeParamsToggle":true,"queryParameters":[{"key":"$expand","value":"driveItem"},{"key":"$filter","value":"fields/{{this.params.NumberName}} eq '{{this.params.Number}}'"},{"key":"$select","value":"fields"}],"body":"","bodyFormData":[],"httpMethod":"GET","httpVersion":"HTTP11","selfReferencingDataPaths":[],"pluginSpecifiedTemplates":[{"value":true}],"formData":{"apiContentType":"none"}},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"path"},{"key":"queryParameters[1].value"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["this.params.Number","this.params.siteId","this.params.listId","this.params.NumberName"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-15T09:10:20Z"},"publishedAction":{"name":"MetaData_Select","datasource":{"name":"MS Graph","pluginId":"restapi-plugin","messages":[],"isAutoGenerated":false,"id":"MS Graph","deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","path":"/v1.0/sites/{{this.params.siteId}}/lists/{{this.params.listId}}/items","headers":[],"autoGeneratedHeaders":[],"encodeParamsToggle":true,"queryParameters":[{"key":"$expand","value":"driveItem"},{"key":"$filter","value":"fields/{{this.params.NumberName}} eq '{{this.params.Number}}'"},{"key":"$select","value":"fields"}],"body":"","bodyFormData":[],"httpMethod":"GET","httpVersion":"HTTP11","selfReferencingDataPaths":[],"pluginSpecifiedTemplates":[{"value":true}],"formData":{"apiContentType":"none"}},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"path"},{"key":"queryParameters[1].value"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["this.params.Number","this.params.siteId","this.params.listId","this.params.NumberName"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-15T09:10:20Z"},"id":"PO Entry_MetaData_Select","deleted":false,"gitSyncId":"67f4d81e59d0ae34925978ba_67fe227c358e8b1adbeac78d"},{"pluginType":"DB","pluginId":"mysql-plugin","unpublishedAction":{"name":"FileUpload_Check","datasource":{"name":"appsmithmysql","pluginId":"mysql-plugin","messages":[],"isAutoGenerated":false,"id":"appsmithmysql","deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"SELECT * FROM PurchaseOrder \nINNER JOIN EstimatePOAttachments ON PurchaseOrder.Id = EstimatePOAttachments.POId\nWHERE PurchaseOrder.Id = {{this.params?.POId}}","selfReferencingDataPaths":[],"pluginSpecifiedTemplates":[{"value":true}]},"executeOnLoad":true,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["this.params?.POId"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-16T05:57:27Z"},"publishedAction":{"name":"FileUpload_Check","datasource":{"name":"appsmithmysql","pluginId":"mysql-plugin","messages":[],"isAutoGenerated":false,"id":"appsmithmysql","deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"SELECT * FROM PurchaseOrder \nINNER JOIN EstimatePOAttachments ON PurchaseOrder.Id = EstimatePOAttachments.POId\nWHERE PurchaseOrder.Id = {{this.params?.POId}}","selfReferencingDataPaths":[],"pluginSpecifiedTemplates":[{"value":true}]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["this.params?.POId"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-16T05:57:27Z"},"id":"PO Entry_FileUpload_Check","deleted":false,"gitSyncId":"67f4d81e59d0ae34925978ba_67ff46c7358e8b1adbeac888"},{"pluginType":"API","pluginId":"restapi-plugin","unpublishedAction":{"name":"ListItemsDelete_Select","datasource":{"name":"MS Graph","pluginId":"restapi-plugin","messages":[],"isAutoGenerated":false,"id":"MS Graph","deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","path":"/v1.0/sites/{{this.params.siteId}}/lists/{{this.params.listId}}/items","headers":[{"key":"content-type","value":"text/plain"}],"autoGeneratedHeaders":[],"encodeParamsToggle":true,"queryParameters":[{"key":"$expand","value":"driveItem"},{"key":"$filter","value":"fields/{{this.params.NumberName}} eq '{{this.params.Number}}'"},{"key":"$select","value":"id"}],"body":"","bodyFormData":[],"httpMethod":"GET","httpVersion":"HTTP11","selfReferencingDataPaths":[],"pluginSpecifiedTemplates":[{"value":true}],"formData":{"apiContentType":"none"}},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"path"},{"key":"queryParameters[1].value"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["this.params.Number","this.params.siteId","this.params.listId","this.params.NumberName"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-15T09:10:07Z"},"publishedAction":{"name":"ListItemsDelete_Select","datasource":{"name":"MS Graph","pluginId":"restapi-plugin","messages":[],"isAutoGenerated":false,"id":"MS Graph","deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","path":"/v1.0/sites/{{this.params.siteId}}/lists/{{this.params.listId}}/items","headers":[{"key":"content-type","value":"text/plain"}],"autoGeneratedHeaders":[],"encodeParamsToggle":true,"queryParameters":[{"key":"$expand","value":"driveItem"},{"key":"$filter","value":"fields/{{this.params.NumberName}} eq '{{this.params.Number}}'"},{"key":"$select","value":"id"}],"body":"","bodyFormData":[],"httpMethod":"GET","httpVersion":"HTTP11","selfReferencingDataPaths":[],"pluginSpecifiedTemplates":[{"value":true}],"formData":{"apiContentType":"none"}},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"path"},{"key":"queryParameters[1].value"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["this.params.Number","this.params.siteId","this.params.listId","this.params.NumberName"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-15T09:10:07Z"},"id":"PO Entry_ListItemsDelete_Select","deleted":false,"gitSyncId":"67f4d81e59d0ae34925978ba_67fe226e358e8b1adbeac78b"},{"pluginType":"JS","pluginId":"js-plugin","unpublishedAction":{"name":"resetWidgets","fullyQualifiedName":"GlobalVariables.resetWidgets","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","organizationId":"62a1cace93e9481dacb0f741","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","collectionId":"PO Entry_GlobalVariables","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"widgetsArray => {\n  const widgetMap = widgetsArray.map(aWdiget => resetWidget(aWdiget));\n  return Promise.all(widgetMap);\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"widgetsArray"}],"isAsync":false},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["widgetsArray => {\n  const widgetMap = widgetsArray.map(aWdiget => resetWidget(aWdiget));\n  return Promise.all(widgetMap);\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"publishedAction":{"name":"resetWidgets","fullyQualifiedName":"GlobalVariables.resetWidgets","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","organizationId":"62a1cace93e9481dacb0f741","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","collectionId":"PO Entry_GlobalVariables","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"widgetsArray => {\n  const widgetMap = widgetsArray.map(aWdiget => resetWidget(aWdiget));\n  return Promise.all(widgetMap);\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"widgetsArray"}],"isAsync":false},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["widgetsArray => {\n  const widgetMap = widgetsArray.map(aWdiget => resetWidget(aWdiget));\n  return Promise.all(widgetMap);\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"id":"PO Entry_GlobalVariables.resetWidgets","deleted":false,"gitSyncId":"62c6dd94aa3be20812d63927_62c6dd94aa3be20812d63962"},{"pluginType":"API","pluginId":"restapi-plugin","unpublishedAction":{"name":"UploadSession_Create","datasource":{"name":"MS Graph","pluginId":"restapi-plugin","messages":[],"isAutoGenerated":false,"id":"MS Graph","deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","path":"/v1.0/drives/{{this.params.DriveId}}/items/{{this.params.DriveItemId}}:/{{this.params.fileName}}:/createUploadSession","headers":[{"key":"content-type","value":"application/json"}],"autoGeneratedHeaders":[{"key":"content-type","value":"application/json"}],"encodeParamsToggle":true,"queryParameters":[],"body":"","bodyFormData":[],"httpMethod":"POST","httpVersion":"HTTP11","selfReferencingDataPaths":[],"pluginSpecifiedTemplates":[{"value":true}],"formData":{"apiContentType":"none"}},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"path"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["this.params.DriveItemId","this.params.fileName","this.params.DriveId"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-15T09:10:52Z"},"publishedAction":{"name":"UploadSession_Create","datasource":{"name":"MS Graph","pluginId":"restapi-plugin","messages":[],"isAutoGenerated":false,"id":"MS Graph","deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","path":"/v1.0/drives/{{this.params.DriveId}}/items/{{this.params.DriveItemId}}:/{{this.params.fileName}}:/createUploadSession","headers":[{"key":"content-type","value":"application/json"}],"autoGeneratedHeaders":[{"key":"content-type","value":"application/json"}],"encodeParamsToggle":true,"queryParameters":[],"body":"","bodyFormData":[],"httpMethod":"POST","httpVersion":"HTTP11","selfReferencingDataPaths":[],"pluginSpecifiedTemplates":[{"value":true}],"formData":{"apiContentType":"none"}},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"path"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["this.params.DriveItemId","this.params.fileName","this.params.DriveId"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-15T09:10:52Z"},"id":"PO Entry_UploadSession_Create","deleted":false,"gitSyncId":"67f4d81e59d0ae34925978ba_67fe229c358e8b1adbeac791"},{"pluginType":"JS","pluginId":"js-plugin","unpublishedAction":{"name":"DisablePOItemDetailsUpdateButton","fullyQualifiedName":"PageObjects.DisablePOItemDetailsUpdateButton","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","organizationId":"62a1cace93e9481dacb0f741","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","collectionId":"PO Entry_PageObjects","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"() => {\n  return PO_Item_Table.selectedRowIndex == -1 || appsmith.store.currentStateName != 'EnterPO' || GlobalVariables.disableCreateButton([POItem_Number_Input, POItem_Description_Input, POItem_Quantity_Input, POItem_Amount_Input]);\n}","selfReferencingDataPaths":[],"jsArguments":[],"isAsync":false},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["() => {\n  return PO_Item_Table.selectedRowIndex == -1 || appsmith.store.currentStateName != 'EnterPO' || GlobalVariables.disableCreateButton([POItem_Number_Input, POItem_Description_Input, POItem_Quantity_Input, POItem_Amount_Input]);\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"publishedAction":{"name":"DisablePOItemDetailsUpdateButton","fullyQualifiedName":"PageObjects.DisablePOItemDetailsUpdateButton","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","organizationId":"62a1cace93e9481dacb0f741","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","collectionId":"PO Entry_PageObjects","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"() => {\n  return PO_Item_Table.selectedRowIndex == -1 || appsmith.store.currentStateName != 'EnterPO' || GlobalVariables.disableCreateButton([POItem_Number_Input, POItem_Description_Input, POItem_Quantity_Input, POItem_Amount_Input]);\n}","selfReferencingDataPaths":[],"jsArguments":[],"isAsync":false},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["() => {\n  return PO_Item_Table.selectedRowIndex == -1 || appsmith.store.currentStateName != 'EnterPO' || GlobalVariables.disableCreateButton([POItem_Number_Input, POItem_Description_Input, POItem_Quantity_Input, POItem_Amount_Input]);\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"id":"PO Entry_PageObjects.DisablePOItemDetailsUpdateButton","deleted":false,"gitSyncId":"62c6dd94aa3be20812d63927_62c6dd94aa3be20812d6397e"},{"pluginType":"JS","pluginId":"js-plugin","unpublishedAction":{"name":"deletePO","fullyQualifiedName":"PageObjects.deletePO","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","organizationId":"62a1cace93e9481dacb0f741","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","collectionId":"PO Entry_PageObjects","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async POId => {\n  await PO_Delete.run({\n    \"POId\": POId\n  }).then(() => POItems_Delete.run({\n    \"POId\": POId\n  })).then(() => {\n    return Promise.all([Estimate_Select.run(), PO_Details_Select.run(), PO_Select.run()]);\n  }).then(() => {\n    return GlobalVariables.resetWidgets([\"Estimate_PO_Table\", \"PO_Details_Container\"]);\n  }).then(res => showAlert(\"Delete Done\", \"success\")).catch(error => showAlert(error.toString(), \"error\"));\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"POId"}],"isAsync":true},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async POId => {\n  await PO_Delete.run({\n    \"POId\": POId\n  }).then(() => POItems_Delete.run({\n    \"POId\": POId\n  })).then(() => {\n    return Promise.all([Estimate_Select.run(), PO_Details_Select.run(), PO_Select.run()]);\n  }).then(() => {\n    return GlobalVariables.resetWidgets([\"Estimate_PO_Table\", \"PO_Details_Container\"]);\n  }).then(res => showAlert(\"Delete Done\", \"success\")).catch(error => showAlert(error.toString(), \"error\"));\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"publishedAction":{"name":"deletePO","fullyQualifiedName":"PageObjects.deletePO","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","organizationId":"62a1cace93e9481dacb0f741","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","collectionId":"PO Entry_PageObjects","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async POId => {\n  await PO_Delete.run({\n    \"POId\": POId\n  }).then(() => POItems_Delete.run({\n    \"POId\": POId\n  })).then(() => {\n    return Promise.all([Estimate_Select.run(), PO_Details_Select.run(), PO_Select.run()]);\n  }).then(() => {\n    return GlobalVariables.resetWidgets([\"Estimate_PO_Table\", \"PO_Details_Container\"]);\n  }).then(res => showAlert(\"Delete Done\", \"success\")).catch(error => showAlert(error.toString(), \"error\"));\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"POId"}],"isAsync":true},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async POId => {\n  await PO_Delete.run({\n    \"POId\": POId\n  }).then(() => POItems_Delete.run({\n    \"POId\": POId\n  })).then(() => {\n    return Promise.all([Estimate_Select.run(), PO_Details_Select.run(), PO_Select.run()]);\n  }).then(() => {\n    return GlobalVariables.resetWidgets([\"Estimate_PO_Table\", \"PO_Details_Container\"]);\n  }).then(res => showAlert(\"Delete Done\", \"success\")).catch(error => showAlert(error.toString(), \"error\"));\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"id":"PO Entry_PageObjects.deletePO","deleted":false,"gitSyncId":"62c6dd94aa3be20812d63927_62c6dd94aa3be20812d6396a"},{"pluginType":"JS","pluginId":"js-plugin","unpublishedAction":{"name":"disableDeleteButton","fullyQualifiedName":"GlobalVariables.disableDeleteButton","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","organizationId":"62a1cace93e9481dacb0f741","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","collectionId":"PO Entry_GlobalVariables","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"formTable => {\n  let disableDelete = formTable.selectedRowIndex === -1 ? true : false;\n  return disableDelete;\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"formTable"}],"isAsync":false},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["formTable => {\n  let disableDelete = formTable.selectedRowIndex === -1 ? true : false;\n  return disableDelete;\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"publishedAction":{"name":"disableDeleteButton","fullyQualifiedName":"GlobalVariables.disableDeleteButton","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","organizationId":"62a1cace93e9481dacb0f741","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","collectionId":"PO Entry_GlobalVariables","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"formTable => {\n  let disableDelete = formTable.selectedRowIndex === -1 ? true : false;\n  return disableDelete;\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"formTable"}],"isAsync":false},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["formTable => {\n  let disableDelete = formTable.selectedRowIndex === -1 ? true : false;\n  return disableDelete;\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"id":"PO Entry_GlobalVariables.disableDeleteButton","deleted":false,"gitSyncId":"62c6dd94aa3be20812d63927_62c6dd94aa3be20812d63944"},{"pluginType":"JS","pluginId":"js-plugin","unpublishedAction":{"name":"DisablePOItemDetailsInsertButton","fullyQualifiedName":"PageObjects.DisablePOItemDetailsInsertButton","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","organizationId":"62a1cace93e9481dacb0f741","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","collectionId":"PO Entry_PageObjects","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"() => {\n  return PO_Table.selectedRowIndex == -1 || appsmith.store.currentStateName == 'Completed' || GlobalVariables.disableCreateButton([POItem_Number_Input, POItem_Quantity_Input, POItem_Description_Input, POItem_Amount_Input, POItem_SaleTax_Input]);\n}","selfReferencingDataPaths":[],"jsArguments":[],"isAsync":false},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["() => {\n  return PO_Table.selectedRowIndex == -1 || appsmith.store.currentStateName == 'Completed' || GlobalVariables.disableCreateButton([POItem_Number_Input, POItem_Quantity_Input, POItem_Description_Input, POItem_Amount_Input, POItem_SaleTax_Input]);\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"publishedAction":{"name":"DisablePOItemDetailsInsertButton","fullyQualifiedName":"PageObjects.DisablePOItemDetailsInsertButton","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","organizationId":"62a1cace93e9481dacb0f741","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","collectionId":"PO Entry_PageObjects","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"() => {\n  return PO_Table.selectedRowIndex == -1 || appsmith.store.currentStateName == 'Completed' || GlobalVariables.disableCreateButton([POItem_Number_Input, POItem_Quantity_Input, POItem_Description_Input, POItem_Amount_Input, POItem_SaleTax_Input]);\n}","selfReferencingDataPaths":[],"jsArguments":[],"isAsync":false},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["() => {\n  return PO_Table.selectedRowIndex == -1 || appsmith.store.currentStateName == 'Completed' || GlobalVariables.disableCreateButton([POItem_Number_Input, POItem_Quantity_Input, POItem_Description_Input, POItem_Amount_Input, POItem_SaleTax_Input]);\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"id":"PO Entry_PageObjects.DisablePOItemDetailsInsertButton","deleted":false,"gitSyncId":"62c6dd94aa3be20812d63927_62c6dd94aa3be20812d63950"},{"pluginType":"JS","pluginId":"js-plugin","unpublishedAction":{"name":"disableCorporateAdminButton","fullyQualifiedName":"GlobalVariables.disableCorporateAdminButton","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","collectionId":"PO Entry_GlobalVariables","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"() => {\n  return false || CorporateAdmin_Select.data.find(row => {\n    return row.name == appsmith.user.username.split('@')[0];\n  })?.name == appsmith.user.username.split('@')[0];\n}","selfReferencingDataPaths":[],"jsArguments":[],"isAsync":false},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["() => {\n  return false || CorporateAdmin_Select.data.find(row => {\n    return row.name == appsmith.user.username.split('@')[0];\n  })?.name == appsmith.user.username.split('@')[0];\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"publishedAction":{"name":"disableCorporateAdminButton","fullyQualifiedName":"GlobalVariables.disableCorporateAdminButton","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","collectionId":"PO Entry_GlobalVariables","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"() => {\n  return false || CorporateAdmin_Select.data.find(row => {\n    return row.name == appsmith.user.username.split('@')[0];\n  })?.name == appsmith.user.username.split('@')[0];\n}","selfReferencingDataPaths":[],"jsArguments":[],"isAsync":false},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["() => {\n  return false || CorporateAdmin_Select.data.find(row => {\n    return row.name == appsmith.user.username.split('@')[0];\n  })?.name == appsmith.user.username.split('@')[0];\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"id":"PO Entry_GlobalVariables.disableCorporateAdminButton","deleted":false,"gitSyncId":"62c6dd94aa3be20812d63927_62c7d1e6aa3be20812d63a7e"},{"pluginType":"JS","pluginId":"js-plugin","unpublishedAction":{"name":"resetForm","fullyQualifiedName":"GlobalVariables.resetForm","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","organizationId":"62a1cace93e9481dacb0f741","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","collectionId":"PO Entry_GlobalVariables","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"tabWidgets => {\n  tabWidgets.forEach(eachWidget => {\n    resetWidget(eachWidget);\n  });\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"tabWidgets"}],"isAsync":false},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["tabWidgets => {\n  tabWidgets.forEach(eachWidget => {\n    resetWidget(eachWidget);\n  });\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"publishedAction":{"name":"resetForm","fullyQualifiedName":"GlobalVariables.resetForm","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","organizationId":"62a1cace93e9481dacb0f741","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","collectionId":"PO Entry_GlobalVariables","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"tabWidgets => {\n  tabWidgets.forEach(eachWidget => {\n    resetWidget(eachWidget);\n  });\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"tabWidgets"}],"isAsync":false},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["tabWidgets => {\n  tabWidgets.forEach(eachWidget => {\n    resetWidget(eachWidget);\n  });\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"id":"PO Entry_GlobalVariables.resetForm","deleted":false,"gitSyncId":"62c6dd94aa3be20812d63927_62c6dd94aa3be20812d63967"},{"pluginType":"JS","pluginId":"js-plugin","unpublishedAction":{"name":"accessControl","fullyQualifiedName":"PageObjects.accessControl","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","collectionId":"PO Entry_PageObjects","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async () => {\n  await UserRoles_Select.run();\n  let role = '';\n  if (UserRoles_Select.data.find(row => row.Name === 'Sales Manager' || row.Name === 'Accounts Receivables')) {\n    console.log('111');\n    role = 'SalesManager';\n  } else if (UserRoles_Select.data.find(row => row.Name === 'Business Manager')) {\n    console.log('222');\n    role = 'BusinessManager';\n  }\n  await storeValue('FilterRole', role, false);\n  console.log('frole', appsmith.store.FilterRole);\n  await Estimate_Select.run();\n}","selfReferencingDataPaths":[],"jsArguments":[]},"executeOnLoad":true,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async () => {\n  await UserRoles_Select.run();\n  let role = '';\n  if (UserRoles_Select.data.find(row => row.Name === 'Sales Manager' || row.Name === 'Accounts Receivables')) {\n    console.log('111');\n    role = 'SalesManager';\n  } else if (UserRoles_Select.data.find(row => row.Name === 'Business Manager')) {\n    console.log('222');\n    role = 'BusinessManager';\n  }\n  await storeValue('FilterRole', role, false);\n  console.log('frole', appsmith.store.FilterRole);\n  await Estimate_Select.run();\n}"],"userSetOnLoad":true,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-02-23T09:05:19Z"},"publishedAction":{"name":"accessControl","fullyQualifiedName":"PageObjects.accessControl","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","collectionId":"PO Entry_PageObjects","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async () => {\n  await UserRoles_Select.run();\n  let role = '';\n  if (UserRoles_Select.data.find(row => row.Name === 'Sales Manager' || row.Name === 'Accounts Receivables')) {\n    console.log('111');\n    role = 'SalesManager';\n  } else if (UserRoles_Select.data.find(row => row.Name === 'Business Manager')) {\n    console.log('222');\n    role = 'BusinessManager';\n  }\n  await storeValue('FilterRole', role, false);\n  console.log('frole', appsmith.store.FilterRole);\n  await Estimate_Select.run();\n}","selfReferencingDataPaths":[],"jsArguments":[]},"executeOnLoad":true,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async () => {\n  await UserRoles_Select.run();\n  let role = '';\n  if (UserRoles_Select.data.find(row => row.Name === 'Sales Manager' || row.Name === 'Accounts Receivables')) {\n    console.log('111');\n    role = 'SalesManager';\n  } else if (UserRoles_Select.data.find(row => row.Name === 'Business Manager')) {\n    console.log('222');\n    role = 'BusinessManager';\n  }\n  await storeValue('FilterRole', role, false);\n  console.log('frole', appsmith.store.FilterRole);\n  await Estimate_Select.run();\n}"],"userSetOnLoad":true,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-02-23T09:05:19Z"},"id":"PO Entry_PageObjects.accessControl","deleted":false,"gitSyncId":"67bae209bfd36a5abab32b21_67bae4cfbfd36a5abab32b99"},{"pluginType":"JS","pluginId":"js-plugin","unpublishedAction":{"name":"selectInitialState","fullyQualifiedName":"PageObjects.selectInitialState","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","organizationId":"62a1cace93e9481dacb0f741","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","collectionId":"PO Entry_PageObjects","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async () => {\n  await Process.clickState('EnterPO', Estimate_Select);\n}","selfReferencingDataPaths":[],"jsArguments":[],"isAsync":true},"executeOnLoad":true,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async () => {\n  await Process.clickState('EnterPO', Estimate_Select);\n}"],"userSetOnLoad":true,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"publishedAction":{"name":"selectInitialState","fullyQualifiedName":"PageObjects.selectInitialState","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","organizationId":"62a1cace93e9481dacb0f741","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","collectionId":"PO Entry_PageObjects","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async () => {\n  await Process.clickState('EnterPO', Estimate_Select);\n}","selfReferencingDataPaths":[],"jsArguments":[],"isAsync":true},"executeOnLoad":true,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async () => {\n  await Process.clickState('EnterPO', Estimate_Select);\n}"],"userSetOnLoad":true,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"id":"PO Entry_PageObjects.selectInitialState","deleted":false,"gitSyncId":"62c6dd94aa3be20812d63927_62c6dd94aa3be20812d639a2"},{"pluginType":"JS","pluginId":"js-plugin","unpublishedAction":{"name":"disableCreateButton","fullyQualifiedName":"GlobalVariables.disableCreateButton","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","organizationId":"62a1cace93e9481dacb0f741","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","collectionId":"PO Entry_GlobalVariables","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"formWidgets => {\n  return GlobalVariables.validateForm(formWidgets) === false;\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"formWidgets"}],"isAsync":false},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["formWidgets => {\n  return GlobalVariables.validateForm(formWidgets) === false;\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"publishedAction":{"name":"disableCreateButton","fullyQualifiedName":"GlobalVariables.disableCreateButton","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","organizationId":"62a1cace93e9481dacb0f741","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","collectionId":"PO Entry_GlobalVariables","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"formWidgets => {\n  return GlobalVariables.validateForm(formWidgets) === false;\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"formWidgets"}],"isAsync":false},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["formWidgets => {\n  return GlobalVariables.validateForm(formWidgets) === false;\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"id":"PO Entry_GlobalVariables.disableCreateButton","deleted":false,"gitSyncId":"62c6dd94aa3be20812d63927_62c6dd94aa3be20812d63964"},{"pluginType":"JS","pluginId":"js-plugin","unpublishedAction":{"name":"updatePO","fullyQualifiedName":"PageObjects.updatePO","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","organizationId":"62a1cace93e9481dacb0f741","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","collectionId":"PO Entry_PageObjects","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async (PONum, PODes, Billto, Shipto, PaymentTerm, Taxable) => {\n  await PO_Update.run({\n    \"PONum\": PONum,\n    \"PODes\": PODes,\n    \"Billto\": Billto,\n    \"Shipto\": Shipto,\n    \"PaymentTerm\": PaymentTerm,\n    \"Taxable\": Taxable\n  }).then(() => {\n    return Promise.all([Estimate_Select.run(), PO_Details_Select.run(), PO_Select.run()]);\n  }).then(() => {\n    return GlobalVariables.resetWidgets([\"Estimate_PO_Table\", \"PO_Details_Container\"]);\n  }).then(res => showAlert(\"Update Done\", \"success\")).catch(error => showAlert(error.toString(), \"error\"));\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"PONum"},{"name":"PODes"},{"name":"Billto"},{"name":"Shipto"},{"name":"PaymentTerm"},{"name":"Taxable"}],"isAsync":true},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async (PONum, PODes, Billto, Shipto, PaymentTerm, Taxable) => {\n  await PO_Update.run({\n    \"PONum\": PONum,\n    \"PODes\": PODes,\n    \"Billto\": Billto,\n    \"Shipto\": Shipto,\n    \"PaymentTerm\": PaymentTerm,\n    \"Taxable\": Taxable\n  }).then(() => {\n    return Promise.all([Estimate_Select.run(), PO_Details_Select.run(), PO_Select.run()]);\n  }).then(() => {\n    return GlobalVariables.resetWidgets([\"Estimate_PO_Table\", \"PO_Details_Container\"]);\n  }).then(res => showAlert(\"Update Done\", \"success\")).catch(error => showAlert(error.toString(), \"error\"));\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"publishedAction":{"name":"updatePO","fullyQualifiedName":"PageObjects.updatePO","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","organizationId":"62a1cace93e9481dacb0f741","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","collectionId":"PO Entry_PageObjects","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async (PONum, PODes, Billto, Shipto, PaymentTerm, Taxable) => {\n  await PO_Update.run({\n    \"PONum\": PONum,\n    \"PODes\": PODes,\n    \"Billto\": Billto,\n    \"Shipto\": Shipto,\n    \"PaymentTerm\": PaymentTerm,\n    \"Taxable\": Taxable\n  }).then(() => {\n    return Promise.all([Estimate_Select.run(), PO_Details_Select.run(), PO_Select.run()]);\n  }).then(() => {\n    return GlobalVariables.resetWidgets([\"Estimate_PO_Table\", \"PO_Details_Container\"]);\n  }).then(res => showAlert(\"Update Done\", \"success\")).catch(error => showAlert(error.toString(), \"error\"));\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"PONum"},{"name":"PODes"},{"name":"Billto"},{"name":"Shipto"},{"name":"PaymentTerm"},{"name":"Taxable"}],"isAsync":true},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async (PONum, PODes, Billto, Shipto, PaymentTerm, Taxable) => {\n  await PO_Update.run({\n    \"PONum\": PONum,\n    \"PODes\": PODes,\n    \"Billto\": Billto,\n    \"Shipto\": Shipto,\n    \"PaymentTerm\": PaymentTerm,\n    \"Taxable\": Taxable\n  }).then(() => {\n    return Promise.all([Estimate_Select.run(), PO_Details_Select.run(), PO_Select.run()]);\n  }).then(() => {\n    return GlobalVariables.resetWidgets([\"Estimate_PO_Table\", \"PO_Details_Container\"]);\n  }).then(res => showAlert(\"Update Done\", \"success\")).catch(error => showAlert(error.toString(), \"error\"));\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"id":"PO Entry_PageObjects.updatePO","deleted":false,"gitSyncId":"62c6dd94aa3be20812d63927_62c6dd94aa3be20812d6396e"},{"pluginType":"JS","pluginId":"js-plugin","unpublishedAction":{"name":"uniqueCheck","fullyQualifiedName":"GlobalVariables.uniqueCheck","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","organizationId":"62a1cace93e9481dacb0f741","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","collectionId":"PO Entry_GlobalVariables","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async function (tableName, columnName, columnValue) {\n  let unique = false;\n  const response = await Duplicate_Value_Select.run({\n    'tableName': tableName,\n    'columnName': columnName,\n    'columnValue': columnValue\n  });\n  unique = response[0].row_count === 0;\n  return unique;\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"tableName"},{"name":"columnName"},{"name":"columnValue"}],"isAsync":true},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async function (tableName, columnName, columnValue) {\n  let unique = false;\n  const response = await Duplicate_Value_Select.run({\n    'tableName': tableName,\n    'columnName': columnName,\n    'columnValue': columnValue\n  });\n  unique = response[0].row_count === 0;\n  return unique;\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"publishedAction":{"name":"uniqueCheck","fullyQualifiedName":"GlobalVariables.uniqueCheck","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","organizationId":"62a1cace93e9481dacb0f741","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","collectionId":"PO Entry_GlobalVariables","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async function (tableName, columnName, columnValue) {\n  let unique = false;\n  const response = await Duplicate_Value_Select.run({\n    'tableName': tableName,\n    'columnName': columnName,\n    'columnValue': columnValue\n  });\n  unique = response[0].row_count === 0;\n  return unique;\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"tableName"},{"name":"columnName"},{"name":"columnValue"}],"isAsync":true},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async function (tableName, columnName, columnValue) {\n  let unique = false;\n  const response = await Duplicate_Value_Select.run({\n    'tableName': tableName,\n    'columnName': columnName,\n    'columnValue': columnValue\n  });\n  unique = response[0].row_count === 0;\n  return unique;\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"id":"PO Entry_GlobalVariables.uniqueCheck","deleted":false,"gitSyncId":"62c6dd94aa3be20812d63927_62c6dd94aa3be20812d6398a"},{"pluginType":"JS","pluginId":"js-plugin","unpublishedAction":{"name":"insertPO","fullyQualifiedName":"PageObjects.insertPO","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","organizationId":"62a1cace93e9481dacb0f741","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","collectionId":"PO Entry_PageObjects","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async (estimateId, PONumber, PODes, POBillto, POShipto, PaymentTerm, Taxable) => {\n  if (await GlobalVariables.uniqueCheck(\"PurchaseOrder\", \"Number\", PONumber) === false) {\n    showAlert(\"PO# not unique\", \"error\");\n  } else {\n    await PO_Insert.run({\n      \"estimateId\": estimateId,\n      \"PONumber\": PONumber,\n      \"PODes\": PODes,\n      \"POBillto\": POBillto,\n      \"POShipto\": POShipto,\n      \"PaymentTerm\": PaymentTerm,\n      \"Taxable\": Taxable\n    }).then(() => {\n      return Promise.all([Estimate_Select.run(), PO_Details_Select.run(), PO_Select.run()]);\n    }).then(() => {\n      return GlobalVariables.resetWidgets([\"Estimate_PO_Table\", \"PO_Details_Container\"]);\n    }).then(res => showAlert(\"Insert Done\", \"success\")).catch(error => showAlert(error.toString(), \"error\"));\n  }\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"estimateId"},{"name":"PONumber"},{"name":"PODes"},{"name":"POBillto"},{"name":"POShipto"},{"name":"PaymentTerm"},{"name":"Taxable"}],"isAsync":true},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async (estimateId, PONumber, PODes, POBillto, POShipto, PaymentTerm, Taxable) => {\n  if (await GlobalVariables.uniqueCheck(\"PurchaseOrder\", \"Number\", PONumber) === false) {\n    showAlert(\"PO# not unique\", \"error\");\n  } else {\n    await PO_Insert.run({\n      \"estimateId\": estimateId,\n      \"PONumber\": PONumber,\n      \"PODes\": PODes,\n      \"POBillto\": POBillto,\n      \"POShipto\": POShipto,\n      \"PaymentTerm\": PaymentTerm,\n      \"Taxable\": Taxable\n    }).then(() => {\n      return Promise.all([Estimate_Select.run(), PO_Details_Select.run(), PO_Select.run()]);\n    }).then(() => {\n      return GlobalVariables.resetWidgets([\"Estimate_PO_Table\", \"PO_Details_Container\"]);\n    }).then(res => showAlert(\"Insert Done\", \"success\")).catch(error => showAlert(error.toString(), \"error\"));\n  }\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"publishedAction":{"name":"insertPO","fullyQualifiedName":"PageObjects.insertPO","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","organizationId":"62a1cace93e9481dacb0f741","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","collectionId":"PO Entry_PageObjects","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async (estimateId, PONumber, PODes, POBillto, POShipto, PaymentTerm, Taxable) => {\n  if (await GlobalVariables.uniqueCheck(\"PurchaseOrder\", \"Number\", PONumber) === false) {\n    showAlert(\"PO# not unique\", \"error\");\n  } else {\n    await PO_Insert.run({\n      \"estimateId\": estimateId,\n      \"PONumber\": PONumber,\n      \"PODes\": PODes,\n      \"POBillto\": POBillto,\n      \"POShipto\": POShipto,\n      \"PaymentTerm\": PaymentTerm,\n      \"Taxable\": Taxable\n    }).then(() => {\n      return Promise.all([Estimate_Select.run(), PO_Details_Select.run(), PO_Select.run()]);\n    }).then(() => {\n      return GlobalVariables.resetWidgets([\"Estimate_PO_Table\", \"PO_Details_Container\"]);\n    }).then(res => showAlert(\"Insert Done\", \"success\")).catch(error => showAlert(error.toString(), \"error\"));\n  }\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"estimateId"},{"name":"PONumber"},{"name":"PODes"},{"name":"POBillto"},{"name":"POShipto"},{"name":"PaymentTerm"},{"name":"Taxable"}],"isAsync":true},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async (estimateId, PONumber, PODes, POBillto, POShipto, PaymentTerm, Taxable) => {\n  if (await GlobalVariables.uniqueCheck(\"PurchaseOrder\", \"Number\", PONumber) === false) {\n    showAlert(\"PO# not unique\", \"error\");\n  } else {\n    await PO_Insert.run({\n      \"estimateId\": estimateId,\n      \"PONumber\": PONumber,\n      \"PODes\": PODes,\n      \"POBillto\": POBillto,\n      \"POShipto\": POShipto,\n      \"PaymentTerm\": PaymentTerm,\n      \"Taxable\": Taxable\n    }).then(() => {\n      return Promise.all([Estimate_Select.run(), PO_Details_Select.run(), PO_Select.run()]);\n    }).then(() => {\n      return GlobalVariables.resetWidgets([\"Estimate_PO_Table\", \"PO_Details_Container\"]);\n    }).then(res => showAlert(\"Insert Done\", \"success\")).catch(error => showAlert(error.toString(), \"error\"));\n  }\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"id":"PO Entry_PageObjects.insertPO","deleted":false,"gitSyncId":"62c6dd94aa3be20812d63927_62c6dd94aa3be20812d6397c"},{"pluginType":"JS","pluginId":"js-plugin","unpublishedAction":{"name":"onModalSubmitClicked","fullyQualifiedName":"Process.onModalSubmitClicked","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","organizationId":"62a1cace93e9481dacb0f741","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","collectionId":"PO Entry_Process","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async function (estimateId) {\n  await showAlert(\"Moving Estimate to \" + appsmith.store.currentDecision.State + \" State\", \"info\");\n  await Estimate_State_Update.run({\n    \"nextState\": appsmith.store.currentDecision.State,\n    \"estimateId\": estimateId\n  });\n  await Estimate_Select.run({\n    \"currentStateName\": appsmith.store.currentStateName\n  });\n  await PO_Select.run({\n    \"currentStateName\": appsmith.store.currentStateName\n  });\n  PO_Item_Select.run({\n    'purchaseOrderId': -1\n  });\n  closeModal(\"ChangeState_Modal\");\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"estimateId"}],"isAsync":true},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async function (estimateId) {\n  await showAlert(\"Moving Estimate to \" + appsmith.store.currentDecision.State + \" State\", \"info\");\n  await Estimate_State_Update.run({\n    \"nextState\": appsmith.store.currentDecision.State,\n    \"estimateId\": estimateId\n  });\n  await Estimate_Select.run({\n    \"currentStateName\": appsmith.store.currentStateName\n  });\n  await PO_Select.run({\n    \"currentStateName\": appsmith.store.currentStateName\n  });\n  PO_Item_Select.run({\n    'purchaseOrderId': -1\n  });\n  closeModal(\"ChangeState_Modal\");\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"publishedAction":{"name":"onModalSubmitClicked","fullyQualifiedName":"Process.onModalSubmitClicked","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","organizationId":"62a1cace93e9481dacb0f741","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","collectionId":"PO Entry_Process","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async function (estimateId) {\n  await showAlert(\"Moving Estimate to \" + appsmith.store.currentDecision.State + \" State\", \"info\");\n  await Estimate_State_Update.run({\n    \"nextState\": appsmith.store.currentDecision.State,\n    \"estimateId\": estimateId\n  });\n  await Estimate_Select.run({\n    \"currentStateName\": appsmith.store.currentStateName\n  });\n  await PO_Select.run({\n    \"currentStateName\": appsmith.store.currentStateName\n  });\n  PO_Item_Select.run({\n    'purchaseOrderId': -1\n  });\n  closeModal(\"ChangeState_Modal\");\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"estimateId"}],"isAsync":true},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async function (estimateId) {\n  await showAlert(\"Moving Estimate to \" + appsmith.store.currentDecision.State + \" State\", \"info\");\n  await Estimate_State_Update.run({\n    \"nextState\": appsmith.store.currentDecision.State,\n    \"estimateId\": estimateId\n  });\n  await Estimate_Select.run({\n    \"currentStateName\": appsmith.store.currentStateName\n  });\n  await PO_Select.run({\n    \"currentStateName\": appsmith.store.currentStateName\n  });\n  PO_Item_Select.run({\n    'purchaseOrderId': -1\n  });\n  closeModal(\"ChangeState_Modal\");\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"id":"PO Entry_Process.onModalSubmitClicked","deleted":false,"gitSyncId":"62c6dd94aa3be20812d63927_62c6dd94aa3be20812d6395b"},{"pluginType":"JS","pluginId":"js-plugin","unpublishedAction":{"name":"myFun2","fullyQualifiedName":"GlobalVariables.myFun2","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","organizationId":"62a1cace93e9481dacb0f741","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","collectionId":"PO Entry_GlobalVariables","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async () => {}","selfReferencingDataPaths":[],"jsArguments":[],"isAsync":true},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async () => {}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"publishedAction":{"name":"myFun2","fullyQualifiedName":"GlobalVariables.myFun2","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","organizationId":"62a1cace93e9481dacb0f741","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","collectionId":"PO Entry_GlobalVariables","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async () => {}","selfReferencingDataPaths":[],"jsArguments":[],"isAsync":true},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async () => {}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"id":"PO Entry_GlobalVariables.myFun2","deleted":false,"gitSyncId":"62c6dd94aa3be20812d63927_62c6dd94aa3be20812d6397b"},{"pluginType":"API","pluginId":"restapi-plugin","unpublishedAction":{"name":"FileUpload_Create","datasource":{"name":"DEFAULT_REST_DATASOURCE","pluginId":"restapi-plugin","datasourceConfiguration":{"url":""},"invalids":[],"messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","path":"https://{{ this.params.uploadurl }}","headers":[{"key":"Content-Length","value":"{{this.params.range}}"},{"key":"Content-Range","value":"bytes {{this.params.startindex}}-{{this.params.endindex}}/{{this.params.filesize}}"},{"key":"content-type","value":"application/pdf"}],"autoGeneratedHeaders":[{"key":"content-type","value":"application/json"}],"encodeParamsToggle":false,"queryParameters":[],"body":"{{FilePicker.files[0]?.data}}","bodyFormData":[],"httpMethod":"PUT","httpVersion":"HTTP11","selfReferencingDataPaths":[],"pluginSpecifiedTemplates":[{"value":false}],"formData":{"apiContentType":"none"}},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"path"},{"key":"headers[0].value"},{"key":"headers[1].value"},{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["FilePicker.files[0]?.data","this.params.endindex","this.params.filesize"," this.params.uploadurl ","this.params.range","this.params.startindex"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-15T09:07:41Z"},"publishedAction":{"name":"FileUpload_Create","datasource":{"name":"DEFAULT_REST_DATASOURCE","pluginId":"restapi-plugin","datasourceConfiguration":{"url":""},"invalids":[],"messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","path":"https://{{ this.params.uploadurl }}","headers":[{"key":"Content-Length","value":"{{this.params.range}}"},{"key":"Content-Range","value":"bytes {{this.params.startindex}}-{{this.params.endindex}}/{{this.params.filesize}}"},{"key":"content-type","value":"application/pdf"}],"autoGeneratedHeaders":[{"key":"content-type","value":"application/json"}],"encodeParamsToggle":false,"queryParameters":[],"body":"{{FilePicker.files[0]?.data}}","bodyFormData":[],"httpMethod":"PUT","httpVersion":"HTTP11","selfReferencingDataPaths":[],"pluginSpecifiedTemplates":[{"value":false}],"formData":{"apiContentType":"none"}},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"path"},{"key":"headers[0].value"},{"key":"headers[1].value"},{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["FilePicker.files[0]?.data","this.params.endindex","this.params.filesize"," this.params.uploadurl ","this.params.range","this.params.startindex"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-15T09:07:41Z"},"id":"PO Entry_FileUpload_Create","deleted":false,"gitSyncId":"67f4d81e59d0ae34925978ba_67fe21dd358e8b1adbeac77e"},{"pluginType":"JS","pluginId":"js-plugin","unpublishedAction":{"name":"clickArrow","fullyQualifiedName":"Process.clickArrow","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","organizationId":"62a1cace93e9481dacb0f741","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","collectionId":"PO Entry_Process","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async function (DecisionName) {\n  await storeValue(\"currentDecisionName\", DecisionName);\n  await storeValue(\"currentDecision\", Process.getDecision(DecisionName));\n  await storeValue(\"currentNext\", appsmith.store.currentState.Next);\n  showModal(\"ChangeState_Modal\");\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"DecisionName"}],"isAsync":true},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async function (DecisionName) {\n  await storeValue(\"currentDecisionName\", DecisionName);\n  await storeValue(\"currentDecision\", Process.getDecision(DecisionName));\n  await storeValue(\"currentNext\", appsmith.store.currentState.Next);\n  showModal(\"ChangeState_Modal\");\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"publishedAction":{"name":"clickArrow","fullyQualifiedName":"Process.clickArrow","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","organizationId":"62a1cace93e9481dacb0f741","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","collectionId":"PO Entry_Process","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async function (DecisionName) {\n  await storeValue(\"currentDecisionName\", DecisionName);\n  await storeValue(\"currentDecision\", Process.getDecision(DecisionName));\n  await storeValue(\"currentNext\", appsmith.store.currentState.Next);\n  showModal(\"ChangeState_Modal\");\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"DecisionName"}],"isAsync":true},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async function (DecisionName) {\n  await storeValue(\"currentDecisionName\", DecisionName);\n  await storeValue(\"currentDecision\", Process.getDecision(DecisionName));\n  await storeValue(\"currentNext\", appsmith.store.currentState.Next);\n  showModal(\"ChangeState_Modal\");\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"id":"PO Entry_Process.clickArrow","deleted":false,"gitSyncId":"62c6dd94aa3be20812d63927_62c6dd94aa3be20812d6394a"},{"pluginType":"JS","pluginId":"js-plugin","unpublishedAction":{"name":"deletePOItem","fullyQualifiedName":"PageObjects.deletePOItem","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","collectionId":"PO Entry_PageObjects","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async POItemId => {\n  await PO_Item_Delete.run({\n    \"POItemId\": POItemId\n  }).then(() => {\n    return Promise.all([PO_Item_Select.run({\n      'purchaseOrderId': PO_Table.selectedRow.Id\n    }, PO_Details_Select.run())]);\n  }).then(() => {\n    return GlobalVariables.resetWidgets([\"PO_Item_Container\"]);\n  }).then(res => showAlert(\"Delete Done\", \"success\")).catch(error => showAlert(error.toString(), \"error\"));\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"POItemId"}],"isAsync":true},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async POItemId => {\n  await PO_Item_Delete.run({\n    \"POItemId\": POItemId\n  }).then(() => {\n    return Promise.all([PO_Item_Select.run({\n      'purchaseOrderId': PO_Table.selectedRow.Id\n    }, PO_Details_Select.run())]);\n  }).then(() => {\n    return GlobalVariables.resetWidgets([\"PO_Item_Container\"]);\n  }).then(res => showAlert(\"Delete Done\", \"success\")).catch(error => showAlert(error.toString(), \"error\"));\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"publishedAction":{"name":"deletePOItem","fullyQualifiedName":"PageObjects.deletePOItem","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","collectionId":"PO Entry_PageObjects","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async POItemId => {\n  await PO_Item_Delete.run({\n    \"POItemId\": POItemId\n  }).then(() => {\n    return Promise.all([PO_Item_Select.run({\n      'purchaseOrderId': PO_Table.selectedRow.Id\n    }, PO_Details_Select.run())]);\n  }).then(() => {\n    return GlobalVariables.resetWidgets([\"PO_Item_Container\"]);\n  }).then(res => showAlert(\"Delete Done\", \"success\")).catch(error => showAlert(error.toString(), \"error\"));\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"POItemId"}],"isAsync":true},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async POItemId => {\n  await PO_Item_Delete.run({\n    \"POItemId\": POItemId\n  }).then(() => {\n    return Promise.all([PO_Item_Select.run({\n      'purchaseOrderId': PO_Table.selectedRow.Id\n    }, PO_Details_Select.run())]);\n  }).then(() => {\n    return GlobalVariables.resetWidgets([\"PO_Item_Container\"]);\n  }).then(res => showAlert(\"Delete Done\", \"success\")).catch(error => showAlert(error.toString(), \"error\"));\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"id":"PO Entry_PageObjects.deletePOItem","deleted":false,"gitSyncId":"62c6dd94aa3be20812d63927_62c6dd94aa3be20812d639b1"},{"pluginType":"JS","pluginId":"js-plugin","unpublishedAction":{"name":"getDecision","fullyQualifiedName":"Process.getDecision","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","organizationId":"62a1cace93e9481dacb0f741","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","collectionId":"PO Entry_Process","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"decisionName => {\n  return appsmith.store.currentState.Next.find(thisDecision => {\n    return thisDecision.Name == decisionName;\n  });\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"decisionName"}],"isAsync":false},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["decisionName => {\n  return appsmith.store.currentState.Next.find(thisDecision => {\n    return thisDecision.Name == decisionName;\n  });\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"publishedAction":{"name":"getDecision","fullyQualifiedName":"Process.getDecision","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","organizationId":"62a1cace93e9481dacb0f741","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","collectionId":"PO Entry_Process","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"decisionName => {\n  return appsmith.store.currentState.Next.find(thisDecision => {\n    return thisDecision.Name == decisionName;\n  });\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"decisionName"}],"isAsync":false},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["decisionName => {\n  return appsmith.store.currentState.Next.find(thisDecision => {\n    return thisDecision.Name == decisionName;\n  });\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"id":"PO Entry_Process.getDecision","deleted":false,"gitSyncId":"62c6dd94aa3be20812d63927_62c6dd94aa3be20812d6396d"},{"pluginType":"JS","pluginId":"js-plugin","unpublishedAction":{"name":"onUploadModalClick","fullyQualifiedName":"FileUploadProcess.onUploadModalClick","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","collectionId":"PO Entry_FileUploadProcess","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async () => {\n  let tabledata = [];\n  let siteId = \"\";\n  let listId = \"\";\n  Promise.all([storeValue('activetab', 'Empty Tab'), FileUploadProcess.testRunRefreshFunc()]);\n  Promise.all([siteId = FileUploadProcess.getValue('EstimatePO', 'SharepointId'), listId = FileUploadProcess.getValue('EstimatePO', 'ListId')]);\n  let data = await MetaData_Select.run({\n    \"siteId\": siteId,\n    \"listId\": listId,\n    \"NumberName\": \"POId\",\n    \"Number\": appsmith.store.POId\n  });\n  console.log(data);\n  for (let i = 0; i < data.value.length; i++) {\n    console.log(data.value[i].fields[\"LinkFilename\"]);\n    if (data.value[i].fields[\"LinkFilename\"] == POAttachments_Table.selectedRow.FileName) {\n      tabledata.push({\n        \"Field\": \"PONumber\",\n        \"Value\": data.value[i].fields['PONumber']\n      }, {\n        \"Field\": \"FileType\",\n        \"Value\": data.value[i].fields['FileType']\n      }, {\n        \"Field\": \"ModifiedBy\",\n        \"Value\": data.value[i].fields['ModifiedBy']\n      }, {\n        \"Field\": 'POId',\n        \"Value\": data.value[i].fields['POId']\n      }, {\n        \"Field\": \"OriginalFileName\",\n        \"Value\": data.value[i].fields['OriginalFileName']\n      });\n    }\n  }\n  Promise.all([storeValue('ActualFileName', POAttachments_Table.selectedRow.FileName), storeValue('tabledata', tabledata), storeValue('statename', 'Completed'), storeValue('disable', false)]);\n}","selfReferencingDataPaths":[],"jsArguments":[]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async () => {\n  let tabledata = [];\n  let siteId = \"\";\n  let listId = \"\";\n  Promise.all([storeValue('activetab', 'Empty Tab'), FileUploadProcess.testRunRefreshFunc()]);\n  Promise.all([siteId = FileUploadProcess.getValue('EstimatePO', 'SharepointId'), listId = FileUploadProcess.getValue('EstimatePO', 'ListId')]);\n  let data = await MetaData_Select.run({\n    \"siteId\": siteId,\n    \"listId\": listId,\n    \"NumberName\": \"POId\",\n    \"Number\": appsmith.store.POId\n  });\n  console.log(data);\n  for (let i = 0; i < data.value.length; i++) {\n    console.log(data.value[i].fields[\"LinkFilename\"]);\n    if (data.value[i].fields[\"LinkFilename\"] == POAttachments_Table.selectedRow.FileName) {\n      tabledata.push({\n        \"Field\": \"PONumber\",\n        \"Value\": data.value[i].fields['PONumber']\n      }, {\n        \"Field\": \"FileType\",\n        \"Value\": data.value[i].fields['FileType']\n      }, {\n        \"Field\": \"ModifiedBy\",\n        \"Value\": data.value[i].fields['ModifiedBy']\n      }, {\n        \"Field\": 'POId',\n        \"Value\": data.value[i].fields['POId']\n      }, {\n        \"Field\": \"OriginalFileName\",\n        \"Value\": data.value[i].fields['OriginalFileName']\n      });\n    }\n  }\n  Promise.all([storeValue('ActualFileName', POAttachments_Table.selectedRow.FileName), storeValue('tabledata', tabledata), storeValue('statename', 'Completed'), storeValue('disable', false)]);\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-15T09:06:23Z"},"publishedAction":{"name":"onUploadModalClick","fullyQualifiedName":"FileUploadProcess.onUploadModalClick","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","collectionId":"PO Entry_FileUploadProcess","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async () => {\n  let tabledata = [];\n  let siteId = \"\";\n  let listId = \"\";\n  Promise.all([storeValue('activetab', 'Empty Tab'), FileUploadProcess.testRunRefreshFunc()]);\n  Promise.all([siteId = FileUploadProcess.getValue('EstimatePO', 'SharepointId'), listId = FileUploadProcess.getValue('EstimatePO', 'ListId')]);\n  let data = await MetaData_Select.run({\n    \"siteId\": siteId,\n    \"listId\": listId,\n    \"NumberName\": \"POId\",\n    \"Number\": appsmith.store.POId\n  });\n  console.log(data);\n  for (let i = 0; i < data.value.length; i++) {\n    console.log(data.value[i].fields[\"LinkFilename\"]);\n    if (data.value[i].fields[\"LinkFilename\"] == POAttachments_Table.selectedRow.FileName) {\n      tabledata.push({\n        \"Field\": \"PONumber\",\n        \"Value\": data.value[i].fields['PONumber']\n      }, {\n        \"Field\": \"FileType\",\n        \"Value\": data.value[i].fields['FileType']\n      }, {\n        \"Field\": \"ModifiedBy\",\n        \"Value\": data.value[i].fields['ModifiedBy']\n      }, {\n        \"Field\": 'POId',\n        \"Value\": data.value[i].fields['POId']\n      }, {\n        \"Field\": \"OriginalFileName\",\n        \"Value\": data.value[i].fields['OriginalFileName']\n      });\n    }\n  }\n  Promise.all([storeValue('ActualFileName', POAttachments_Table.selectedRow.FileName), storeValue('tabledata', tabledata), storeValue('statename', 'Completed'), storeValue('disable', false)]);\n}","selfReferencingDataPaths":[],"jsArguments":[]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async () => {\n  let tabledata = [];\n  let siteId = \"\";\n  let listId = \"\";\n  Promise.all([storeValue('activetab', 'Empty Tab'), FileUploadProcess.testRunRefreshFunc()]);\n  Promise.all([siteId = FileUploadProcess.getValue('EstimatePO', 'SharepointId'), listId = FileUploadProcess.getValue('EstimatePO', 'ListId')]);\n  let data = await MetaData_Select.run({\n    \"siteId\": siteId,\n    \"listId\": listId,\n    \"NumberName\": \"POId\",\n    \"Number\": appsmith.store.POId\n  });\n  console.log(data);\n  for (let i = 0; i < data.value.length; i++) {\n    console.log(data.value[i].fields[\"LinkFilename\"]);\n    if (data.value[i].fields[\"LinkFilename\"] == POAttachments_Table.selectedRow.FileName) {\n      tabledata.push({\n        \"Field\": \"PONumber\",\n        \"Value\": data.value[i].fields['PONumber']\n      }, {\n        \"Field\": \"FileType\",\n        \"Value\": data.value[i].fields['FileType']\n      }, {\n        \"Field\": \"ModifiedBy\",\n        \"Value\": data.value[i].fields['ModifiedBy']\n      }, {\n        \"Field\": 'POId',\n        \"Value\": data.value[i].fields['POId']\n      }, {\n        \"Field\": \"OriginalFileName\",\n        \"Value\": data.value[i].fields['OriginalFileName']\n      });\n    }\n  }\n  Promise.all([storeValue('ActualFileName', POAttachments_Table.selectedRow.FileName), storeValue('tabledata', tabledata), storeValue('statename', 'Completed'), storeValue('disable', false)]);\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-15T09:06:23Z"},"id":"PO Entry_FileUploadProcess.onUploadModalClick","deleted":false,"gitSyncId":"67f4d81e59d0ae34925978ba_67fe218f358e8b1adbeac764"},{"pluginType":"JS","pluginId":"js-plugin","unpublishedAction":{"name":"disableArrow","fullyQualifiedName":"Process.disableArrow","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","organizationId":"62a1cace93e9481dacb0f741","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","collectionId":"PO Entry_Process","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"arrow => {\n  return appsmith.store.currentStateName != arrow || Estimate_PO_Table.selectedRowIndex === -1;\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"arrow"}],"isAsync":false},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["arrow => {\n  return appsmith.store.currentStateName != arrow || Estimate_PO_Table.selectedRowIndex === -1;\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"publishedAction":{"name":"disableArrow","fullyQualifiedName":"Process.disableArrow","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","organizationId":"62a1cace93e9481dacb0f741","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","collectionId":"PO Entry_Process","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"arrow => {\n  return appsmith.store.currentStateName != arrow || Estimate_PO_Table.selectedRowIndex === -1;\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"arrow"}],"isAsync":false},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["arrow => {\n  return appsmith.store.currentStateName != arrow || Estimate_PO_Table.selectedRowIndex === -1;\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"id":"PO Entry_Process.disableArrow","deleted":false,"gitSyncId":"62c6dd94aa3be20812d63927_62c6dd94aa3be20812d63936"},{"pluginType":"JS","pluginId":"js-plugin","unpublishedAction":{"name":"insertPOItem","fullyQualifiedName":"PageObjects.insertPOItem","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","organizationId":"62a1cace93e9481dacb0f741","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","collectionId":"PO Entry_PageObjects","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async (POId, POItemNum, POItemDes, POItemQty, POItemAmt, SalesTax) => {\n  await PO_Item_Insert.run({\n    \"POId\": POId,\n    \"POItemNum\": POItemNum,\n    \"POItemDes\": POItemDes,\n    \"POItemQty\": POItemQty,\n    \"POItemAmt\": POItemAmt,\n    \"SalesTax\": SalesTax\n  }).then(() => {\n    return Promise.all([PO_Item_Select.run({\n      'purchaseOrderId': PO_Table.selectedRow.Id\n    }, PO_Details_Select.run())]);\n  }).then(() => {\n    return GlobalVariables.resetWidgets([\"PO_Item_Container\"]);\n  }).then(res => showAlert(\"Insert Done\", \"success\")).catch(error => showAlert(error.toString(), \"error\"));\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"POId"},{"name":"POItemNum"},{"name":"POItemDes"},{"name":"POItemQty"},{"name":"POItemAmt"},{"name":"SalesTax"}],"isAsync":true},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async (POId, POItemNum, POItemDes, POItemQty, POItemAmt, SalesTax) => {\n  await PO_Item_Insert.run({\n    \"POId\": POId,\n    \"POItemNum\": POItemNum,\n    \"POItemDes\": POItemDes,\n    \"POItemQty\": POItemQty,\n    \"POItemAmt\": POItemAmt,\n    \"SalesTax\": SalesTax\n  }).then(() => {\n    return Promise.all([PO_Item_Select.run({\n      'purchaseOrderId': PO_Table.selectedRow.Id\n    }, PO_Details_Select.run())]);\n  }).then(() => {\n    return GlobalVariables.resetWidgets([\"PO_Item_Container\"]);\n  }).then(res => showAlert(\"Insert Done\", \"success\")).catch(error => showAlert(error.toString(), \"error\"));\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"publishedAction":{"name":"insertPOItem","fullyQualifiedName":"PageObjects.insertPOItem","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","organizationId":"62a1cace93e9481dacb0f741","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","collectionId":"PO Entry_PageObjects","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async (POId, POItemNum, POItemDes, POItemQty, POItemAmt, SalesTax) => {\n  await PO_Item_Insert.run({\n    \"POId\": POId,\n    \"POItemNum\": POItemNum,\n    \"POItemDes\": POItemDes,\n    \"POItemQty\": POItemQty,\n    \"POItemAmt\": POItemAmt,\n    \"SalesTax\": SalesTax\n  }).then(() => {\n    return Promise.all([PO_Item_Select.run({\n      'purchaseOrderId': PO_Table.selectedRow.Id\n    }, PO_Details_Select.run())]);\n  }).then(() => {\n    return GlobalVariables.resetWidgets([\"PO_Item_Container\"]);\n  }).then(res => showAlert(\"Insert Done\", \"success\")).catch(error => showAlert(error.toString(), \"error\"));\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"POId"},{"name":"POItemNum"},{"name":"POItemDes"},{"name":"POItemQty"},{"name":"POItemAmt"},{"name":"SalesTax"}],"isAsync":true},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async (POId, POItemNum, POItemDes, POItemQty, POItemAmt, SalesTax) => {\n  await PO_Item_Insert.run({\n    \"POId\": POId,\n    \"POItemNum\": POItemNum,\n    \"POItemDes\": POItemDes,\n    \"POItemQty\": POItemQty,\n    \"POItemAmt\": POItemAmt,\n    \"SalesTax\": SalesTax\n  }).then(() => {\n    return Promise.all([PO_Item_Select.run({\n      'purchaseOrderId': PO_Table.selectedRow.Id\n    }, PO_Details_Select.run())]);\n  }).then(() => {\n    return GlobalVariables.resetWidgets([\"PO_Item_Container\"]);\n  }).then(res => showAlert(\"Insert Done\", \"success\")).catch(error => showAlert(error.toString(), \"error\"));\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"id":"PO Entry_PageObjects.insertPOItem","deleted":false,"gitSyncId":"62c6dd94aa3be20812d63927_62c6dd94aa3be20812d63969"},{"pluginType":"JS","pluginId":"js-plugin","unpublishedAction":{"name":"runRefreshFunc","fullyQualifiedName":"FileUploadProcess.runRefreshFunc","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","collectionId":"PO Entry_FileUploadProcess","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async () => {\n  Promise.all([GlobalVariables.resetForm(['UserText_Input', 'FileComments_Input', 'FilePicker']), storeValue('ActualFileName', \"\"), storeValue('disable', false), FileUploadProcess.clearError()]);\n}","selfReferencingDataPaths":[],"jsArguments":[]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async () => {\n  Promise.all([GlobalVariables.resetForm(['UserText_Input', 'FileComments_Input', 'FilePicker']), storeValue('ActualFileName', \"\"), storeValue('disable', false), FileUploadProcess.clearError()]);\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-15T09:06:23Z"},"publishedAction":{"name":"runRefreshFunc","fullyQualifiedName":"FileUploadProcess.runRefreshFunc","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","collectionId":"PO Entry_FileUploadProcess","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async () => {\n  Promise.all([GlobalVariables.resetForm(['UserText_Input', 'FileComments_Input', 'FilePicker']), storeValue('ActualFileName', \"\"), storeValue('disable', false), FileUploadProcess.clearError()]);\n}","selfReferencingDataPaths":[],"jsArguments":[]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async () => {\n  Promise.all([GlobalVariables.resetForm(['UserText_Input', 'FileComments_Input', 'FilePicker']), storeValue('ActualFileName', \"\"), storeValue('disable', false), FileUploadProcess.clearError()]);\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-15T09:06:23Z"},"id":"PO Entry_FileUploadProcess.runRefreshFunc","deleted":false,"gitSyncId":"67f4d81e59d0ae34925978ba_67fe218f358e8b1adbeac767"},{"pluginType":"JS","pluginId":"js-plugin","unpublishedAction":{"name":"onfileselect","fullyQualifiedName":"FileUploadProcess.onfileselect","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","collectionId":"PO Entry_FileUploadProcess","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async () => {\n  if (FilePicker.files[0].size >= '20000000') {\n    await showModal('File_Alert_Modal');\n  } else {\n    if (FilePicker.files[0].name.split('.')[1] == 'zip' && FilePicker.files[0].size >= 4000000) {\n      await showModal('File_Alert_Modal');\n    } else {\n      await showAlert('File Selected', 'success');\n    }\n  }\n}","selfReferencingDataPaths":[],"jsArguments":[]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async () => {\n  if (FilePicker.files[0].size >= '20000000') {\n    await showModal('File_Alert_Modal');\n  } else {\n    if (FilePicker.files[0].name.split('.')[1] == 'zip' && FilePicker.files[0].size >= 4000000) {\n      await showModal('File_Alert_Modal');\n    } else {\n      await showAlert('File Selected', 'success');\n    }\n  }\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-15T09:06:23Z"},"publishedAction":{"name":"onfileselect","fullyQualifiedName":"FileUploadProcess.onfileselect","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","collectionId":"PO Entry_FileUploadProcess","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async () => {\n  if (FilePicker.files[0].size >= '20000000') {\n    await showModal('File_Alert_Modal');\n  } else {\n    if (FilePicker.files[0].name.split('.')[1] == 'zip' && FilePicker.files[0].size >= 4000000) {\n      await showModal('File_Alert_Modal');\n    } else {\n      await showAlert('File Selected', 'success');\n    }\n  }\n}","selfReferencingDataPaths":[],"jsArguments":[]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async () => {\n  if (FilePicker.files[0].size >= '20000000') {\n    await showModal('File_Alert_Modal');\n  } else {\n    if (FilePicker.files[0].name.split('.')[1] == 'zip' && FilePicker.files[0].size >= 4000000) {\n      await showModal('File_Alert_Modal');\n    } else {\n      await showAlert('File Selected', 'success');\n    }\n  }\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-15T09:06:23Z"},"id":"PO Entry_FileUploadProcess.onfileselect","deleted":false,"gitSyncId":"67f4d81e59d0ae34925978ba_67fe218f358e8b1adbeac75b"},{"pluginType":"JS","pluginId":"js-plugin","unpublishedAction":{"name":"getFileName","fullyQualifiedName":"FileUploadProcess.getFileName","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","collectionId":"PO Entry_FileUploadProcess","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async () => {\n  await FileUploadProcess.clearError();\n  if (POAttachments_Table.selectedRowIndex != -1) {\n    return await storeValue('ActualFileName', POAttachments_Table.selectedRow.FileName);\n  }\n  if (FilePicker.files.length == 0) {\n    return await storeValue('ActualFileName', \"\");\n  }\n  if (UserText_Input.text == \"\" || UserText_Input.isValid != true) {\n    await FileUploadProcess.setError(\"UserText is not provided or is not valid\");\n    return await storeValue('ActualFileName', \"\");\n  }\n  let file_name_temp = \"\";\n  file_name_temp = PO_Table.selectedRow.Id.toString().replace(/[^a-zA-Z0-9]/g, '').toString().trim() + \"_\" + UserText_Input.text.toString() + \".\" + FilePicker.files[0].name.split('.').pop().trim();\n  await FileUploadProcess.clearError();\n  return await storeValue('ActualFileName', file_name_temp.split(\" \").join(\"_\"));\n}","selfReferencingDataPaths":[],"jsArguments":[]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async () => {\n  await FileUploadProcess.clearError();\n  if (POAttachments_Table.selectedRowIndex != -1) {\n    return await storeValue('ActualFileName', POAttachments_Table.selectedRow.FileName);\n  }\n  if (FilePicker.files.length == 0) {\n    return await storeValue('ActualFileName', \"\");\n  }\n  if (UserText_Input.text == \"\" || UserText_Input.isValid != true) {\n    await FileUploadProcess.setError(\"UserText is not provided or is not valid\");\n    return await storeValue('ActualFileName', \"\");\n  }\n  let file_name_temp = \"\";\n  file_name_temp = PO_Table.selectedRow.Id.toString().replace(/[^a-zA-Z0-9]/g, '').toString().trim() + \"_\" + UserText_Input.text.toString() + \".\" + FilePicker.files[0].name.split('.').pop().trim();\n  await FileUploadProcess.clearError();\n  return await storeValue('ActualFileName', file_name_temp.split(\" \").join(\"_\"));\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-15T09:06:24Z"},"publishedAction":{"name":"getFileName","fullyQualifiedName":"FileUploadProcess.getFileName","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","collectionId":"PO Entry_FileUploadProcess","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async () => {\n  await FileUploadProcess.clearError();\n  if (POAttachments_Table.selectedRowIndex != -1) {\n    return await storeValue('ActualFileName', POAttachments_Table.selectedRow.FileName);\n  }\n  if (FilePicker.files.length == 0) {\n    return await storeValue('ActualFileName', \"\");\n  }\n  if (UserText_Input.text == \"\" || UserText_Input.isValid != true) {\n    await FileUploadProcess.setError(\"UserText is not provided or is not valid\");\n    return await storeValue('ActualFileName', \"\");\n  }\n  let file_name_temp = \"\";\n  file_name_temp = PO_Table.selectedRow.Id.toString().replace(/[^a-zA-Z0-9]/g, '').toString().trim() + \"_\" + UserText_Input.text.toString() + \".\" + FilePicker.files[0].name.split('.').pop().trim();\n  await FileUploadProcess.clearError();\n  return await storeValue('ActualFileName', file_name_temp.split(\" \").join(\"_\"));\n}","selfReferencingDataPaths":[],"jsArguments":[]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async () => {\n  await FileUploadProcess.clearError();\n  if (POAttachments_Table.selectedRowIndex != -1) {\n    return await storeValue('ActualFileName', POAttachments_Table.selectedRow.FileName);\n  }\n  if (FilePicker.files.length == 0) {\n    return await storeValue('ActualFileName', \"\");\n  }\n  if (UserText_Input.text == \"\" || UserText_Input.isValid != true) {\n    await FileUploadProcess.setError(\"UserText is not provided or is not valid\");\n    return await storeValue('ActualFileName', \"\");\n  }\n  let file_name_temp = \"\";\n  file_name_temp = PO_Table.selectedRow.Id.toString().replace(/[^a-zA-Z0-9]/g, '').toString().trim() + \"_\" + UserText_Input.text.toString() + \".\" + FilePicker.files[0].name.split('.').pop().trim();\n  await FileUploadProcess.clearError();\n  return await storeValue('ActualFileName', file_name_temp.split(\" \").join(\"_\"));\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-15T09:06:24Z"},"id":"PO Entry_FileUploadProcess.getFileName","deleted":false,"gitSyncId":"67f4d81e59d0ae34925978ba_67fe2190358e8b1adbeac770"},{"pluginType":"DB","pluginId":"mysql-plugin","unpublishedAction":{"name":"POItems_Delete","datasource":{"name":"appsmithmysql","pluginId":"mysql-plugin","messages":[],"isAutoGenerated":false,"id":"appsmithmysql","deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"UPDATE PurchaseOrderItem \nSET    Deleted = 1\nWHERE  PurchaseOrderItem.PurchaseOrderId = {{this.params?.POId}};","selfReferencingDataPaths":[],"pluginSpecifiedTemplates":[{"value":true}]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["this.params?.POId"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"publishedAction":{"name":"POItems_Delete","datasource":{"name":"appsmithmysql","pluginId":"mysql-plugin","messages":[],"isAutoGenerated":false,"id":"appsmithmysql","deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"UPDATE PurchaseOrderItem \nSET    Deleted = 1\nWHERE  PurchaseOrderItem.PurchaseOrderId = {{this.params?.POId}};","selfReferencingDataPaths":[],"pluginSpecifiedTemplates":[{"value":true}]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["this.params?.POId"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"id":"PO Entry_POItems_Delete","deleted":false,"gitSyncId":"62c6dd94aa3be20812d63927_62ebcad520112832dc6c17ed"},{"pluginType":"DB","pluginId":"mysql-plugin","unpublishedAction":{"name":"PO_Delete","datasource":{"name":"appsmithmysql","pluginId":"mysql-plugin","messages":[],"isAutoGenerated":false,"id":"appsmithmysql","deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"UPDATE PurchaseOrder \nSET    Deleted = 1\nWHERE  PurchaseOrder.Id = {{this.params?.POId}};","selfReferencingDataPaths":[]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["this.params?.POId"],"userSetOnLoad":false,"confirmBeforeExecute":true,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"publishedAction":{"name":"PO_Delete","datasource":{"name":"appsmithmysql","pluginId":"mysql-plugin","messages":[],"isAutoGenerated":false,"id":"appsmithmysql","deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"UPDATE PurchaseOrder \nSET    Deleted = 1\nWHERE  PurchaseOrder.Id = {{this.params?.POId}};","selfReferencingDataPaths":[]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["this.params?.POId"],"userSetOnLoad":false,"confirmBeforeExecute":true,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"id":"PO Entry_PO_Delete","deleted":false,"gitSyncId":"62c6dd94aa3be20812d63927_62c6dd94aa3be20812d6395d"},{"pluginType":"DB","pluginId":"mysql-plugin","unpublishedAction":{"name":"CorporateAdmin_Select","datasource":{"name":"appsmithmysql","pluginId":"mysql-plugin","messages":[],"isAutoGenerated":false,"id":"appsmithmysql","deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"SELECT \n     UserName as name \nFROM \n     AppUser \nINNER JOIN \n     UserRole ON AppUser.Id = UserRole.UserId INNER JOIN Role ON UserRole.RoleId = Role.Id\nWHERE \n     Role.Name IN ({{\"'\"+PageObjects.roles_with_access.join(\"','\")+\"'\"}}\n)\n\n","selfReferencingDataPaths":[],"pluginSpecifiedTemplates":[{"value":false}]},"executeOnLoad":true,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["\"'\"+PageObjects.roles_with_access.join(\"','\")+\"'\""],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"publishedAction":{"name":"CorporateAdmin_Select","datasource":{"name":"appsmithmysql","pluginId":"mysql-plugin","messages":[],"isAutoGenerated":false,"id":"appsmithmysql","deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"SELECT \n     UserName as name \nFROM \n     AppUser \nINNER JOIN \n     UserRole ON AppUser.Id = UserRole.UserId INNER JOIN Role ON UserRole.RoleId = Role.Id\nWHERE \n     Role.Name IN ({{\"'\"+PageObjects.roles_with_access.join(\"','\")+\"'\"}}\n)\n\n","selfReferencingDataPaths":[],"pluginSpecifiedTemplates":[{"value":false}]},"executeOnLoad":true,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["\"'\"+PageObjects.roles_with_access.join(\"','\")+\"'\""],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"id":"PO Entry_CorporateAdmin_Select","deleted":false,"gitSyncId":"62c6dd94aa3be20812d63927_62c7d0f7aa3be20812d63a7c"},{"pluginType":"DB","pluginId":"mysql-plugin","unpublishedAction":{"name":"Estimate_Select","datasource":{"name":"appsmithmysql","pluginId":"mysql-plugin","messages":[],"isAutoGenerated":false,"id":"appsmithmysql","deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"SELECT Estimate.Id AS EstimateId,\n       Estimate.Number AS EstimateNumber,\n       Sales.Number AS SalesNumber,PurchaseOrder.Id AS POId,\n\t\t   Sales.Description AS SalesDescription, PurchaseOrder.Taxable\nFROM   Estimate INNER JOIN Sales ON Estimate.SalesId = Sales.Id \n\t\t\tLEFT JOIN PurchaseOrder ON Estimate.Id = PurchaseOrder.EstimateId\n\t\t\tLEFT JOIN AppUser AS BusinessManager ON Sales.BusinessManagerId = BusinessManager.Id \nWHERE  Estimate.CurrentState = '{{ appsmith.store?.currentStateName || 'EnterPO' }}' \n       AND Estimate.Deleted = 0\n\t\t\t\tAND (\n        (\n            '{{appsmith.store.FilterRole}}' = 'BusinessManager'\n            AND BusinessManager.UserName = '{{appsmith.user.username.split('@')[0]}}'\n        )\n        OR\n        '{{appsmith.store.FilterRole}}' = 'SalesManager'\n    );\n","selfReferencingDataPaths":[],"pluginSpecifiedTemplates":[{"value":false}]},"executeOnLoad":true,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":[" appsmith.store?.currentStateName || 'EnterPO' ","appsmith.store.FilterRole","appsmith.user.username.split('@')[0]"],"userSetOnLoad":true,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"publishedAction":{"name":"Estimate_Select","datasource":{"name":"appsmithmysql","pluginId":"mysql-plugin","messages":[],"isAutoGenerated":false,"id":"appsmithmysql","deleted":false,"policies":[],"userPermissions":[]},"pageId":"PO Entry","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"SELECT Estimate.Id AS EstimateId,\n       Estimate.Number AS EstimateNumber,\n       Sales.Number AS SalesNumber,\n\t\t   Sales.Description AS SalesDescription,PurchaseOrder.Taxable\nFROM   Estimate INNER JOIN Sales ON Estimate.SalesId = Sales.Id \n\t\t\tLeft JOIN PurchaseOrder ON Estimate.Id = PurchaseOrder.EstimateId\n\t\t\tLEFT JOIN AppUser AS BusinessManager ON Sales.BusinessManagerId = BusinessManager.Id \nWHERE  Estimate.CurrentState = '{{ appsmith.store?.currentStateName || 'EnterPO' }}' \n       AND Estimate.Deleted = 0\n\t\t\t\tAND (\n        (\n            '{{appsmith.store.FilterRole}}' = 'BusinessManager'\n            AND BusinessManager.UserName = '{{appsmith.user.username.split('@')[0]}}'\n        )\n        OR\n        '{{appsmith.store.FilterRole}}' = 'SalesManager'\n    );\n","selfReferencingDataPaths":[],"pluginSpecifiedTemplates":[{"value":false}]},"executeOnLoad":true,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":[" appsmith.store?.currentStateName || 'EnterPO' ","appsmith.store.FilterRole","appsmith.user.username.split('@')[0]"],"userSetOnLoad":true,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"id":"PO Entry_Estimate_Select","deleted":false,"gitSyncId":"62c6dd94aa3be20812d63927_62c6dd94aa3be20812d63998"},{"pluginType":"JS","pluginId":"js-plugin","unpublishedAction":{"name":"clickArrow","fullyQualifiedName":"Process.clickArrow","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","organizationId":"62a1cace93e9481dacb0f741","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","collectionId":"Estimate Process_Process","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async function (DecisionName) {\n  await storeValue(\"currentDecisionName\", DecisionName);\n  await storeValue(\"currentDecision\", Process.getDecision(DecisionName));\n  await storeValue(\"currentNext\", appsmith.store.currentState.Next);\n  showModal(\"ChangeState_Modal\");\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"DecisionName"}],"isAsync":true},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async function (DecisionName) {\n  await storeValue(\"currentDecisionName\", DecisionName);\n  await storeValue(\"currentDecision\", Process.getDecision(DecisionName));\n  await storeValue(\"currentNext\", appsmith.store.currentState.Next);\n  showModal(\"ChangeState_Modal\");\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"publishedAction":{"name":"clickArrow","fullyQualifiedName":"Process.clickArrow","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","organizationId":"62a1cace93e9481dacb0f741","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","collectionId":"Estimate Process_Process","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async function (DecisionName) {\n  await storeValue(\"currentDecisionName\", DecisionName);\n  await storeValue(\"currentDecision\", Process.getDecision(DecisionName));\n  await storeValue(\"currentNext\", appsmith.store.currentState.Next);\n  showModal(\"ChangeState_Modal\");\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"DecisionName"}],"isAsync":true},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async function (DecisionName) {\n  await storeValue(\"currentDecisionName\", DecisionName);\n  await storeValue(\"currentDecision\", Process.getDecision(DecisionName));\n  await storeValue(\"currentNext\", appsmith.store.currentState.Next);\n  showModal(\"ChangeState_Modal\");\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"id":"Estimate Process_Process.clickArrow","deleted":false,"gitSyncId":"62c6dd94aa3be20812d63927_62c6dd94aa3be20812d6393a"},{"pluginType":"JS","pluginId":"js-plugin","unpublishedAction":{"name":"estimateUpdate","fullyQualifiedName":"PageObjects.estimateUpdate","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","collectionId":"Estimate Process_PageObjects","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async (number, email, ccemail, note, id) => {\n  await Estimate_Update.run({\n    \"number\": number,\n    \"email\": email,\n    \"ccemail\": ccemail,\n    \"note\": note,\n    \"id\": id\n  }).then(() => {\n    return Promise.all([Estimate_Select.run(), GlobalVariables.resetForm([\"Estimate_Number_Input\", \"Email_Input\", \"CCEmail_Input\", \"Estimate_Table\"])]);\n  }).then(() => closeModal(\"EstimateUpdate_Modal\")).then(() => showAlert(\"Values updated\")).catch(error => showAlert(error.toString(), \"error\"));\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"number"},{"name":"email"},{"name":"ccemail"},{"name":"note"},{"name":"id"}],"isAsync":true},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async (number, email, ccemail, note, id) => {\n  await Estimate_Update.run({\n    \"number\": number,\n    \"email\": email,\n    \"ccemail\": ccemail,\n    \"note\": note,\n    \"id\": id\n  }).then(() => {\n    return Promise.all([Estimate_Select.run(), GlobalVariables.resetForm([\"Estimate_Number_Input\", \"Email_Input\", \"CCEmail_Input\", \"Estimate_Table\"])]);\n  }).then(() => closeModal(\"EstimateUpdate_Modal\")).then(() => showAlert(\"Values updated\")).catch(error => showAlert(error.toString(), \"error\"));\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"publishedAction":{"name":"estimateUpdate","fullyQualifiedName":"PageObjects.estimateUpdate","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","collectionId":"Estimate Process_PageObjects","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async (number, email, ccemail, note, id) => {\n  await Estimate_Update.run({\n    \"number\": number,\n    \"email\": email,\n    \"ccemail\": ccemail,\n    \"note\": note,\n    \"id\": id\n  }).then(() => {\n    return Promise.all([Estimate_Select.run(), GlobalVariables.resetForm([\"Estimate_Number_Input\", \"Email_Input\", \"CCEmail_Input\", \"Estimate_Table\"])]);\n  }).then(() => closeModal(\"EstimateUpdate_Modal\")).then(() => showAlert(\"Values updated\")).catch(error => showAlert(error.toString(), \"error\"));\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"number"},{"name":"email"},{"name":"ccemail"},{"name":"note"},{"name":"id"}],"isAsync":true},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async (number, email, ccemail, note, id) => {\n  await Estimate_Update.run({\n    \"number\": number,\n    \"email\": email,\n    \"ccemail\": ccemail,\n    \"note\": note,\n    \"id\": id\n  }).then(() => {\n    return Promise.all([Estimate_Select.run(), GlobalVariables.resetForm([\"Estimate_Number_Input\", \"Email_Input\", \"CCEmail_Input\", \"Estimate_Table\"])]);\n  }).then(() => closeModal(\"EstimateUpdate_Modal\")).then(() => showAlert(\"Values updated\")).catch(error => showAlert(error.toString(), \"error\"));\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"id":"Estimate Process_PageObjects.estimateUpdate","deleted":false,"gitSyncId":"62c6dd94aa3be20812d63927_62c6dd94aa3be20812d63948"},{"pluginType":"JS","pluginId":"js-plugin","unpublishedAction":{"name":"getFileObject","fullyQualifiedName":"FileUploadProcess.getFileObject","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","collectionId":"Estimate Process_FileUploadProcess","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async (fileName, Number, NumberName) => {\n  let response = \"\";\n  let params = {\n    'siteId': FileUploadProcess.getValue('Estimate', 'SharepointId'),\n    'listId': FileUploadProcess.getValue('Estimate', 'ListId'),\n    'Number': Number,\n    'NumberName': NumberName\n  };\n  response = await ListItemsDelete_Select.run(params);\n  console.log('dwnld res is', response);\n  if (response.value.length == 0) {\n    return await FileUploadProcess.setError(\"No files exist!\");\n  }\n  for (const eachFile of response.value) {\n    if (eachFile.driveItem.name == fileName) {\n      await storeValue('fileerror', 'false');\n      return eachFile;\n    }\n  }\n  await storeValue('fileerror', 'true');\n  return await FileUploadProcess.setError(\"Cannot find file \" + fileName);\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"fileName"},{"name":"Number"},{"name":"NumberName"}]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async (fileName, Number, NumberName) => {\n  let response = \"\";\n  let params = {\n    'siteId': FileUploadProcess.getValue('Estimate', 'SharepointId'),\n    'listId': FileUploadProcess.getValue('Estimate', 'ListId'),\n    'Number': Number,\n    'NumberName': NumberName\n  };\n  response = await ListItemsDelete_Select.run(params);\n  console.log('dwnld res is', response);\n  if (response.value.length == 0) {\n    return await FileUploadProcess.setError(\"No files exist!\");\n  }\n  for (const eachFile of response.value) {\n    if (eachFile.driveItem.name == fileName) {\n      await storeValue('fileerror', 'false');\n      return eachFile;\n    }\n  }\n  await storeValue('fileerror', 'true');\n  return await FileUploadProcess.setError(\"Cannot find file \" + fileName);\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-08T11:42:38Z"},"publishedAction":{"name":"getFileObject","fullyQualifiedName":"FileUploadProcess.getFileObject","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","collectionId":"Estimate Process_FileUploadProcess","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async (fileName, Number, NumberName) => {\n  let response = \"\";\n  let params = {\n    'siteId': FileUploadProcess.getValue('Estimate', 'SharepointId'),\n    'listId': FileUploadProcess.getValue('Estimate', 'ListId'),\n    'Number': Number,\n    'NumberName': NumberName\n  };\n  response = await ListItemsDelete_Select.run(params);\n  console.log('dwnld res is', response);\n  if (response.value.length == 0) {\n    return await FileUploadProcess.setError(\"No files exist!\");\n  }\n  for (const eachFile of response.value) {\n    if (eachFile.driveItem.name == fileName) {\n      await storeValue('fileerror', 'false');\n      return eachFile;\n    }\n  }\n  await storeValue('fileerror', 'true');\n  return await FileUploadProcess.setError(\"Cannot find file \" + fileName);\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"fileName"},{"name":"Number"},{"name":"NumberName"}]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async (fileName, Number, NumberName) => {\n  let response = \"\";\n  let params = {\n    'siteId': FileUploadProcess.getValue('Estimate', 'SharepointId'),\n    'listId': FileUploadProcess.getValue('Estimate', 'ListId'),\n    'Number': Number,\n    'NumberName': NumberName\n  };\n  response = await ListItemsDelete_Select.run(params);\n  console.log('dwnld res is', response);\n  if (response.value.length == 0) {\n    return await FileUploadProcess.setError(\"No files exist!\");\n  }\n  for (const eachFile of response.value) {\n    if (eachFile.driveItem.name == fileName) {\n      await storeValue('fileerror', 'false');\n      return eachFile;\n    }\n  }\n  await storeValue('fileerror', 'true');\n  return await FileUploadProcess.setError(\"Cannot find file \" + fileName);\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-08T11:42:38Z"},"id":"Estimate Process_FileUploadProcess.getFileObject","deleted":false,"gitSyncId":"67f4d81e59d0ae34925978ba_67f50bae59d0ae3492597b84"},{"pluginType":"JS","pluginId":"js-plugin","unpublishedAction":{"name":"myFun2","fullyQualifiedName":"GlobalVariables.myFun2","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","organizationId":"62a1cace93e9481dacb0f741","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","collectionId":"Estimate Process_GlobalVariables","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async () => {}","selfReferencingDataPaths":[],"jsArguments":[],"isAsync":true},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async () => {}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"publishedAction":{"name":"myFun2","fullyQualifiedName":"GlobalVariables.myFun2","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","organizationId":"62a1cace93e9481dacb0f741","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","collectionId":"Estimate Process_GlobalVariables","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async () => {}","selfReferencingDataPaths":[],"jsArguments":[],"isAsync":true},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async () => {}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"id":"Estimate Process_GlobalVariables.myFun2","deleted":false,"gitSyncId":"62c6dd94aa3be20812d63927_62c6dd94aa3be20812d63935"},{"pluginType":"JS","pluginId":"js-plugin","unpublishedAction":{"name":"deleteEstimateItem","fullyQualifiedName":"PageObjects.deleteEstimateItem","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","organizationId":"62a1cace93e9481dacb0f741","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","collectionId":"Estimate Process_PageObjects","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async (estimateId, estimateitemid) => {\n  await EstimateItem_Delete.run({\n    \"estimateitemid\": estimateitemid\n  }).then(() => {\n    return Promise.all([EstimateItem_Select.run({\n      'estimateId': estimateId\n    })]);\n  }).then(() => {\n    return GlobalVariables.resetWidgets([\"EstimateDetails_Container\", \"EstimateItem_Table\"]);\n  }).then(res => showAlert(\"Delete Done\", \"success\")).catch(error => showAlert(error.toString(), \"error\"));\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"estimateId"},{"name":"estimateitemid"}],"isAsync":true},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async (estimateId, estimateitemid) => {\n  await EstimateItem_Delete.run({\n    \"estimateitemid\": estimateitemid\n  }).then(() => {\n    return Promise.all([EstimateItem_Select.run({\n      'estimateId': estimateId\n    })]);\n  }).then(() => {\n    return GlobalVariables.resetWidgets([\"EstimateDetails_Container\", \"EstimateItem_Table\"]);\n  }).then(res => showAlert(\"Delete Done\", \"success\")).catch(error => showAlert(error.toString(), \"error\"));\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"publishedAction":{"name":"deleteEstimateItem","fullyQualifiedName":"PageObjects.deleteEstimateItem","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","organizationId":"62a1cace93e9481dacb0f741","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","collectionId":"Estimate Process_PageObjects","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async (estimateId, estimateitemid) => {\n  await EstimateItem_Delete.run({\n    \"estimateitemid\": estimateitemid\n  }).then(() => {\n    return Promise.all([EstimateItem_Select.run({\n      'estimateId': estimateId\n    })]);\n  }).then(() => {\n    return GlobalVariables.resetWidgets([\"EstimateDetails_Container\", \"EstimateItem_Table\"]);\n  }).then(res => showAlert(\"Delete Done\", \"success\")).catch(error => showAlert(error.toString(), \"error\"));\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"estimateId"},{"name":"estimateitemid"}],"isAsync":true},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async (estimateId, estimateitemid) => {\n  await EstimateItem_Delete.run({\n    \"estimateitemid\": estimateitemid\n  }).then(() => {\n    return Promise.all([EstimateItem_Select.run({\n      'estimateId': estimateId\n    })]);\n  }).then(() => {\n    return GlobalVariables.resetWidgets([\"EstimateDetails_Container\", \"EstimateItem_Table\"]);\n  }).then(res => showAlert(\"Delete Done\", \"success\")).catch(error => showAlert(error.toString(), \"error\"));\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"id":"Estimate Process_PageObjects.deleteEstimateItem","deleted":false,"gitSyncId":"62c6dd94aa3be20812d63927_62c6dd94aa3be20812d6392f"},{"pluginType":"JS","pluginId":"js-plugin","unpublishedAction":{"name":"onModalSubmitClicked","fullyQualifiedName":"Process.onModalSubmitClicked","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","organizationId":"62a1cace93e9481dacb0f741","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","collectionId":"Estimate Process_Process","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async function (id) {\n  await showAlert(\"Moving Estimate to \" + appsmith.store.currentDecision.State + \" State\", \"info\");\n  await Estimate_State_Update.run({\n    \"nextState\": appsmith.store.currentDecision.State,\n    \"Id\": id\n  });\n  await Estimate_Select.run({\n    \"currentStateName\": appsmith.store.currentStateName\n  });\n  EstimateItem_Select.run({\n    'estimateId': -1\n  });\n  closeModal(\"ChangeState_Modal\");\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"id"}],"isAsync":true},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async function (id) {\n  await showAlert(\"Moving Estimate to \" + appsmith.store.currentDecision.State + \" State\", \"info\");\n  await Estimate_State_Update.run({\n    \"nextState\": appsmith.store.currentDecision.State,\n    \"Id\": id\n  });\n  await Estimate_Select.run({\n    \"currentStateName\": appsmith.store.currentStateName\n  });\n  EstimateItem_Select.run({\n    'estimateId': -1\n  });\n  closeModal(\"ChangeState_Modal\");\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"publishedAction":{"name":"onModalSubmitClicked","fullyQualifiedName":"Process.onModalSubmitClicked","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","organizationId":"62a1cace93e9481dacb0f741","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","collectionId":"Estimate Process_Process","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async function (id) {\n  await showAlert(\"Moving Estimate to \" + appsmith.store.currentDecision.State + \" State\", \"info\");\n  await Estimate_State_Update.run({\n    \"nextState\": appsmith.store.currentDecision.State,\n    \"Id\": id\n  });\n  await Estimate_Select.run({\n    \"currentStateName\": appsmith.store.currentStateName\n  });\n  EstimateItem_Select.run({\n    'estimateId': -1\n  });\n  closeModal(\"ChangeState_Modal\");\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"id"}],"isAsync":true},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async function (id) {\n  await showAlert(\"Moving Estimate to \" + appsmith.store.currentDecision.State + \" State\", \"info\");\n  await Estimate_State_Update.run({\n    \"nextState\": appsmith.store.currentDecision.State,\n    \"Id\": id\n  });\n  await Estimate_Select.run({\n    \"currentStateName\": appsmith.store.currentStateName\n  });\n  EstimateItem_Select.run({\n    'estimateId': -1\n  });\n  closeModal(\"ChangeState_Modal\");\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"id":"Estimate Process_Process.onModalSubmitClicked","deleted":false,"gitSyncId":"62c6dd94aa3be20812d63927_62c6dd94aa3be20812d63946"},{"pluginType":"JS","pluginId":"js-plugin","unpublishedAction":{"name":"getValue","fullyQualifiedName":"FileUploadProcess.getValue","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","collectionId":"Estimate Process_FileUploadProcess","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"(modelType, key) => {\n  if (appsmith.URL.hostname == \"erp-dev.anoralabs.com\") {\n    return FileUploadProcess.fileUploadStruct[modelType][key];\n  } else {\n    return FileUploadProcess.fileUploadStructProd[modelType][key];\n  }\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"modelType"},{"name":"key"}]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["(modelType, key) => {\n  if (appsmith.URL.hostname == \"erp-dev.anoralabs.com\") {\n    return FileUploadProcess.fileUploadStruct[modelType][key];\n  } else {\n    return FileUploadProcess.fileUploadStructProd[modelType][key];\n  }\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-08T11:42:38Z"},"publishedAction":{"name":"getValue","fullyQualifiedName":"FileUploadProcess.getValue","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","collectionId":"Estimate Process_FileUploadProcess","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"(modelType, key) => {\n  if (appsmith.URL.hostname == \"erp-dev.anoralabs.com\") {\n    return FileUploadProcess.fileUploadStruct[modelType][key];\n  } else {\n    return FileUploadProcess.fileUploadStructProd[modelType][key];\n  }\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"modelType"},{"name":"key"}]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["(modelType, key) => {\n  if (appsmith.URL.hostname == \"erp-dev.anoralabs.com\") {\n    return FileUploadProcess.fileUploadStruct[modelType][key];\n  } else {\n    return FileUploadProcess.fileUploadStructProd[modelType][key];\n  }\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-08T11:42:38Z"},"id":"Estimate Process_FileUploadProcess.getValue","deleted":false,"gitSyncId":"67f4d81e59d0ae34925978ba_67f50bae59d0ae3492597b82"},{"pluginType":"JS","pluginId":"js-plugin","unpublishedAction":{"name":"disableDeleteButton","fullyQualifiedName":"GlobalVariables.disableDeleteButton","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","organizationId":"62a1cace93e9481dacb0f741","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","collectionId":"Estimate Process_GlobalVariables","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"formTable => {\n  let disableDelete = formTable.selectedRowIndex === -1 ? true : false;\n  return disableDelete;\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"formTable"}],"isAsync":false},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["formTable => {\n  let disableDelete = formTable.selectedRowIndex === -1 ? true : false;\n  return disableDelete;\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"publishedAction":{"name":"disableDeleteButton","fullyQualifiedName":"GlobalVariables.disableDeleteButton","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","organizationId":"62a1cace93e9481dacb0f741","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","collectionId":"Estimate Process_GlobalVariables","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"formTable => {\n  let disableDelete = formTable.selectedRowIndex === -1 ? true : false;\n  return disableDelete;\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"formTable"}],"isAsync":false},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["formTable => {\n  let disableDelete = formTable.selectedRowIndex === -1 ? true : false;\n  return disableDelete;\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"id":"Estimate Process_GlobalVariables.disableDeleteButton","deleted":false,"gitSyncId":"62c6dd94aa3be20812d63927_62c6dd94aa3be20812d6393e"},{"pluginType":"JS","pluginId":"js-plugin","unpublishedAction":{"name":"validateForm","fullyQualifiedName":"GlobalVariables.validateForm","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","organizationId":"62a1cace93e9481dacb0f741","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","collectionId":"Estimate Process_GlobalVariables","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"formWidgets => {\n  let validity = true;\n  for (let aWidget of formWidgets) {\n    validity = validity && GlobalVariables.validateWidget(aWidget);\n    if (validity === false) break;\n  }\n  return validity;\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"formWidgets"}],"isAsync":false},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["formWidgets => {\n  let validity = true;\n  for (let aWidget of formWidgets) {\n    validity = validity && GlobalVariables.validateWidget(aWidget);\n    if (validity === false) break;\n  }\n  return validity;\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"publishedAction":{"name":"validateForm","fullyQualifiedName":"GlobalVariables.validateForm","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","organizationId":"62a1cace93e9481dacb0f741","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","collectionId":"Estimate Process_GlobalVariables","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"formWidgets => {\n  let validity = true;\n  for (let aWidget of formWidgets) {\n    validity = validity && GlobalVariables.validateWidget(aWidget);\n    if (validity === false) break;\n  }\n  return validity;\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"formWidgets"}],"isAsync":false},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["formWidgets => {\n  let validity = true;\n  for (let aWidget of formWidgets) {\n    validity = validity && GlobalVariables.validateWidget(aWidget);\n    if (validity === false) break;\n  }\n  return validity;\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"id":"Estimate Process_GlobalVariables.validateForm","deleted":false,"gitSyncId":"62c6dd94aa3be20812d63927_62c6dd94aa3be20812d6393c"},{"pluginType":"JS","pluginId":"js-plugin","unpublishedAction":{"name":"accessControl","fullyQualifiedName":"PageObjects.accessControl","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","collectionId":"Estimate Process_PageObjects","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async () => {\n  await UserRoles_Select.run();\n  let role = '';\n  if (UserRoles_Select.data.find(row => row.Name === 'Sales Manager' || row.Name === 'Accounts Receivables')) {\n    console.log('111');\n    role = 'SalesManager';\n  } else if (UserRoles_Select.data.find(row => row.Name === 'Business Manager')) {\n    console.log('222');\n    role = 'BusinessManager';\n  }\n  await storeValue('FilterRole', role, false);\n  console.log('frole', appsmith.store.FilterRole);\n  await Estimate_Select.run();\n}","selfReferencingDataPaths":[],"jsArguments":[]},"executeOnLoad":true,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async () => {\n  await UserRoles_Select.run();\n  let role = '';\n  if (UserRoles_Select.data.find(row => row.Name === 'Sales Manager' || row.Name === 'Accounts Receivables')) {\n    console.log('111');\n    role = 'SalesManager';\n  } else if (UserRoles_Select.data.find(row => row.Name === 'Business Manager')) {\n    console.log('222');\n    role = 'BusinessManager';\n  }\n  await storeValue('FilterRole', role, false);\n  console.log('frole', appsmith.store.FilterRole);\n  await Estimate_Select.run();\n}"],"userSetOnLoad":true,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-02-23T09:01:04Z"},"publishedAction":{"name":"accessControl","fullyQualifiedName":"PageObjects.accessControl","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","collectionId":"Estimate Process_PageObjects","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async () => {\n  await UserRoles_Select.run();\n  let role = '';\n  if (UserRoles_Select.data.find(row => row.Name === 'Sales Manager' || row.Name === 'Accounts Receivables')) {\n    console.log('111');\n    role = 'SalesManager';\n  } else if (UserRoles_Select.data.find(row => row.Name === 'Business Manager')) {\n    console.log('222');\n    role = 'BusinessManager';\n  }\n  await storeValue('FilterRole', role, false);\n  console.log('frole', appsmith.store.FilterRole);\n  await Estimate_Select.run();\n}","selfReferencingDataPaths":[],"jsArguments":[]},"executeOnLoad":true,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async () => {\n  await UserRoles_Select.run();\n  let role = '';\n  if (UserRoles_Select.data.find(row => row.Name === 'Sales Manager' || row.Name === 'Accounts Receivables')) {\n    console.log('111');\n    role = 'SalesManager';\n  } else if (UserRoles_Select.data.find(row => row.Name === 'Business Manager')) {\n    console.log('222');\n    role = 'BusinessManager';\n  }\n  await storeValue('FilterRole', role, false);\n  console.log('frole', appsmith.store.FilterRole);\n  await Estimate_Select.run();\n}"],"userSetOnLoad":true,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-02-23T09:01:04Z"},"id":"Estimate Process_PageObjects.accessControl","deleted":false,"gitSyncId":"67bae209bfd36a5abab32b21_67bae3d0bfd36a5abab32b94"},{"pluginType":"JS","pluginId":"js-plugin","unpublishedAction":{"name":"modifyFileMetadata","fullyQualifiedName":"FileUploadProcess.modifyFileMetadata","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","collectionId":"Estimate Process_FileUploadProcess","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async (fileName, fileParams, NumberName, Number) => {\n  let response = \"\";\n  let params = {\n    'siteId': FileUploadProcess.getValue('Estimate', 'SharepointId'),\n    'listId': FileUploadProcess.getValue('Estimate', 'ListId'),\n    'NumberName': NumberName,\n    'Number': Number\n  };\n  if (EstimateAttachments_Table.selectedRowIndex == -1) {\n    console.log(params, 'metabreak');\n    response = await ListItemMetaDataCreate_Select.run(params);\n    console.log(response);\n  } else {\n    response = await ListItemsDelete_Select.run(params);\n  }\n  if (response.value.length == 0) {\n    return await FileUploadProcess.setError(\"No files exist!\");\n  }\n  for (const eachFile of response.value) {\n    console.log(\"eachfile\", eachFile);\n    if (eachFile.driveItem.name == fileName) {\n      console.log(\"eachfile\", eachFile);\n      let query_params = {\n        'siteId': FileUploadProcess.getValue('Estimate', 'SharepointId'),\n        'listId': FileUploadProcess.getValue('Estimate', 'ListId'),\n        'listItemId': eachFile.id,\n        'fileParams': fileParams\n      };\n      console.log(query_params);\n      return await FileMetadata_Create.run(query_params);\n    }\n  }\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"fileName"},{"name":"fileParams"},{"name":"NumberName"},{"name":"Number"}]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async (fileName, fileParams, NumberName, Number) => {\n  let response = \"\";\n  let params = {\n    'siteId': FileUploadProcess.getValue('Estimate', 'SharepointId'),\n    'listId': FileUploadProcess.getValue('Estimate', 'ListId'),\n    'NumberName': NumberName,\n    'Number': Number\n  };\n  if (EstimateAttachments_Table.selectedRowIndex == -1) {\n    console.log(params, 'metabreak');\n    response = await ListItemMetaDataCreate_Select.run(params);\n    console.log(response);\n  } else {\n    response = await ListItemsDelete_Select.run(params);\n  }\n  if (response.value.length == 0) {\n    return await FileUploadProcess.setError(\"No files exist!\");\n  }\n  for (const eachFile of response.value) {\n    console.log(\"eachfile\", eachFile);\n    if (eachFile.driveItem.name == fileName) {\n      console.log(\"eachfile\", eachFile);\n      let query_params = {\n        'siteId': FileUploadProcess.getValue('Estimate', 'SharepointId'),\n        'listId': FileUploadProcess.getValue('Estimate', 'ListId'),\n        'listItemId': eachFile.id,\n        'fileParams': fileParams\n      };\n      console.log(query_params);\n      return await FileMetadata_Create.run(query_params);\n    }\n  }\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-08T11:42:38Z"},"publishedAction":{"name":"modifyFileMetadata","fullyQualifiedName":"FileUploadProcess.modifyFileMetadata","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","collectionId":"Estimate Process_FileUploadProcess","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async (fileName, fileParams, NumberName, Number) => {\n  let response = \"\";\n  let params = {\n    'siteId': FileUploadProcess.getValue('Estimate', 'SharepointId'),\n    'listId': FileUploadProcess.getValue('Estimate', 'ListId'),\n    'NumberName': NumberName,\n    'Number': Number\n  };\n  if (EstimateAttachments_Table.selectedRowIndex == -1) {\n    console.log(params, 'metabreak');\n    response = await ListItemMetaDataCreate_Select.run(params);\n    console.log(response);\n  } else {\n    response = await ListItemsDelete_Select.run(params);\n  }\n  if (response.value.length == 0) {\n    return await FileUploadProcess.setError(\"No files exist!\");\n  }\n  for (const eachFile of response.value) {\n    console.log(\"eachfile\", eachFile);\n    if (eachFile.driveItem.name == fileName) {\n      console.log(\"eachfile\", eachFile);\n      let query_params = {\n        'siteId': FileUploadProcess.getValue('Estimate', 'SharepointId'),\n        'listId': FileUploadProcess.getValue('Estimate', 'ListId'),\n        'listItemId': eachFile.id,\n        'fileParams': fileParams\n      };\n      console.log(query_params);\n      return await FileMetadata_Create.run(query_params);\n    }\n  }\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"fileName"},{"name":"fileParams"},{"name":"NumberName"},{"name":"Number"}]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async (fileName, fileParams, NumberName, Number) => {\n  let response = \"\";\n  let params = {\n    'siteId': FileUploadProcess.getValue('Estimate', 'SharepointId'),\n    'listId': FileUploadProcess.getValue('Estimate', 'ListId'),\n    'NumberName': NumberName,\n    'Number': Number\n  };\n  if (EstimateAttachments_Table.selectedRowIndex == -1) {\n    console.log(params, 'metabreak');\n    response = await ListItemMetaDataCreate_Select.run(params);\n    console.log(response);\n  } else {\n    response = await ListItemsDelete_Select.run(params);\n  }\n  if (response.value.length == 0) {\n    return await FileUploadProcess.setError(\"No files exist!\");\n  }\n  for (const eachFile of response.value) {\n    console.log(\"eachfile\", eachFile);\n    if (eachFile.driveItem.name == fileName) {\n      console.log(\"eachfile\", eachFile);\n      let query_params = {\n        'siteId': FileUploadProcess.getValue('Estimate', 'SharepointId'),\n        'listId': FileUploadProcess.getValue('Estimate', 'ListId'),\n        'listItemId': eachFile.id,\n        'fileParams': fileParams\n      };\n      console.log(query_params);\n      return await FileMetadata_Create.run(query_params);\n    }\n  }\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-08T11:42:38Z"},"id":"Estimate Process_FileUploadProcess.modifyFileMetadata","deleted":false,"gitSyncId":"67f4d81e59d0ae34925978ba_67f50bae59d0ae3492597b7c"},{"pluginType":"JS","pluginId":"js-plugin","unpublishedAction":{"name":"setError","fullyQualifiedName":"FileUploadProcess.setError","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","collectionId":"Estimate Process_FileUploadProcess","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async errorMessage => {\n  await storeValue('ErrorMessage', errorMessage);\n  await storeValue('ErrorVisibility', true);\n  await storeValue('ErrorOccured', true);\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"errorMessage"}]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async errorMessage => {\n  await storeValue('ErrorMessage', errorMessage);\n  await storeValue('ErrorVisibility', true);\n  await storeValue('ErrorOccured', true);\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-08T11:42:38Z"},"publishedAction":{"name":"setError","fullyQualifiedName":"FileUploadProcess.setError","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","collectionId":"Estimate Process_FileUploadProcess","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async errorMessage => {\n  await storeValue('ErrorMessage', errorMessage);\n  await storeValue('ErrorVisibility', true);\n  await storeValue('ErrorOccured', true);\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"errorMessage"}]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async errorMessage => {\n  await storeValue('ErrorMessage', errorMessage);\n  await storeValue('ErrorVisibility', true);\n  await storeValue('ErrorOccured', true);\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-08T11:42:38Z"},"id":"Estimate Process_FileUploadProcess.setError","deleted":false,"gitSyncId":"67f4d81e59d0ae34925978ba_67f50bae59d0ae3492597b90"},{"pluginType":"JS","pluginId":"js-plugin","unpublishedAction":{"name":"onfileselect","fullyQualifiedName":"FileUploadProcess.onfileselect","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","collectionId":"Estimate Process_FileUploadProcess","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async () => {\n  if (FilePicker.files[0].size >= '20000000') {\n    await showModal('File_Alert_Modal');\n  } else {\n    if (FilePicker.files[0].name.split('.')[1] == 'zip' && FilePicker.files[0].size >= 4000000) {\n      await showModal('File_Alert_Modal');\n    } else {\n      await showAlert('File Selected', 'success');\n    }\n  }\n}","selfReferencingDataPaths":[],"jsArguments":[]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async () => {\n  if (FilePicker.files[0].size >= '20000000') {\n    await showModal('File_Alert_Modal');\n  } else {\n    if (FilePicker.files[0].name.split('.')[1] == 'zip' && FilePicker.files[0].size >= 4000000) {\n      await showModal('File_Alert_Modal');\n    } else {\n      await showAlert('File Selected', 'success');\n    }\n  }\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-08T11:42:38Z"},"publishedAction":{"name":"onfileselect","fullyQualifiedName":"FileUploadProcess.onfileselect","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","collectionId":"Estimate Process_FileUploadProcess","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async () => {\n  if (FilePicker.files[0].size >= '20000000') {\n    await showModal('File_Alert_Modal');\n  } else {\n    if (FilePicker.files[0].name.split('.')[1] == 'zip' && FilePicker.files[0].size >= 4000000) {\n      await showModal('File_Alert_Modal');\n    } else {\n      await showAlert('File Selected', 'success');\n    }\n  }\n}","selfReferencingDataPaths":[],"jsArguments":[]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async () => {\n  if (FilePicker.files[0].size >= '20000000') {\n    await showModal('File_Alert_Modal');\n  } else {\n    if (FilePicker.files[0].name.split('.')[1] == 'zip' && FilePicker.files[0].size >= 4000000) {\n      await showModal('File_Alert_Modal');\n    } else {\n      await showAlert('File Selected', 'success');\n    }\n  }\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-08T11:42:38Z"},"id":"Estimate Process_FileUploadProcess.onfileselect","deleted":false,"gitSyncId":"67f4d81e59d0ae34925978ba_67f50bae59d0ae3492597b80"},{"pluginType":"JS","pluginId":"js-plugin","unpublishedAction":{"name":"runCreateFile","fullyQualifiedName":"FileUploadProcess.runCreateFile","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","collectionId":"Estimate Process_FileUploadProcess","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async (EId, Comments) => {\n  try {\n    let statename = appsmith.store.statename == null ? storeValue('statename', 'FileCheck') : appsmith.store.statename;\n    let progressstatus = appsmith.store.progressstatus == null ? storeValue('progressstatus', '0') : appsmith.store.progressstatus;\n    let retry = 0;\n    await FileUploadProcess.clearError();\n    await storeValue('closedisable', 'False');\n    if (appsmith.store.statename == 'Completed') {\n      statename = \"FileCheck\";\n      progressstatus = 0;\n      await storeValue('statename', statename);\n      await storeValue('progressstatus', progressstatus);\n    }\n    showModal('Progress_Modal');\n    let fileParams = {\n      \"ModifiedBy\": appsmith.user.email.split(\"@\")[0],\n      \"FileType\": FilePicker.files[0].name.split('.').pop().trim(),\n      \"SalesNumber\": Estimate_Table.selectedRow.SalesNumber,\n      \"SalesId\": Estimate_Table.selectedRow.Id,\n      \"EstimateId\": Estimate_Table.selectedRow.EId,\n      \"OriginalFileName\": FilePicker.files[0].name\n    };\n    let DriveId = FileUploadProcess.getValue('Estimate', 'DriveId');\n    let DriveItemId = FileUploadProcess.getValue('Estimate', 'DriveItemId');\n    while (statename != 'Completed') {\n      console.log(progressstatus);\n      console.log(statename);\n      if (statename != 'Error') {\n        await storeValue('statename', statename);\n        await storeValue('progressstatus', progressstatus);\n      }\n      switch (statename) {\n        case 'FileCheck':\n          let response = await SpecificFilesInDrive_Select.run({\n            'DriveId': DriveId,\n            'DriveItemId': DriveItemId,\n            'FileName': ActualFileName_Input.text\n          });\n          console.log(response, 'response');\n          if (response.value.length == 0) {\n            statename = 'UploadToSharePoint';\n            progressstatus = 25;\n          } else {\n            await FileUploadProcess.setError(\"File Name Not Unique! Enter different user \");\n            statename = 'Error';\n          }\n          break;\n        case 'DBInsert':\n          await EAttachments_Insert.run({\n            \"EId\": EId,\n            \"FileName\": appsmith.store.ActualFileName,\n            \"Comments\": Comments\n          }).then(() => EAttachments_Select.run({\n            \"EId\": EId\n          }));\n          statename = 'UpdateMetadata';\n          progressstatus = 75;\n          break;\n        case 'UploadToSharePoint':\n          let uploadurl = await UploadSession_Create.run({\n            'DriveId': DriveId,\n            'DriveItemId': DriveItemId,\n            'fileName': ActualFileName_Input.text\n          });\n          console.log('uploadurl is', uploadurl.uploadUrl);\n          let filesize = FilePicker.files[0].size;\n          let startindex = 0;\n          let responsecreate = \"\";\n          let upload_chunk = filesize;\n          let endindex = filesize - 1;\n          responsecreate = await FileUpload_Create.run(() => {}, () => {}, {\n            'uploadurl': UploadSession_Create.data.uploadUrl.split('//')[1],\n            'range': upload_chunk,\n            'startindex': startindex,\n            'endindex': endindex,\n            'filesize': filesize\n          });\n          console.log('responsecreate is', FileUpload_Create.data);\n          console.log('name', FileUpload_Create.data.name, \"Name\");\n          if (FileUpload_Create.data.length != 0) {\n            if (FileUpload_Create.data.name == ActualFileName_Input.text) {\n              statename = 'DBInsert';\n              progressstatus = 50;\n            }\n          } else if (retry == 0) {\n            retry++;\n            await FileUploadProcess.setError(\"Upload Failed in first attempt, attempting second\");\n          } else {\n            await FileUploadProcess.setError(\"Upload Failed!, File Upload Create Response not valid\");\n            statename = 'Error';\n          }\n          break;\n        case 'UpdateMetadata':\n          let responsemetadata = \"\";\n          responsemetadata = await FileUploadProcess.modifyFileMetadata(appsmith.store.ActualFileName, fileParams, 'SalesId', Estimate_Table.selectedRow.Id);\n          console.log('metadata', responsemetadata);\n          if (FileMetadata_Create.data.length != 0) {\n            if (FileMetadata_Create.data.SalesId == Estimate_Table.selectedRow.Id) {\n              statename = 'Completed';\n              progressstatus = 100;\n            }\n          } else if (retry == 0) {\n            retry++;\n            await FileUploadProcess.setError(\"First Attempt for Metadata is failed, Attempting Second\");\n          } else {\n            await FileUploadProcess.setError(\"Upload Failed!, Metadata create response not valid\");\n            statename = 'Error';\n          }\n          break;\n        case 'Error':\n          await storeValue('closedisable', 'True');\n          statename = 'Completed';\n          break;\n      }\n    }\n    await storeValue('statename', statename);\n    await storeValue('progressstatus', progressstatus);\n    if (appsmith.store.statename == 'Completed' && appsmith.store.ErrorMessage == '') {\n      await FileUploadProcess.runRefreshFunc().then(() => closeModal('Progress_Modal')).then(() => Promise.all([showModal('FileUpload_Modal'), EAttachments_Select.run({\n        \"EId\": Estimate_Table.selectedRow.EId\n      })])).then(() => showAlert('Estimate File Inserted', 'success')).then(() => FileUpload_Check.run({\n        'EId': Estimate_Table.selectedRow.EId\n      }));\n    }\n  } catch (err) {\n    if (err.message == \"Cannot read properties of undefined (reading 'data')\") {\n      Promise.all([FileUploadProcess.setError(\"Network got disconnected!, Please check your connection and retry\"), storeValue('closedisable', 'True'), showAlert('Network got disconnected!, Please check your connection and retry', 'error')]);\n    } else {\n      Promise.all([FileUploadProcess.setError(\"Upload Failed retry, \" + err.message), storeValue('closedisable', 'True'), showAlert(\"Upload Failed retry, \" + err.message, 'error')]);\n    }\n  }\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"EId"},{"name":"Comments"}]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async (EId, Comments) => {\n  try {\n    let statename = appsmith.store.statename == null ? storeValue('statename', 'FileCheck') : appsmith.store.statename;\n    let progressstatus = appsmith.store.progressstatus == null ? storeValue('progressstatus', '0') : appsmith.store.progressstatus;\n    let retry = 0;\n    await FileUploadProcess.clearError();\n    await storeValue('closedisable', 'False');\n    if (appsmith.store.statename == 'Completed') {\n      statename = \"FileCheck\";\n      progressstatus = 0;\n      await storeValue('statename', statename);\n      await storeValue('progressstatus', progressstatus);\n    }\n    showModal('Progress_Modal');\n    let fileParams = {\n      \"ModifiedBy\": appsmith.user.email.split(\"@\")[0],\n      \"FileType\": FilePicker.files[0].name.split('.').pop().trim(),\n      \"SalesNumber\": Estimate_Table.selectedRow.SalesNumber,\n      \"SalesId\": Estimate_Table.selectedRow.Id,\n      \"EstimateId\": Estimate_Table.selectedRow.EId,\n      \"OriginalFileName\": FilePicker.files[0].name\n    };\n    let DriveId = FileUploadProcess.getValue('Estimate', 'DriveId');\n    let DriveItemId = FileUploadProcess.getValue('Estimate', 'DriveItemId');\n    while (statename != 'Completed') {\n      console.log(progressstatus);\n      console.log(statename);\n      if (statename != 'Error') {\n        await storeValue('statename', statename);\n        await storeValue('progressstatus', progressstatus);\n      }\n      switch (statename) {\n        case 'FileCheck':\n          let response = await SpecificFilesInDrive_Select.run({\n            'DriveId': DriveId,\n            'DriveItemId': DriveItemId,\n            'FileName': ActualFileName_Input.text\n          });\n          console.log(response, 'response');\n          if (response.value.length == 0) {\n            statename = 'UploadToSharePoint';\n            progressstatus = 25;\n          } else {\n            await FileUploadProcess.setError(\"File Name Not Unique! Enter different user \");\n            statename = 'Error';\n          }\n          break;\n        case 'DBInsert':\n          await EAttachments_Insert.run({\n            \"EId\": EId,\n            \"FileName\": appsmith.store.ActualFileName,\n            \"Comments\": Comments\n          }).then(() => EAttachments_Select.run({\n            \"EId\": EId\n          }));\n          statename = 'UpdateMetadata';\n          progressstatus = 75;\n          break;\n        case 'UploadToSharePoint':\n          let uploadurl = await UploadSession_Create.run({\n            'DriveId': DriveId,\n            'DriveItemId': DriveItemId,\n            'fileName': ActualFileName_Input.text\n          });\n          console.log('uploadurl is', uploadurl.uploadUrl);\n          let filesize = FilePicker.files[0].size;\n          let startindex = 0;\n          let responsecreate = \"\";\n          let upload_chunk = filesize;\n          let endindex = filesize - 1;\n          responsecreate = await FileUpload_Create.run(() => {}, () => {}, {\n            'uploadurl': UploadSession_Create.data.uploadUrl.split('//')[1],\n            'range': upload_chunk,\n            'startindex': startindex,\n            'endindex': endindex,\n            'filesize': filesize\n          });\n          console.log('responsecreate is', FileUpload_Create.data);\n          console.log('name', FileUpload_Create.data.name, \"Name\");\n          if (FileUpload_Create.data.length != 0) {\n            if (FileUpload_Create.data.name == ActualFileName_Input.text) {\n              statename = 'DBInsert';\n              progressstatus = 50;\n            }\n          } else if (retry == 0) {\n            retry++;\n            await FileUploadProcess.setError(\"Upload Failed in first attempt, attempting second\");\n          } else {\n            await FileUploadProcess.setError(\"Upload Failed!, File Upload Create Response not valid\");\n            statename = 'Error';\n          }\n          break;\n        case 'UpdateMetadata':\n          let responsemetadata = \"\";\n          responsemetadata = await FileUploadProcess.modifyFileMetadata(appsmith.store.ActualFileName, fileParams, 'SalesId', Estimate_Table.selectedRow.Id);\n          console.log('metadata', responsemetadata);\n          if (FileMetadata_Create.data.length != 0) {\n            if (FileMetadata_Create.data.SalesId == Estimate_Table.selectedRow.Id) {\n              statename = 'Completed';\n              progressstatus = 100;\n            }\n          } else if (retry == 0) {\n            retry++;\n            await FileUploadProcess.setError(\"First Attempt for Metadata is failed, Attempting Second\");\n          } else {\n            await FileUploadProcess.setError(\"Upload Failed!, Metadata create response not valid\");\n            statename = 'Error';\n          }\n          break;\n        case 'Error':\n          await storeValue('closedisable', 'True');\n          statename = 'Completed';\n          break;\n      }\n    }\n    await storeValue('statename', statename);\n    await storeValue('progressstatus', progressstatus);\n    if (appsmith.store.statename == 'Completed' && appsmith.store.ErrorMessage == '') {\n      await FileUploadProcess.runRefreshFunc().then(() => closeModal('Progress_Modal')).then(() => Promise.all([showModal('FileUpload_Modal'), EAttachments_Select.run({\n        \"EId\": Estimate_Table.selectedRow.EId\n      })])).then(() => showAlert('Estimate File Inserted', 'success')).then(() => FileUpload_Check.run({\n        'EId': Estimate_Table.selectedRow.EId\n      }));\n    }\n  } catch (err) {\n    if (err.message == \"Cannot read properties of undefined (reading 'data')\") {\n      Promise.all([FileUploadProcess.setError(\"Network got disconnected!, Please check your connection and retry\"), storeValue('closedisable', 'True'), showAlert('Network got disconnected!, Please check your connection and retry', 'error')]);\n    } else {\n      Promise.all([FileUploadProcess.setError(\"Upload Failed retry, \" + err.message), storeValue('closedisable', 'True'), showAlert(\"Upload Failed retry, \" + err.message, 'error')]);\n    }\n  }\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-08T11:42:38Z"},"publishedAction":{"name":"runCreateFile","fullyQualifiedName":"FileUploadProcess.runCreateFile","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","collectionId":"Estimate Process_FileUploadProcess","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async (EId, Comments) => {\n  try {\n    let statename = appsmith.store.statename == null ? storeValue('statename', 'FileCheck') : appsmith.store.statename;\n    let progressstatus = appsmith.store.progressstatus == null ? storeValue('progressstatus', '0') : appsmith.store.progressstatus;\n    let retry = 0;\n    await FileUploadProcess.clearError();\n    await storeValue('closedisable', 'False');\n    if (appsmith.store.statename == 'Completed') {\n      statename = \"FileCheck\";\n      progressstatus = 0;\n      await storeValue('statename', statename);\n      await storeValue('progressstatus', progressstatus);\n    }\n    showModal('Progress_Modal');\n    let fileParams = {\n      \"ModifiedBy\": appsmith.user.email.split(\"@\")[0],\n      \"FileType\": FilePicker.files[0].name.split('.').pop().trim(),\n      \"SalesNumber\": Estimate_Table.selectedRow.SalesNumber,\n      \"SalesId\": Estimate_Table.selectedRow.Id,\n      \"EstimateId\": Estimate_Table.selectedRow.EId,\n      \"OriginalFileName\": FilePicker.files[0].name\n    };\n    let DriveId = FileUploadProcess.getValue('Estimate', 'DriveId');\n    let DriveItemId = FileUploadProcess.getValue('Estimate', 'DriveItemId');\n    while (statename != 'Completed') {\n      console.log(progressstatus);\n      console.log(statename);\n      if (statename != 'Error') {\n        await storeValue('statename', statename);\n        await storeValue('progressstatus', progressstatus);\n      }\n      switch (statename) {\n        case 'FileCheck':\n          let response = await SpecificFilesInDrive_Select.run({\n            'DriveId': DriveId,\n            'DriveItemId': DriveItemId,\n            'FileName': ActualFileName_Input.text\n          });\n          console.log(response, 'response');\n          if (response.value.length == 0) {\n            statename = 'UploadToSharePoint';\n            progressstatus = 25;\n          } else {\n            await FileUploadProcess.setError(\"File Name Not Unique! Enter different user \");\n            statename = 'Error';\n          }\n          break;\n        case 'DBInsert':\n          await EAttachments_Insert.run({\n            \"EId\": EId,\n            \"FileName\": appsmith.store.ActualFileName,\n            \"Comments\": Comments\n          }).then(() => EAttachments_Select.run({\n            \"EId\": EId\n          }));\n          statename = 'UpdateMetadata';\n          progressstatus = 75;\n          break;\n        case 'UploadToSharePoint':\n          let uploadurl = await UploadSession_Create.run({\n            'DriveId': DriveId,\n            'DriveItemId': DriveItemId,\n            'fileName': ActualFileName_Input.text\n          });\n          console.log('uploadurl is', uploadurl.uploadUrl);\n          let filesize = FilePicker.files[0].size;\n          let startindex = 0;\n          let responsecreate = \"\";\n          let upload_chunk = filesize;\n          let endindex = filesize - 1;\n          responsecreate = await FileUpload_Create.run(() => {}, () => {}, {\n            'uploadurl': UploadSession_Create.data.uploadUrl.split('//')[1],\n            'range': upload_chunk,\n            'startindex': startindex,\n            'endindex': endindex,\n            'filesize': filesize\n          });\n          console.log('responsecreate is', FileUpload_Create.data);\n          console.log('name', FileUpload_Create.data.name, \"Name\");\n          if (FileUpload_Create.data.length != 0) {\n            if (FileUpload_Create.data.name == ActualFileName_Input.text) {\n              statename = 'DBInsert';\n              progressstatus = 50;\n            }\n          } else if (retry == 0) {\n            retry++;\n            await FileUploadProcess.setError(\"Upload Failed in first attempt, attempting second\");\n          } else {\n            await FileUploadProcess.setError(\"Upload Failed!, File Upload Create Response not valid\");\n            statename = 'Error';\n          }\n          break;\n        case 'UpdateMetadata':\n          let responsemetadata = \"\";\n          responsemetadata = await FileUploadProcess.modifyFileMetadata(appsmith.store.ActualFileName, fileParams, 'SalesId', Estimate_Table.selectedRow.Id);\n          console.log('metadata', responsemetadata);\n          if (FileMetadata_Create.data.length != 0) {\n            if (FileMetadata_Create.data.SalesId == Estimate_Table.selectedRow.Id) {\n              statename = 'Completed';\n              progressstatus = 100;\n            }\n          } else if (retry == 0) {\n            retry++;\n            await FileUploadProcess.setError(\"First Attempt for Metadata is failed, Attempting Second\");\n          } else {\n            await FileUploadProcess.setError(\"Upload Failed!, Metadata create response not valid\");\n            statename = 'Error';\n          }\n          break;\n        case 'Error':\n          await storeValue('closedisable', 'True');\n          statename = 'Completed';\n          break;\n      }\n    }\n    await storeValue('statename', statename);\n    await storeValue('progressstatus', progressstatus);\n    if (appsmith.store.statename == 'Completed' && appsmith.store.ErrorMessage == '') {\n      await FileUploadProcess.runRefreshFunc().then(() => closeModal('Progress_Modal')).then(() => Promise.all([showModal('FileUpload_Modal'), EAttachments_Select.run({\n        \"EId\": Estimate_Table.selectedRow.EId\n      })])).then(() => showAlert('Estimate File Inserted', 'success')).then(() => FileUpload_Check.run({\n        'EId': Estimate_Table.selectedRow.EId\n      }));\n    }\n  } catch (err) {\n    if (err.message == \"Cannot read properties of undefined (reading 'data')\") {\n      Promise.all([FileUploadProcess.setError(\"Network got disconnected!, Please check your connection and retry\"), storeValue('closedisable', 'True'), showAlert('Network got disconnected!, Please check your connection and retry', 'error')]);\n    } else {\n      Promise.all([FileUploadProcess.setError(\"Upload Failed retry, \" + err.message), storeValue('closedisable', 'True'), showAlert(\"Upload Failed retry, \" + err.message, 'error')]);\n    }\n  }\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"EId"},{"name":"Comments"}]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async (EId, Comments) => {\n  try {\n    let statename = appsmith.store.statename == null ? storeValue('statename', 'FileCheck') : appsmith.store.statename;\n    let progressstatus = appsmith.store.progressstatus == null ? storeValue('progressstatus', '0') : appsmith.store.progressstatus;\n    let retry = 0;\n    await FileUploadProcess.clearError();\n    await storeValue('closedisable', 'False');\n    if (appsmith.store.statename == 'Completed') {\n      statename = \"FileCheck\";\n      progressstatus = 0;\n      await storeValue('statename', statename);\n      await storeValue('progressstatus', progressstatus);\n    }\n    showModal('Progress_Modal');\n    let fileParams = {\n      \"ModifiedBy\": appsmith.user.email.split(\"@\")[0],\n      \"FileType\": FilePicker.files[0].name.split('.').pop().trim(),\n      \"SalesNumber\": Estimate_Table.selectedRow.SalesNumber,\n      \"SalesId\": Estimate_Table.selectedRow.Id,\n      \"EstimateId\": Estimate_Table.selectedRow.EId,\n      \"OriginalFileName\": FilePicker.files[0].name\n    };\n    let DriveId = FileUploadProcess.getValue('Estimate', 'DriveId');\n    let DriveItemId = FileUploadProcess.getValue('Estimate', 'DriveItemId');\n    while (statename != 'Completed') {\n      console.log(progressstatus);\n      console.log(statename);\n      if (statename != 'Error') {\n        await storeValue('statename', statename);\n        await storeValue('progressstatus', progressstatus);\n      }\n      switch (statename) {\n        case 'FileCheck':\n          let response = await SpecificFilesInDrive_Select.run({\n            'DriveId': DriveId,\n            'DriveItemId': DriveItemId,\n            'FileName': ActualFileName_Input.text\n          });\n          console.log(response, 'response');\n          if (response.value.length == 0) {\n            statename = 'UploadToSharePoint';\n            progressstatus = 25;\n          } else {\n            await FileUploadProcess.setError(\"File Name Not Unique! Enter different user \");\n            statename = 'Error';\n          }\n          break;\n        case 'DBInsert':\n          await EAttachments_Insert.run({\n            \"EId\": EId,\n            \"FileName\": appsmith.store.ActualFileName,\n            \"Comments\": Comments\n          }).then(() => EAttachments_Select.run({\n            \"EId\": EId\n          }));\n          statename = 'UpdateMetadata';\n          progressstatus = 75;\n          break;\n        case 'UploadToSharePoint':\n          let uploadurl = await UploadSession_Create.run({\n            'DriveId': DriveId,\n            'DriveItemId': DriveItemId,\n            'fileName': ActualFileName_Input.text\n          });\n          console.log('uploadurl is', uploadurl.uploadUrl);\n          let filesize = FilePicker.files[0].size;\n          let startindex = 0;\n          let responsecreate = \"\";\n          let upload_chunk = filesize;\n          let endindex = filesize - 1;\n          responsecreate = await FileUpload_Create.run(() => {}, () => {}, {\n            'uploadurl': UploadSession_Create.data.uploadUrl.split('//')[1],\n            'range': upload_chunk,\n            'startindex': startindex,\n            'endindex': endindex,\n            'filesize': filesize\n          });\n          console.log('responsecreate is', FileUpload_Create.data);\n          console.log('name', FileUpload_Create.data.name, \"Name\");\n          if (FileUpload_Create.data.length != 0) {\n            if (FileUpload_Create.data.name == ActualFileName_Input.text) {\n              statename = 'DBInsert';\n              progressstatus = 50;\n            }\n          } else if (retry == 0) {\n            retry++;\n            await FileUploadProcess.setError(\"Upload Failed in first attempt, attempting second\");\n          } else {\n            await FileUploadProcess.setError(\"Upload Failed!, File Upload Create Response not valid\");\n            statename = 'Error';\n          }\n          break;\n        case 'UpdateMetadata':\n          let responsemetadata = \"\";\n          responsemetadata = await FileUploadProcess.modifyFileMetadata(appsmith.store.ActualFileName, fileParams, 'SalesId', Estimate_Table.selectedRow.Id);\n          console.log('metadata', responsemetadata);\n          if (FileMetadata_Create.data.length != 0) {\n            if (FileMetadata_Create.data.SalesId == Estimate_Table.selectedRow.Id) {\n              statename = 'Completed';\n              progressstatus = 100;\n            }\n          } else if (retry == 0) {\n            retry++;\n            await FileUploadProcess.setError(\"First Attempt for Metadata is failed, Attempting Second\");\n          } else {\n            await FileUploadProcess.setError(\"Upload Failed!, Metadata create response not valid\");\n            statename = 'Error';\n          }\n          break;\n        case 'Error':\n          await storeValue('closedisable', 'True');\n          statename = 'Completed';\n          break;\n      }\n    }\n    await storeValue('statename', statename);\n    await storeValue('progressstatus', progressstatus);\n    if (appsmith.store.statename == 'Completed' && appsmith.store.ErrorMessage == '') {\n      await FileUploadProcess.runRefreshFunc().then(() => closeModal('Progress_Modal')).then(() => Promise.all([showModal('FileUpload_Modal'), EAttachments_Select.run({\n        \"EId\": Estimate_Table.selectedRow.EId\n      })])).then(() => showAlert('Estimate File Inserted', 'success')).then(() => FileUpload_Check.run({\n        'EId': Estimate_Table.selectedRow.EId\n      }));\n    }\n  } catch (err) {\n    if (err.message == \"Cannot read properties of undefined (reading 'data')\") {\n      Promise.all([FileUploadProcess.setError(\"Network got disconnected!, Please check your connection and retry\"), storeValue('closedisable', 'True'), showAlert('Network got disconnected!, Please check your connection and retry', 'error')]);\n    } else {\n      Promise.all([FileUploadProcess.setError(\"Upload Failed retry, \" + err.message), storeValue('closedisable', 'True'), showAlert(\"Upload Failed retry, \" + err.message, 'error')]);\n    }\n  }\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-08T11:42:38Z"},"id":"Estimate Process_FileUploadProcess.runCreateFile","deleted":false,"gitSyncId":"67f4d81e59d0ae34925978ba_67f50bae59d0ae3492597b8c"},{"pluginType":"JS","pluginId":"js-plugin","unpublishedAction":{"name":"runDownloadFile","fullyQualifiedName":"FileUploadProcess.runDownloadFile","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","collectionId":"Estimate Process_FileUploadProcess","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async () => {\n  let fileObject = await FileUploadProcess.getFileObject(ActualFileName_Input.text, appsmith.store.ESalesId, 'SalesId');\n  console.log(fileObject);\n  if (appsmith.store.fileerror == 'true') {\n    await showModal('ShowAlert_Modal');\n  } else {\n    let download_url = fileObject.driveItem[\"@microsoft.graph.downloadUrl\"];\n    let filename = fileObject.driveItem['name'];\n    let filetype = fileObject.driveItem[\"file\"][\"mimeType\"];\n    download(download_url, filename, filetype);\n    await showAlert('File Downloaded Successfully', 'success');\n  }\n}","selfReferencingDataPaths":[],"jsArguments":[]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async () => {\n  let fileObject = await FileUploadProcess.getFileObject(ActualFileName_Input.text, appsmith.store.ESalesId, 'SalesId');\n  console.log(fileObject);\n  if (appsmith.store.fileerror == 'true') {\n    await showModal('ShowAlert_Modal');\n  } else {\n    let download_url = fileObject.driveItem[\"@microsoft.graph.downloadUrl\"];\n    let filename = fileObject.driveItem['name'];\n    let filetype = fileObject.driveItem[\"file\"][\"mimeType\"];\n    download(download_url, filename, filetype);\n    await showAlert('File Downloaded Successfully', 'success');\n  }\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-08T11:42:38Z"},"publishedAction":{"name":"runDownloadFile","fullyQualifiedName":"FileUploadProcess.runDownloadFile","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","collectionId":"Estimate Process_FileUploadProcess","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async () => {\n  let fileObject = await FileUploadProcess.getFileObject(ActualFileName_Input.text, appsmith.store.ESalesId, 'SalesId');\n  console.log(fileObject);\n  if (appsmith.store.fileerror == 'true') {\n    await showModal('ShowAlert_Modal');\n  } else {\n    let download_url = fileObject.driveItem[\"@microsoft.graph.downloadUrl\"];\n    let filename = fileObject.driveItem['name'];\n    let filetype = fileObject.driveItem[\"file\"][\"mimeType\"];\n    download(download_url, filename, filetype);\n    await showAlert('File Downloaded Successfully', 'success');\n  }\n}","selfReferencingDataPaths":[],"jsArguments":[]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async () => {\n  let fileObject = await FileUploadProcess.getFileObject(ActualFileName_Input.text, appsmith.store.ESalesId, 'SalesId');\n  console.log(fileObject);\n  if (appsmith.store.fileerror == 'true') {\n    await showModal('ShowAlert_Modal');\n  } else {\n    let download_url = fileObject.driveItem[\"@microsoft.graph.downloadUrl\"];\n    let filename = fileObject.driveItem['name'];\n    let filetype = fileObject.driveItem[\"file\"][\"mimeType\"];\n    download(download_url, filename, filetype);\n    await showAlert('File Downloaded Successfully', 'success');\n  }\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-08T11:42:38Z"},"id":"Estimate Process_FileUploadProcess.runDownloadFile","deleted":false,"gitSyncId":"67f4d81e59d0ae34925978ba_67f50bae59d0ae3492597b7e"},{"pluginType":"JS","pluginId":"js-plugin","unpublishedAction":{"name":"modifyMetadata","fullyQualifiedName":"FileUploadProcess.modifyMetadata","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","collectionId":"Estimate Process_FileUploadProcess","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async (fileParams, Number, NumberName) => {\n  let response = \"\";\n  let metaresponse = \"\";\n  let siteId = \"\";\n  let listId = \"\";\n  Promise.all([siteId = FileUploadProcess.getValue('Estimate', 'SharepointId'), listId = FileUploadProcess.getValue('Estimate', 'ListId')]);\n  let params = {\n    'siteId': siteId,\n    'listId': listId,\n    'Number': Number,\n    'NumberName': NumberName\n  };\n  response = await ListItemsDelete_Select.run(params);\n  if (response.value.length == 0) {\n    await showAlert('Update failed', 'error');\n  }\n  let data = [];\n  for (const eachFile of response.value) {\n    let query_params = {\n      'siteId': FileUploadProcess.getValue('Estimate', 'SharepointId'),\n      'listId': FileUploadProcess.getValue('Estimate', 'ListId'),\n      'listItemId': eachFile.id,\n      'fileParams': fileParams\n    };\n    data.push(query_params);\n  }\n  const metadata = data.map(data => FileMetadata_Create.run(data));\n  return Promise.all(metadata);\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"fileParams"},{"name":"Number"},{"name":"NumberName"}]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async (fileParams, Number, NumberName) => {\n  let response = \"\";\n  let metaresponse = \"\";\n  let siteId = \"\";\n  let listId = \"\";\n  Promise.all([siteId = FileUploadProcess.getValue('Estimate', 'SharepointId'), listId = FileUploadProcess.getValue('Estimate', 'ListId')]);\n  let params = {\n    'siteId': siteId,\n    'listId': listId,\n    'Number': Number,\n    'NumberName': NumberName\n  };\n  response = await ListItemsDelete_Select.run(params);\n  if (response.value.length == 0) {\n    await showAlert('Update failed', 'error');\n  }\n  let data = [];\n  for (const eachFile of response.value) {\n    let query_params = {\n      'siteId': FileUploadProcess.getValue('Estimate', 'SharepointId'),\n      'listId': FileUploadProcess.getValue('Estimate', 'ListId'),\n      'listItemId': eachFile.id,\n      'fileParams': fileParams\n    };\n    data.push(query_params);\n  }\n  const metadata = data.map(data => FileMetadata_Create.run(data));\n  return Promise.all(metadata);\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-08T11:42:38Z"},"publishedAction":{"name":"modifyMetadata","fullyQualifiedName":"FileUploadProcess.modifyMetadata","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","collectionId":"Estimate Process_FileUploadProcess","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async (fileParams, Number, NumberName) => {\n  let response = \"\";\n  let metaresponse = \"\";\n  let siteId = \"\";\n  let listId = \"\";\n  Promise.all([siteId = FileUploadProcess.getValue('Estimate', 'SharepointId'), listId = FileUploadProcess.getValue('Estimate', 'ListId')]);\n  let params = {\n    'siteId': siteId,\n    'listId': listId,\n    'Number': Number,\n    'NumberName': NumberName\n  };\n  response = await ListItemsDelete_Select.run(params);\n  if (response.value.length == 0) {\n    await showAlert('Update failed', 'error');\n  }\n  let data = [];\n  for (const eachFile of response.value) {\n    let query_params = {\n      'siteId': FileUploadProcess.getValue('Estimate', 'SharepointId'),\n      'listId': FileUploadProcess.getValue('Estimate', 'ListId'),\n      'listItemId': eachFile.id,\n      'fileParams': fileParams\n    };\n    data.push(query_params);\n  }\n  const metadata = data.map(data => FileMetadata_Create.run(data));\n  return Promise.all(metadata);\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"fileParams"},{"name":"Number"},{"name":"NumberName"}]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async (fileParams, Number, NumberName) => {\n  let response = \"\";\n  let metaresponse = \"\";\n  let siteId = \"\";\n  let listId = \"\";\n  Promise.all([siteId = FileUploadProcess.getValue('Estimate', 'SharepointId'), listId = FileUploadProcess.getValue('Estimate', 'ListId')]);\n  let params = {\n    'siteId': siteId,\n    'listId': listId,\n    'Number': Number,\n    'NumberName': NumberName\n  };\n  response = await ListItemsDelete_Select.run(params);\n  if (response.value.length == 0) {\n    await showAlert('Update failed', 'error');\n  }\n  let data = [];\n  for (const eachFile of response.value) {\n    let query_params = {\n      'siteId': FileUploadProcess.getValue('Estimate', 'SharepointId'),\n      'listId': FileUploadProcess.getValue('Estimate', 'ListId'),\n      'listItemId': eachFile.id,\n      'fileParams': fileParams\n    };\n    data.push(query_params);\n  }\n  const metadata = data.map(data => FileMetadata_Create.run(data));\n  return Promise.all(metadata);\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-08T11:42:38Z"},"id":"Estimate Process_FileUploadProcess.modifyMetadata","deleted":false,"gitSyncId":"67f4d81e59d0ae34925978ba_67f50bae59d0ae3492597b8a"},{"pluginType":"JS","pluginId":"js-plugin","unpublishedAction":{"name":"disableCreateButton","fullyQualifiedName":"GlobalVariables.disableCreateButton","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","organizationId":"62a1cace93e9481dacb0f741","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","collectionId":"Estimate Process_GlobalVariables","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"formWidgets => {\n  return GlobalVariables.validateForm(formWidgets) === false;\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"formWidgets"}],"isAsync":false},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["formWidgets => {\n  return GlobalVariables.validateForm(formWidgets) === false;\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"publishedAction":{"name":"disableCreateButton","fullyQualifiedName":"GlobalVariables.disableCreateButton","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","organizationId":"62a1cace93e9481dacb0f741","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","collectionId":"Estimate Process_GlobalVariables","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"formWidgets => {\n  return GlobalVariables.validateForm(formWidgets) === false;\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"formWidgets"}],"isAsync":false},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["formWidgets => {\n  return GlobalVariables.validateForm(formWidgets) === false;\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"id":"Estimate Process_GlobalVariables.disableCreateButton","deleted":false,"gitSyncId":"62c6dd94aa3be20812d63927_62c6dd94aa3be20812d6394c"},{"pluginType":"JS","pluginId":"js-plugin","unpublishedAction":{"name":"onUploadModalClick","fullyQualifiedName":"FileUploadProcess.onUploadModalClick","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","collectionId":"Estimate Process_FileUploadProcess","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async () => {\n  let tabledata = [];\n  let siteId = \"\";\n  let listId = \"\";\n  Promise.all([storeValue('activetab', 'Empty Tab'), FileUploadProcess.testRunRefreshFunc()]);\n  Promise.all([siteId = FileUploadProcess.getValue('Estimate', 'SharepointId'), listId = FileUploadProcess.getValue('Estimate', 'ListId')]);\n  let data = await MetaData_Select.run({\n    \"siteId\": siteId,\n    \"listId\": listId,\n    \"NumberName\": \"SalesId\",\n    \"Number\": appsmith.store.ESalesId\n  });\n  console.log(data);\n  for (let i = 0; i < data.value.length; i++) {\n    console.log(data.value[i].fields[\"LinkFilename\"]);\n    if (data.value[i].fields[\"LinkFilename\"] == EstimateAttachments_Table.selectedRow.FileName) {\n      tabledata.push({\n        \"Field\": \"SalesNumber\",\n        \"Value\": data.value[i].fields['SalesNumber']\n      }, {\n        \"Field\": \"FileType\",\n        \"Value\": data.value[i].fields['FileType']\n      }, {\n        \"Field\": \"ModifiedBy\",\n        \"Value\": data.value[i].fields['ModifiedBy']\n      }, {\n        \"Field\": 'SalesId',\n        \"Value\": data.value[i].fields['SalesId']\n      }, {\n        \"Field\": 'EstimateId',\n        \"Value\": data.value[i].fields['EstimateId']\n      }, {\n        \"Field\": \"OriginalFileName\",\n        \"Value\": data.value[i].fields['OriginalFileName']\n      });\n    }\n  }\n  Promise.all([storeValue('ActualFileName', EstimateAttachments_Table.selectedRow.FileName), storeValue('tabledata', tabledata), storeValue('statename', 'Completed'), storeValue('disable', false)]);\n}","selfReferencingDataPaths":[],"jsArguments":[]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async () => {\n  let tabledata = [];\n  let siteId = \"\";\n  let listId = \"\";\n  Promise.all([storeValue('activetab', 'Empty Tab'), FileUploadProcess.testRunRefreshFunc()]);\n  Promise.all([siteId = FileUploadProcess.getValue('Estimate', 'SharepointId'), listId = FileUploadProcess.getValue('Estimate', 'ListId')]);\n  let data = await MetaData_Select.run({\n    \"siteId\": siteId,\n    \"listId\": listId,\n    \"NumberName\": \"SalesId\",\n    \"Number\": appsmith.store.ESalesId\n  });\n  console.log(data);\n  for (let i = 0; i < data.value.length; i++) {\n    console.log(data.value[i].fields[\"LinkFilename\"]);\n    if (data.value[i].fields[\"LinkFilename\"] == EstimateAttachments_Table.selectedRow.FileName) {\n      tabledata.push({\n        \"Field\": \"SalesNumber\",\n        \"Value\": data.value[i].fields['SalesNumber']\n      }, {\n        \"Field\": \"FileType\",\n        \"Value\": data.value[i].fields['FileType']\n      }, {\n        \"Field\": \"ModifiedBy\",\n        \"Value\": data.value[i].fields['ModifiedBy']\n      }, {\n        \"Field\": 'SalesId',\n        \"Value\": data.value[i].fields['SalesId']\n      }, {\n        \"Field\": 'EstimateId',\n        \"Value\": data.value[i].fields['EstimateId']\n      }, {\n        \"Field\": \"OriginalFileName\",\n        \"Value\": data.value[i].fields['OriginalFileName']\n      });\n    }\n  }\n  Promise.all([storeValue('ActualFileName', EstimateAttachments_Table.selectedRow.FileName), storeValue('tabledata', tabledata), storeValue('statename', 'Completed'), storeValue('disable', false)]);\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-08T11:42:38Z"},"publishedAction":{"name":"onUploadModalClick","fullyQualifiedName":"FileUploadProcess.onUploadModalClick","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","collectionId":"Estimate Process_FileUploadProcess","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async () => {\n  let tabledata = [];\n  let siteId = \"\";\n  let listId = \"\";\n  Promise.all([storeValue('activetab', 'Empty Tab'), FileUploadProcess.testRunRefreshFunc()]);\n  Promise.all([siteId = FileUploadProcess.getValue('Estimate', 'SharepointId'), listId = FileUploadProcess.getValue('Estimate', 'ListId')]);\n  let data = await MetaData_Select.run({\n    \"siteId\": siteId,\n    \"listId\": listId,\n    \"NumberName\": \"SalesId\",\n    \"Number\": appsmith.store.ESalesId\n  });\n  console.log(data);\n  for (let i = 0; i < data.value.length; i++) {\n    console.log(data.value[i].fields[\"LinkFilename\"]);\n    if (data.value[i].fields[\"LinkFilename\"] == EstimateAttachments_Table.selectedRow.FileName) {\n      tabledata.push({\n        \"Field\": \"SalesNumber\",\n        \"Value\": data.value[i].fields['SalesNumber']\n      }, {\n        \"Field\": \"FileType\",\n        \"Value\": data.value[i].fields['FileType']\n      }, {\n        \"Field\": \"ModifiedBy\",\n        \"Value\": data.value[i].fields['ModifiedBy']\n      }, {\n        \"Field\": 'SalesId',\n        \"Value\": data.value[i].fields['SalesId']\n      }, {\n        \"Field\": 'EstimateId',\n        \"Value\": data.value[i].fields['EstimateId']\n      }, {\n        \"Field\": \"OriginalFileName\",\n        \"Value\": data.value[i].fields['OriginalFileName']\n      });\n    }\n  }\n  Promise.all([storeValue('ActualFileName', EstimateAttachments_Table.selectedRow.FileName), storeValue('tabledata', tabledata), storeValue('statename', 'Completed'), storeValue('disable', false)]);\n}","selfReferencingDataPaths":[],"jsArguments":[]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async () => {\n  let tabledata = [];\n  let siteId = \"\";\n  let listId = \"\";\n  Promise.all([storeValue('activetab', 'Empty Tab'), FileUploadProcess.testRunRefreshFunc()]);\n  Promise.all([siteId = FileUploadProcess.getValue('Estimate', 'SharepointId'), listId = FileUploadProcess.getValue('Estimate', 'ListId')]);\n  let data = await MetaData_Select.run({\n    \"siteId\": siteId,\n    \"listId\": listId,\n    \"NumberName\": \"SalesId\",\n    \"Number\": appsmith.store.ESalesId\n  });\n  console.log(data);\n  for (let i = 0; i < data.value.length; i++) {\n    console.log(data.value[i].fields[\"LinkFilename\"]);\n    if (data.value[i].fields[\"LinkFilename\"] == EstimateAttachments_Table.selectedRow.FileName) {\n      tabledata.push({\n        \"Field\": \"SalesNumber\",\n        \"Value\": data.value[i].fields['SalesNumber']\n      }, {\n        \"Field\": \"FileType\",\n        \"Value\": data.value[i].fields['FileType']\n      }, {\n        \"Field\": \"ModifiedBy\",\n        \"Value\": data.value[i].fields['ModifiedBy']\n      }, {\n        \"Field\": 'SalesId',\n        \"Value\": data.value[i].fields['SalesId']\n      }, {\n        \"Field\": 'EstimateId',\n        \"Value\": data.value[i].fields['EstimateId']\n      }, {\n        \"Field\": \"OriginalFileName\",\n        \"Value\": data.value[i].fields['OriginalFileName']\n      });\n    }\n  }\n  Promise.all([storeValue('ActualFileName', EstimateAttachments_Table.selectedRow.FileName), storeValue('tabledata', tabledata), storeValue('statename', 'Completed'), storeValue('disable', false)]);\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-08T11:42:38Z"},"id":"Estimate Process_FileUploadProcess.onUploadModalClick","deleted":false,"gitSyncId":"67f4d81e59d0ae34925978ba_67f50bae59d0ae3492597b76"},{"pluginType":"JS","pluginId":"js-plugin","unpublishedAction":{"name":"getFileName","fullyQualifiedName":"FileUploadProcess.getFileName","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","collectionId":"Estimate Process_FileUploadProcess","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async () => {\n  await FileUploadProcess.clearError();\n  if (EstimateAttachments_Table.selectedRowIndex != -1) {\n    return await storeValue('ActualFileName', EstimateAttachments_Table.selectedRow.FileName);\n  }\n  if (FilePicker.files.length == 0) {\n    return await storeValue('ActualFileName', \"\");\n  }\n  if (UserText_Input.text == \"\" || UserText_Input.isValid != true) {\n    await FileUploadProcess.setError(\"UserText is not provided or is not valid\");\n    return await storeValue('ActualFileName', \"\");\n  }\n  let file_name_temp = \"\";\n  file_name_temp = Estimate_Table.selectedRow.EId.toString().replace(/[^a-zA-Z0-9]/g, '').toString().trim() + \"_\" + UserText_Input.text.toString() + \".\" + FilePicker.files[0].name.split('.').pop().trim();\n  await FileUploadProcess.clearError();\n  return await storeValue('ActualFileName', file_name_temp.split(\" \").join(\"_\"));\n}","selfReferencingDataPaths":[],"jsArguments":[]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async () => {\n  await FileUploadProcess.clearError();\n  if (EstimateAttachments_Table.selectedRowIndex != -1) {\n    return await storeValue('ActualFileName', EstimateAttachments_Table.selectedRow.FileName);\n  }\n  if (FilePicker.files.length == 0) {\n    return await storeValue('ActualFileName', \"\");\n  }\n  if (UserText_Input.text == \"\" || UserText_Input.isValid != true) {\n    await FileUploadProcess.setError(\"UserText is not provided or is not valid\");\n    return await storeValue('ActualFileName', \"\");\n  }\n  let file_name_temp = \"\";\n  file_name_temp = Estimate_Table.selectedRow.EId.toString().replace(/[^a-zA-Z0-9]/g, '').toString().trim() + \"_\" + UserText_Input.text.toString() + \".\" + FilePicker.files[0].name.split('.').pop().trim();\n  await FileUploadProcess.clearError();\n  return await storeValue('ActualFileName', file_name_temp.split(\" \").join(\"_\"));\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-08T11:42:38Z"},"publishedAction":{"name":"getFileName","fullyQualifiedName":"FileUploadProcess.getFileName","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","collectionId":"Estimate Process_FileUploadProcess","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async () => {\n  await FileUploadProcess.clearError();\n  if (EstimateAttachments_Table.selectedRowIndex != -1) {\n    return await storeValue('ActualFileName', EstimateAttachments_Table.selectedRow.FileName);\n  }\n  if (FilePicker.files.length == 0) {\n    return await storeValue('ActualFileName', \"\");\n  }\n  if (UserText_Input.text == \"\" || UserText_Input.isValid != true) {\n    await FileUploadProcess.setError(\"UserText is not provided or is not valid\");\n    return await storeValue('ActualFileName', \"\");\n  }\n  let file_name_temp = \"\";\n  file_name_temp = Estimate_Table.selectedRow.EId.toString().replace(/[^a-zA-Z0-9]/g, '').toString().trim() + \"_\" + UserText_Input.text.toString() + \".\" + FilePicker.files[0].name.split('.').pop().trim();\n  await FileUploadProcess.clearError();\n  return await storeValue('ActualFileName', file_name_temp.split(\" \").join(\"_\"));\n}","selfReferencingDataPaths":[],"jsArguments":[]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async () => {\n  await FileUploadProcess.clearError();\n  if (EstimateAttachments_Table.selectedRowIndex != -1) {\n    return await storeValue('ActualFileName', EstimateAttachments_Table.selectedRow.FileName);\n  }\n  if (FilePicker.files.length == 0) {\n    return await storeValue('ActualFileName', \"\");\n  }\n  if (UserText_Input.text == \"\" || UserText_Input.isValid != true) {\n    await FileUploadProcess.setError(\"UserText is not provided or is not valid\");\n    return await storeValue('ActualFileName', \"\");\n  }\n  let file_name_temp = \"\";\n  file_name_temp = Estimate_Table.selectedRow.EId.toString().replace(/[^a-zA-Z0-9]/g, '').toString().trim() + \"_\" + UserText_Input.text.toString() + \".\" + FilePicker.files[0].name.split('.').pop().trim();\n  await FileUploadProcess.clearError();\n  return await storeValue('ActualFileName', file_name_temp.split(\" \").join(\"_\"));\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-08T11:42:38Z"},"id":"Estimate Process_FileUploadProcess.getFileName","deleted":false,"gitSyncId":"67f4d81e59d0ae34925978ba_67f50bae59d0ae3492597b7a"},{"pluginType":"JS","pluginId":"js-plugin","unpublishedAction":{"name":"insertEstimateItem","fullyQualifiedName":"PageObjects.insertEstimateItem","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","organizationId":"62a1cace93e9481dacb0f741","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","collectionId":"Estimate Process_PageObjects","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async (estimateId, estItemNumber, estItemDes, estItemQty, estItemAmt) => {\n  await EstimateItem_Insert.run({\n    \"estimateId\": estimateId,\n    \"estItemNumber\": estItemNumber,\n    \"estItemDes\": estItemDes,\n    \"estItemQty\": estItemQty,\n    \"estItemAmt\": estItemAmt\n  }).then(() => {\n    return Promise.all([EstimateItem_Select.run({\n      'estimateId': estimateId\n    })]);\n  }).then(() => {\n    return GlobalVariables.resetWidgets([\"EstimateDetails_Container\", \"EstimateItem_Table\"]);\n  }).then(res => showAlert(\"Insert Done\", \"success\")).catch(error => showAlert(error.toString(), \"error\"));\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"estimateId"},{"name":"estItemNumber"},{"name":"estItemDes"},{"name":"estItemQty"},{"name":"estItemAmt"}],"isAsync":true},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async (estimateId, estItemNumber, estItemDes, estItemQty, estItemAmt) => {\n  await EstimateItem_Insert.run({\n    \"estimateId\": estimateId,\n    \"estItemNumber\": estItemNumber,\n    \"estItemDes\": estItemDes,\n    \"estItemQty\": estItemQty,\n    \"estItemAmt\": estItemAmt\n  }).then(() => {\n    return Promise.all([EstimateItem_Select.run({\n      'estimateId': estimateId\n    })]);\n  }).then(() => {\n    return GlobalVariables.resetWidgets([\"EstimateDetails_Container\", \"EstimateItem_Table\"]);\n  }).then(res => showAlert(\"Insert Done\", \"success\")).catch(error => showAlert(error.toString(), \"error\"));\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"publishedAction":{"name":"insertEstimateItem","fullyQualifiedName":"PageObjects.insertEstimateItem","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","organizationId":"62a1cace93e9481dacb0f741","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","collectionId":"Estimate Process_PageObjects","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async (estimateId, estItemNumber, estItemDes, estItemQty, estItemAmt) => {\n  await EstimateItem_Insert.run({\n    \"estimateId\": estimateId,\n    \"estItemNumber\": estItemNumber,\n    \"estItemDes\": estItemDes,\n    \"estItemQty\": estItemQty,\n    \"estItemAmt\": estItemAmt\n  }).then(() => {\n    return Promise.all([EstimateItem_Select.run({\n      'estimateId': estimateId\n    })]);\n  }).then(() => {\n    return GlobalVariables.resetWidgets([\"EstimateDetails_Container\", \"EstimateItem_Table\"]);\n  }).then(res => showAlert(\"Insert Done\", \"success\")).catch(error => showAlert(error.toString(), \"error\"));\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"estimateId"},{"name":"estItemNumber"},{"name":"estItemDes"},{"name":"estItemQty"},{"name":"estItemAmt"}],"isAsync":true},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async (estimateId, estItemNumber, estItemDes, estItemQty, estItemAmt) => {\n  await EstimateItem_Insert.run({\n    \"estimateId\": estimateId,\n    \"estItemNumber\": estItemNumber,\n    \"estItemDes\": estItemDes,\n    \"estItemQty\": estItemQty,\n    \"estItemAmt\": estItemAmt\n  }).then(() => {\n    return Promise.all([EstimateItem_Select.run({\n      'estimateId': estimateId\n    })]);\n  }).then(() => {\n    return GlobalVariables.resetWidgets([\"EstimateDetails_Container\", \"EstimateItem_Table\"]);\n  }).then(res => showAlert(\"Insert Done\", \"success\")).catch(error => showAlert(error.toString(), \"error\"));\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"id":"Estimate Process_PageObjects.insertEstimateItem","deleted":false,"gitSyncId":"62c6dd94aa3be20812d63927_62c6dd94aa3be20812d63939"},{"pluginType":"JS","pluginId":"js-plugin","unpublishedAction":{"name":"runRefreshFunc","fullyQualifiedName":"FileUploadProcess.runRefreshFunc","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","collectionId":"Estimate Process_FileUploadProcess","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async () => {\n  Promise.all([GlobalVariables.resetForm(['UserText_Input', 'FileComments_Input', 'FilePicker']), storeValue('ActualFileName', \"\"), storeValue('disable', false), FileUploadProcess.clearError()]);\n}","selfReferencingDataPaths":[],"jsArguments":[]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async () => {\n  Promise.all([GlobalVariables.resetForm(['UserText_Input', 'FileComments_Input', 'FilePicker']), storeValue('ActualFileName', \"\"), storeValue('disable', false), FileUploadProcess.clearError()]);\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-08T11:42:38Z"},"publishedAction":{"name":"runRefreshFunc","fullyQualifiedName":"FileUploadProcess.runRefreshFunc","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","collectionId":"Estimate Process_FileUploadProcess","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async () => {\n  Promise.all([GlobalVariables.resetForm(['UserText_Input', 'FileComments_Input', 'FilePicker']), storeValue('ActualFileName', \"\"), storeValue('disable', false), FileUploadProcess.clearError()]);\n}","selfReferencingDataPaths":[],"jsArguments":[]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async () => {\n  Promise.all([GlobalVariables.resetForm(['UserText_Input', 'FileComments_Input', 'FilePicker']), storeValue('ActualFileName', \"\"), storeValue('disable', false), FileUploadProcess.clearError()]);\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-08T11:42:38Z"},"id":"Estimate Process_FileUploadProcess.runRefreshFunc","deleted":false,"gitSyncId":"67f4d81e59d0ae34925978ba_67f50bae59d0ae3492597b92"},{"pluginType":"JS","pluginId":"js-plugin","unpublishedAction":{"name":"selectInitialState","fullyQualifiedName":"PageObjects.selectInitialState","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","organizationId":"62a1cace93e9481dacb0f741","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","collectionId":"Estimate Process_PageObjects","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async () => {\n  await Process.clickState(\"Prepare\", Estimate_Select);\n}","selfReferencingDataPaths":[],"jsArguments":[],"isAsync":true},"executeOnLoad":true,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async () => {\n  await Process.clickState(\"Prepare\", Estimate_Select);\n}"],"userSetOnLoad":true,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"publishedAction":{"name":"selectInitialState","fullyQualifiedName":"PageObjects.selectInitialState","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","organizationId":"62a1cace93e9481dacb0f741","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","collectionId":"Estimate Process_PageObjects","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async () => {\n  await Process.clickState(\"Prepare\", Estimate_Select);\n}","selfReferencingDataPaths":[],"jsArguments":[],"isAsync":true},"executeOnLoad":true,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async () => {\n  await Process.clickState(\"Prepare\", Estimate_Select);\n}"],"userSetOnLoad":true,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"id":"Estimate Process_PageObjects.selectInitialState","deleted":false,"gitSyncId":"62c6dd94aa3be20812d63927_62c6dd94aa3be20812d63956"},{"pluginType":"JS","pluginId":"js-plugin","unpublishedAction":{"name":"runDeleteFile","fullyQualifiedName":"FileUploadProcess.runDeleteFile","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","collectionId":"Estimate Process_FileUploadProcess","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async FileId => {\n  try {\n    let fileObject = \"\";\n    await FileUploadProcess.clearError();\n    fileObject = await FileUploadProcess.getFileObject(appsmith.store.ActualFileName, Estimate_Table.selectedRow.Id, 'SalesId');\n    if (appsmith.store.ErrorOccured === true) {\n      await showAlert(\"File not found in sharepoint, Deleting in database\");\n      await FileUploadProcess.setError(\"No files exist!\");\n    } else {\n      console.log(fileObject);\n      let driveId = FileUploadProcess.getValue('Estimate', 'DriveId');\n      let itemId = fileObject.driveItem[\"id\"];\n      let response = \"\";\n      response = await File_Delete.run({\n        \"driveId\": driveId,\n        \"itemId\": itemId\n      });\n    }\n    await EAttachments_Delete.run({\n      \"FileId\": FileId\n    }).then(() => EAttachments_Select.run({\n      \"EId\": Estimate_Table.selectedRow.EId\n    })).then(() => storeValue('ActualFileName', '')).then(() => showAlert(\"Estimate File Deleted\", \"success\")).then(() => FileUpload_Check.run({\n      \"EId\": Estimate_Table.selectedRow.EId\n    }));\n  } catch (err) {\n    if (err.message == \"Cannot read properties of undefined (reading 'data')\") {\n      Promise.all([FileUploadProcess.setError(\"Network got disconnected!, Please check your connection and retry\"), storeValue('closedisable', 'True'), showAlert('Network got disconnected!, Please check your connection and retry', 'error')]);\n    } else {\n      Promise.all([FileUploadProcess.setError(\"Delete Failed retry, \" + err.message), storeValue('closedisable', 'True'), showAlert(\"Delete Failed retry, \" + err.message, 'error')]);\n    }\n  }\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"FileId"}]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async FileId => {\n  try {\n    let fileObject = \"\";\n    await FileUploadProcess.clearError();\n    fileObject = await FileUploadProcess.getFileObject(appsmith.store.ActualFileName, Estimate_Table.selectedRow.Id, 'SalesId');\n    if (appsmith.store.ErrorOccured === true) {\n      await showAlert(\"File not found in sharepoint, Deleting in database\");\n      await FileUploadProcess.setError(\"No files exist!\");\n    } else {\n      console.log(fileObject);\n      let driveId = FileUploadProcess.getValue('Estimate', 'DriveId');\n      let itemId = fileObject.driveItem[\"id\"];\n      let response = \"\";\n      response = await File_Delete.run({\n        \"driveId\": driveId,\n        \"itemId\": itemId\n      });\n    }\n    await EAttachments_Delete.run({\n      \"FileId\": FileId\n    }).then(() => EAttachments_Select.run({\n      \"EId\": Estimate_Table.selectedRow.EId\n    })).then(() => storeValue('ActualFileName', '')).then(() => showAlert(\"Estimate File Deleted\", \"success\")).then(() => FileUpload_Check.run({\n      \"EId\": Estimate_Table.selectedRow.EId\n    }));\n  } catch (err) {\n    if (err.message == \"Cannot read properties of undefined (reading 'data')\") {\n      Promise.all([FileUploadProcess.setError(\"Network got disconnected!, Please check your connection and retry\"), storeValue('closedisable', 'True'), showAlert('Network got disconnected!, Please check your connection and retry', 'error')]);\n    } else {\n      Promise.all([FileUploadProcess.setError(\"Delete Failed retry, \" + err.message), storeValue('closedisable', 'True'), showAlert(\"Delete Failed retry, \" + err.message, 'error')]);\n    }\n  }\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-08T11:42:38Z"},"publishedAction":{"name":"runDeleteFile","fullyQualifiedName":"FileUploadProcess.runDeleteFile","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","collectionId":"Estimate Process_FileUploadProcess","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async FileId => {\n  try {\n    let fileObject = \"\";\n    await FileUploadProcess.clearError();\n    fileObject = await FileUploadProcess.getFileObject(appsmith.store.ActualFileName, Estimate_Table.selectedRow.Id, 'SalesId');\n    if (appsmith.store.ErrorOccured === true) {\n      await showAlert(\"File not found in sharepoint, Deleting in database\");\n      await FileUploadProcess.setError(\"No files exist!\");\n    } else {\n      console.log(fileObject);\n      let driveId = FileUploadProcess.getValue('Estimate', 'DriveId');\n      let itemId = fileObject.driveItem[\"id\"];\n      let response = \"\";\n      response = await File_Delete.run({\n        \"driveId\": driveId,\n        \"itemId\": itemId\n      });\n    }\n    await EAttachments_Delete.run({\n      \"FileId\": FileId\n    }).then(() => EAttachments_Select.run({\n      \"EId\": Estimate_Table.selectedRow.EId\n    })).then(() => storeValue('ActualFileName', '')).then(() => showAlert(\"Estimate File Deleted\", \"success\")).then(() => FileUpload_Check.run({\n      \"EId\": Estimate_Table.selectedRow.EId\n    }));\n  } catch (err) {\n    if (err.message == \"Cannot read properties of undefined (reading 'data')\") {\n      Promise.all([FileUploadProcess.setError(\"Network got disconnected!, Please check your connection and retry\"), storeValue('closedisable', 'True'), showAlert('Network got disconnected!, Please check your connection and retry', 'error')]);\n    } else {\n      Promise.all([FileUploadProcess.setError(\"Delete Failed retry, \" + err.message), storeValue('closedisable', 'True'), showAlert(\"Delete Failed retry, \" + err.message, 'error')]);\n    }\n  }\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"FileId"}]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async FileId => {\n  try {\n    let fileObject = \"\";\n    await FileUploadProcess.clearError();\n    fileObject = await FileUploadProcess.getFileObject(appsmith.store.ActualFileName, Estimate_Table.selectedRow.Id, 'SalesId');\n    if (appsmith.store.ErrorOccured === true) {\n      await showAlert(\"File not found in sharepoint, Deleting in database\");\n      await FileUploadProcess.setError(\"No files exist!\");\n    } else {\n      console.log(fileObject);\n      let driveId = FileUploadProcess.getValue('Estimate', 'DriveId');\n      let itemId = fileObject.driveItem[\"id\"];\n      let response = \"\";\n      response = await File_Delete.run({\n        \"driveId\": driveId,\n        \"itemId\": itemId\n      });\n    }\n    await EAttachments_Delete.run({\n      \"FileId\": FileId\n    }).then(() => EAttachments_Select.run({\n      \"EId\": Estimate_Table.selectedRow.EId\n    })).then(() => storeValue('ActualFileName', '')).then(() => showAlert(\"Estimate File Deleted\", \"success\")).then(() => FileUpload_Check.run({\n      \"EId\": Estimate_Table.selectedRow.EId\n    }));\n  } catch (err) {\n    if (err.message == \"Cannot read properties of undefined (reading 'data')\") {\n      Promise.all([FileUploadProcess.setError(\"Network got disconnected!, Please check your connection and retry\"), storeValue('closedisable', 'True'), showAlert('Network got disconnected!, Please check your connection and retry', 'error')]);\n    } else {\n      Promise.all([FileUploadProcess.setError(\"Delete Failed retry, \" + err.message), storeValue('closedisable', 'True'), showAlert(\"Delete Failed retry, \" + err.message, 'error')]);\n    }\n  }\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-08T11:42:38Z"},"id":"Estimate Process_FileUploadProcess.runDeleteFile","deleted":false,"gitSyncId":"67f4d81e59d0ae34925978ba_67f50bae59d0ae3492597b86"},{"pluginType":"JS","pluginId":"js-plugin","unpublishedAction":{"name":"clickState","fullyQualifiedName":"Process.clickState","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","organizationId":"62a1cace93e9481dacb0f741","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","collectionId":"Estimate Process_Process","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async function (stateName, query = null) {\n  await storeValue(\"currentState\", Process.getState(stateName));\n  await storeValue(\"currentStateName\", stateName);\n  if (query !== null) {\n    query.run({\n      \"currentStateName\": stateName\n    });\n    showAlert(\"Loading Estimate in state \" + appsmith.store.currentStateName, \"success\");\n  }\n  await GlobalVariables.resetForm([\"Estimate_Table\"]);\n  EstimateItem_Select.run({\n    'estimateId': -1\n  });\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"stateName"},{"name":"query"}],"isAsync":true},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async function (stateName, query = null) {\n  await storeValue(\"currentState\", Process.getState(stateName));\n  await storeValue(\"currentStateName\", stateName);\n  if (query !== null) {\n    query.run({\n      \"currentStateName\": stateName\n    });\n    showAlert(\"Loading Estimate in state \" + appsmith.store.currentStateName, \"success\");\n  }\n  await GlobalVariables.resetForm([\"Estimate_Table\"]);\n  EstimateItem_Select.run({\n    'estimateId': -1\n  });\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"publishedAction":{"name":"clickState","fullyQualifiedName":"Process.clickState","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","organizationId":"62a1cace93e9481dacb0f741","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","collectionId":"Estimate Process_Process","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async function (stateName, query = null) {\n  await storeValue(\"currentState\", Process.getState(stateName));\n  await storeValue(\"currentStateName\", stateName);\n  if (query !== null) {\n    query.run({\n      \"currentStateName\": stateName\n    });\n    showAlert(\"Loading Estimate in state \" + appsmith.store.currentStateName, \"success\");\n  }\n  await GlobalVariables.resetForm([\"Estimate_Table\"]);\n  EstimateItem_Select.run({\n    'estimateId': -1\n  });\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"stateName"},{"name":"query"}],"isAsync":true},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async function (stateName, query = null) {\n  await storeValue(\"currentState\", Process.getState(stateName));\n  await storeValue(\"currentStateName\", stateName);\n  if (query !== null) {\n    query.run({\n      \"currentStateName\": stateName\n    });\n    showAlert(\"Loading Estimate in state \" + appsmith.store.currentStateName, \"success\");\n  }\n  await GlobalVariables.resetForm([\"Estimate_Table\"]);\n  EstimateItem_Select.run({\n    'estimateId': -1\n  });\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"id":"Estimate Process_Process.clickState","deleted":false,"gitSyncId":"62c6dd94aa3be20812d63927_62c6dd94aa3be20812d63940"},{"pluginType":"JS","pluginId":"js-plugin","unpublishedAction":{"name":"retryfunction","fullyQualifiedName":"FileUploadProcess.retryfunction","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","collectionId":"Estimate Process_FileUploadProcess","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async () => {\n  if (appsmith.store.add == 1) {\n    await FileUploadProcess.runCreateFile(Estimate_Table.selectedRow.Id, FileComments_Input.text);\n  } else if (appsmith.store.add == 2) {\n    await FileUploadProcess.runModifyFile(EstimateAttachments_Table.selectedRow.Id, FileComments_Input.text);\n  } else {\n    await FileUploadProcess.setError('value error in retry');\n  }\n}","selfReferencingDataPaths":[],"jsArguments":[]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async () => {\n  if (appsmith.store.add == 1) {\n    await FileUploadProcess.runCreateFile(Estimate_Table.selectedRow.Id, FileComments_Input.text);\n  } else if (appsmith.store.add == 2) {\n    await FileUploadProcess.runModifyFile(EstimateAttachments_Table.selectedRow.Id, FileComments_Input.text);\n  } else {\n    await FileUploadProcess.setError('value error in retry');\n  }\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-08T11:42:38Z"},"publishedAction":{"name":"retryfunction","fullyQualifiedName":"FileUploadProcess.retryfunction","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","collectionId":"Estimate Process_FileUploadProcess","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async () => {\n  if (appsmith.store.add == 1) {\n    await FileUploadProcess.runCreateFile(Estimate_Table.selectedRow.Id, FileComments_Input.text);\n  } else if (appsmith.store.add == 2) {\n    await FileUploadProcess.runModifyFile(EstimateAttachments_Table.selectedRow.Id, FileComments_Input.text);\n  } else {\n    await FileUploadProcess.setError('value error in retry');\n  }\n}","selfReferencingDataPaths":[],"jsArguments":[]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async () => {\n  if (appsmith.store.add == 1) {\n    await FileUploadProcess.runCreateFile(Estimate_Table.selectedRow.Id, FileComments_Input.text);\n  } else if (appsmith.store.add == 2) {\n    await FileUploadProcess.runModifyFile(EstimateAttachments_Table.selectedRow.Id, FileComments_Input.text);\n  } else {\n    await FileUploadProcess.setError('value error in retry');\n  }\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-08T11:42:38Z"},"id":"Estimate Process_FileUploadProcess.retryfunction","deleted":false,"gitSyncId":"67f4d81e59d0ae34925978ba_67f50bae59d0ae3492597b88"},{"pluginType":"JS","pluginId":"js-plugin","unpublishedAction":{"name":"getInitialState","fullyQualifiedName":"Process.getInitialState","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","organizationId":"62a1cace93e9481dacb0f741","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","collectionId":"Estimate Process_Process","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"() => {\n  if (appsmith.store.currentStateName) {\n    return appsmith.store.currentStateName;\n  } else {\n    storeValue(\"currentStateName\", 'Prepare');\n    return \"Prepare\";\n  }\n}","selfReferencingDataPaths":[],"jsArguments":[],"isAsync":false},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["() => {\n  if (appsmith.store.currentStateName) {\n    return appsmith.store.currentStateName;\n  } else {\n    storeValue(\"currentStateName\", 'Prepare');\n    return \"Prepare\";\n  }\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"publishedAction":{"name":"getInitialState","fullyQualifiedName":"Process.getInitialState","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","organizationId":"62a1cace93e9481dacb0f741","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","collectionId":"Estimate Process_Process","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"() => {\n  if (appsmith.store.currentStateName) {\n    return appsmith.store.currentStateName;\n  } else {\n    storeValue(\"currentStateName\", 'Prepare');\n    return \"Prepare\";\n  }\n}","selfReferencingDataPaths":[],"jsArguments":[],"isAsync":false},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["() => {\n  if (appsmith.store.currentStateName) {\n    return appsmith.store.currentStateName;\n  } else {\n    storeValue(\"currentStateName\", 'Prepare');\n    return \"Prepare\";\n  }\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"id":"Estimate Process_Process.getInitialState","deleted":false,"gitSyncId":"62c6dd94aa3be20812d63927_62c6dd94aa3be20812d6394f"},{"pluginType":"JS","pluginId":"js-plugin","unpublishedAction":{"name":"runModifyFile","fullyQualifiedName":"FileUploadProcess.runModifyFile","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","collectionId":"Estimate Process_FileUploadProcess","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async (FileId, FileComments) => {\n  try {\n    if (FilePicker.files.length > 0) {\n      let statename = appsmith.store.statename == null ? storeValue('statename', 'FileCheck') : appsmith.store.statename;\n      let progressstatus = appsmith.store.progressstatus == null ? storeValue('progressstatus', '0') : appsmith.store.progressstatus;\n      let retry = 0;\n      await FileUploadProcess.clearError();\n      await storeValue('closedisable', 'False');\n      if (appsmith.store.statename == 'Completed') {\n        statename = \"FileCheck\";\n        progressstatus = 0;\n        await storeValue('statename', statename);\n        await storeValue('progressstatus', progressstatus);\n      }\n      let DriveId = FileUploadProcess.getValue('Estimate', 'DriveId');\n      let DriveItemId = FileUploadProcess.getValue('Estimate', 'DriveItemId');\n      let fileParams = {\n        \"FileType\": FilePicker.files[0].name.split('.').pop().trim(),\n        \"SalesNumber\": Estimate_Table.selectedRow.Number,\n        \"ModifiedBy\": appsmith.user.email.split(\"@\")[0],\n        \"SalesId\": Estimate_Table.selectedRow.Id,\n        \"EstimateId\": Estimate_Table.selectedRow.EId,\n        \"OriginalFileName\": appsmith.store.tabledata[5].Value\n      };\n      await showModal('Progress_Modal');\n      while (statename != 'Completed') {\n        console.log(progressstatus);\n        console.log(statename);\n        if (statename != 'Error') {\n          await storeValue('statename', statename);\n          await storeValue('progressstatus', progressstatus);\n        }\n        switch (statename) {\n          case 'FileCheck':\n            let response = await SpecificFilesInDrive_Select.run({\n              'DriveId': DriveId,\n              'DriveItemId': DriveItemId,\n              'FileName': EstimateAttachments_Table.selectedRow.FileName\n            });\n            if (response.value.length > 0) {\n              for (const eachFile of response.value) {\n                if (eachFile.name == ActualFileName_Input.text) {\n                  statename = 'UploadToSharePoint';\n                  progressstatus = 25;\n                  break;\n                }\n              }\n            }\n            if (statename != 'UploadToSharePoint') {\n              await FileUploadProcess.setError(\"File Not Found In Sharepoint!\");\n              statename = 'Error';\n            }\n            break;\n          case 'DBUpdate':\n            await EAttachments_Update.run({\n              \"FileId\": FileId,\n              \"FileComments\": FileComments\n            });\n            statename = 'UpdateMetadata';\n            progressstatus = 75;\n            break;\n          case 'UploadToSharePoint':\n            if (FilePicker.files.length > 0) {\n              console.log('start2...');\n              let uploadurl = await UploadSession_Create.run({\n                'DriveId': DriveId,\n                'DriveItemId': DriveItemId,\n                'fileName': appsmith.store.ActualFileName\n              });\n              console.log(uploadurl.uploadUrl);\n              let filesize = FilePicker.files[0].size;\n              let startindex = 0;\n              let responsecreate = \"\";\n              let upload_chunk = filesize;\n              let endindex = filesize - 1;\n              responsecreate = await FileUpload_Create.run(() => {}, () => {}, {\n                'uploadurl': UploadSession_Create.data.uploadUrl.split('//')[1],\n                'range': upload_chunk,\n                'startindex': startindex,\n                'endindex': endindex,\n                'filesize': filesize\n              });\n              console.log('response is', FileUpload_Create.data);\n              if (FileUpload_Create.data.length != 0) {\n                if (FileUpload_Create.data.name == ActualFileName_Input.text) {\n                  statename = 'DBUpdate';\n                  progressstatus = 50;\n                }\n              } else if (retry == 0) {\n                retry++;\n                await FileUploadProcess.setError(\"Upload Failed in first attempt, attempting second\");\n              } else {\n                await FileUploadProcess.setError(\"Upload Failed!, File Upload Update Response not valid\");\n                statename = 'Error';\n              }\n            } else {\n              statename = 'Completed';\n              progressstatus = 100;\n            }\n            break;\n          case 'UpdateMetadata':\n            let responsemetadata = \"\";\n            responsemetadata = await FileUploadProcess.modifyFileMetadata(appsmith.store.ActualFileName, fileParams, 'SalesId', Estimate_Table.selectedRow.Id);\n            console.log(responsemetadata);\n            if (responsemetadata.length != 0) {\n              if (responsemetadata.SalesId == Estimate_Table.selectedRow.Id) {\n                statename = 'Completed';\n                progressstatus = 100;\n              }\n            } else if (retry == 0) {\n              retry++;\n              await FileUploadProcess.setError(\"First Attempt for Metadata is failed, Attempting Second\");\n            } else {\n              await FileUploadProcess.setError(\"Upload Failed!, Metadata create response not valid\");\n              statename = 'Error';\n            }\n            break;\n          case 'Error':\n            await storeValue('closedisable', 'True');\n            statename = 'Completed';\n            break;\n        }\n      }\n      await storeValue('statename', statename).then(() => storeValue('progressstatus', progressstatus));\n      if (appsmith.store.statename == 'Completed' && appsmith.store.ErrorMessage == '') {\n        await EAttachments_Select.run({\n          \"EId\": Estimate_Table.selectedRow.Id\n        });\n        await FileUploadProcess.runRefreshFunc().then(() => closeModal('Progress_Modal')).then(() => storeValue('ActualFileName', '')).then(() => Promise.all([showModal('FileUpload_Modal'), EAttachments_Select.run({\n          \"EId\": Estimate_Table.selectedRow.EId\n        })])).then(() => showAlert('Estimate File Updated', 'success')).then(() => resetWidget('QuoteAttachments_Table'));\n      }\n    } else {\n      await EAttachments_Update.run({\n        \"FileId\": FileId,\n        \"FileComments\": FileComments\n      }).then(() => EAttachments_Select.run({\n        \"EId\": Estimate_Table.selectedRow.EId\n      })).then(() => storeValue('ActualFileName', '')).then(() => Promise.all([showModal('FileUpload_Modal'), EAttachments_Select.run({\n        \"EId\": Estimate_Table.selectedRow.EId\n      })])).then(() => showAlert('File Comments Updated', 'success'));\n    }\n  } catch (err) {\n    if (err.message == \"Cannot read properties of undefined (reading 'data')\") {\n      Promise.all([FileUploadProcess.setError(\"Network got disconnected!, Please check your connection and retry\"), storeValue('closedisable', 'True'), showAlert('Network got disconnected!, Please check your connection and retry', 'error')]);\n    } else {\n      Promise.all([FileUploadProcess.setError(\"Upload Failed retry, \" + err.message), storeValue('closedisable', 'True'), showAlert(\"Upload Failed retry, \" + err.message, 'error')]);\n    }\n  }\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"FileId"},{"name":"FileComments"}]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async (FileId, FileComments) => {\n  try {\n    if (FilePicker.files.length > 0) {\n      let statename = appsmith.store.statename == null ? storeValue('statename', 'FileCheck') : appsmith.store.statename;\n      let progressstatus = appsmith.store.progressstatus == null ? storeValue('progressstatus', '0') : appsmith.store.progressstatus;\n      let retry = 0;\n      await FileUploadProcess.clearError();\n      await storeValue('closedisable', 'False');\n      if (appsmith.store.statename == 'Completed') {\n        statename = \"FileCheck\";\n        progressstatus = 0;\n        await storeValue('statename', statename);\n        await storeValue('progressstatus', progressstatus);\n      }\n      let DriveId = FileUploadProcess.getValue('Estimate', 'DriveId');\n      let DriveItemId = FileUploadProcess.getValue('Estimate', 'DriveItemId');\n      let fileParams = {\n        \"FileType\": FilePicker.files[0].name.split('.').pop().trim(),\n        \"SalesNumber\": Estimate_Table.selectedRow.Number,\n        \"ModifiedBy\": appsmith.user.email.split(\"@\")[0],\n        \"SalesId\": Estimate_Table.selectedRow.Id,\n        \"EstimateId\": Estimate_Table.selectedRow.EId,\n        \"OriginalFileName\": appsmith.store.tabledata[5].Value\n      };\n      await showModal('Progress_Modal');\n      while (statename != 'Completed') {\n        console.log(progressstatus);\n        console.log(statename);\n        if (statename != 'Error') {\n          await storeValue('statename', statename);\n          await storeValue('progressstatus', progressstatus);\n        }\n        switch (statename) {\n          case 'FileCheck':\n            let response = await SpecificFilesInDrive_Select.run({\n              'DriveId': DriveId,\n              'DriveItemId': DriveItemId,\n              'FileName': EstimateAttachments_Table.selectedRow.FileName\n            });\n            if (response.value.length > 0) {\n              for (const eachFile of response.value) {\n                if (eachFile.name == ActualFileName_Input.text) {\n                  statename = 'UploadToSharePoint';\n                  progressstatus = 25;\n                  break;\n                }\n              }\n            }\n            if (statename != 'UploadToSharePoint') {\n              await FileUploadProcess.setError(\"File Not Found In Sharepoint!\");\n              statename = 'Error';\n            }\n            break;\n          case 'DBUpdate':\n            await EAttachments_Update.run({\n              \"FileId\": FileId,\n              \"FileComments\": FileComments\n            });\n            statename = 'UpdateMetadata';\n            progressstatus = 75;\n            break;\n          case 'UploadToSharePoint':\n            if (FilePicker.files.length > 0) {\n              console.log('start2...');\n              let uploadurl = await UploadSession_Create.run({\n                'DriveId': DriveId,\n                'DriveItemId': DriveItemId,\n                'fileName': appsmith.store.ActualFileName\n              });\n              console.log(uploadurl.uploadUrl);\n              let filesize = FilePicker.files[0].size;\n              let startindex = 0;\n              let responsecreate = \"\";\n              let upload_chunk = filesize;\n              let endindex = filesize - 1;\n              responsecreate = await FileUpload_Create.run(() => {}, () => {}, {\n                'uploadurl': UploadSession_Create.data.uploadUrl.split('//')[1],\n                'range': upload_chunk,\n                'startindex': startindex,\n                'endindex': endindex,\n                'filesize': filesize\n              });\n              console.log('response is', FileUpload_Create.data);\n              if (FileUpload_Create.data.length != 0) {\n                if (FileUpload_Create.data.name == ActualFileName_Input.text) {\n                  statename = 'DBUpdate';\n                  progressstatus = 50;\n                }\n              } else if (retry == 0) {\n                retry++;\n                await FileUploadProcess.setError(\"Upload Failed in first attempt, attempting second\");\n              } else {\n                await FileUploadProcess.setError(\"Upload Failed!, File Upload Update Response not valid\");\n                statename = 'Error';\n              }\n            } else {\n              statename = 'Completed';\n              progressstatus = 100;\n            }\n            break;\n          case 'UpdateMetadata':\n            let responsemetadata = \"\";\n            responsemetadata = await FileUploadProcess.modifyFileMetadata(appsmith.store.ActualFileName, fileParams, 'SalesId', Estimate_Table.selectedRow.Id);\n            console.log(responsemetadata);\n            if (responsemetadata.length != 0) {\n              if (responsemetadata.SalesId == Estimate_Table.selectedRow.Id) {\n                statename = 'Completed';\n                progressstatus = 100;\n              }\n            } else if (retry == 0) {\n              retry++;\n              await FileUploadProcess.setError(\"First Attempt for Metadata is failed, Attempting Second\");\n            } else {\n              await FileUploadProcess.setError(\"Upload Failed!, Metadata create response not valid\");\n              statename = 'Error';\n            }\n            break;\n          case 'Error':\n            await storeValue('closedisable', 'True');\n            statename = 'Completed';\n            break;\n        }\n      }\n      await storeValue('statename', statename).then(() => storeValue('progressstatus', progressstatus));\n      if (appsmith.store.statename == 'Completed' && appsmith.store.ErrorMessage == '') {\n        await EAttachments_Select.run({\n          \"EId\": Estimate_Table.selectedRow.Id\n        });\n        await FileUploadProcess.runRefreshFunc().then(() => closeModal('Progress_Modal')).then(() => storeValue('ActualFileName', '')).then(() => Promise.all([showModal('FileUpload_Modal'), EAttachments_Select.run({\n          \"EId\": Estimate_Table.selectedRow.EId\n        })])).then(() => showAlert('Estimate File Updated', 'success')).then(() => resetWidget('QuoteAttachments_Table'));\n      }\n    } else {\n      await EAttachments_Update.run({\n        \"FileId\": FileId,\n        \"FileComments\": FileComments\n      }).then(() => EAttachments_Select.run({\n        \"EId\": Estimate_Table.selectedRow.EId\n      })).then(() => storeValue('ActualFileName', '')).then(() => Promise.all([showModal('FileUpload_Modal'), EAttachments_Select.run({\n        \"EId\": Estimate_Table.selectedRow.EId\n      })])).then(() => showAlert('File Comments Updated', 'success'));\n    }\n  } catch (err) {\n    if (err.message == \"Cannot read properties of undefined (reading 'data')\") {\n      Promise.all([FileUploadProcess.setError(\"Network got disconnected!, Please check your connection and retry\"), storeValue('closedisable', 'True'), showAlert('Network got disconnected!, Please check your connection and retry', 'error')]);\n    } else {\n      Promise.all([FileUploadProcess.setError(\"Upload Failed retry, \" + err.message), storeValue('closedisable', 'True'), showAlert(\"Upload Failed retry, \" + err.message, 'error')]);\n    }\n  }\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-08T11:42:38Z"},"publishedAction":{"name":"runModifyFile","fullyQualifiedName":"FileUploadProcess.runModifyFile","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","collectionId":"Estimate Process_FileUploadProcess","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async (FileId, FileComments) => {\n  try {\n    if (FilePicker.files.length > 0) {\n      let statename = appsmith.store.statename == null ? storeValue('statename', 'FileCheck') : appsmith.store.statename;\n      let progressstatus = appsmith.store.progressstatus == null ? storeValue('progressstatus', '0') : appsmith.store.progressstatus;\n      let retry = 0;\n      await FileUploadProcess.clearError();\n      await storeValue('closedisable', 'False');\n      if (appsmith.store.statename == 'Completed') {\n        statename = \"FileCheck\";\n        progressstatus = 0;\n        await storeValue('statename', statename);\n        await storeValue('progressstatus', progressstatus);\n      }\n      let DriveId = FileUploadProcess.getValue('Estimate', 'DriveId');\n      let DriveItemId = FileUploadProcess.getValue('Estimate', 'DriveItemId');\n      let fileParams = {\n        \"FileType\": FilePicker.files[0].name.split('.').pop().trim(),\n        \"SalesNumber\": Estimate_Table.selectedRow.Number,\n        \"ModifiedBy\": appsmith.user.email.split(\"@\")[0],\n        \"SalesId\": Estimate_Table.selectedRow.Id,\n        \"EstimateId\": Estimate_Table.selectedRow.EId,\n        \"OriginalFileName\": appsmith.store.tabledata[5].Value\n      };\n      await showModal('Progress_Modal');\n      while (statename != 'Completed') {\n        console.log(progressstatus);\n        console.log(statename);\n        if (statename != 'Error') {\n          await storeValue('statename', statename);\n          await storeValue('progressstatus', progressstatus);\n        }\n        switch (statename) {\n          case 'FileCheck':\n            let response = await SpecificFilesInDrive_Select.run({\n              'DriveId': DriveId,\n              'DriveItemId': DriveItemId,\n              'FileName': EstimateAttachments_Table.selectedRow.FileName\n            });\n            if (response.value.length > 0) {\n              for (const eachFile of response.value) {\n                if (eachFile.name == ActualFileName_Input.text) {\n                  statename = 'UploadToSharePoint';\n                  progressstatus = 25;\n                  break;\n                }\n              }\n            }\n            if (statename != 'UploadToSharePoint') {\n              await FileUploadProcess.setError(\"File Not Found In Sharepoint!\");\n              statename = 'Error';\n            }\n            break;\n          case 'DBUpdate':\n            await EAttachments_Update.run({\n              \"FileId\": FileId,\n              \"FileComments\": FileComments\n            });\n            statename = 'UpdateMetadata';\n            progressstatus = 75;\n            break;\n          case 'UploadToSharePoint':\n            if (FilePicker.files.length > 0) {\n              console.log('start2...');\n              let uploadurl = await UploadSession_Create.run({\n                'DriveId': DriveId,\n                'DriveItemId': DriveItemId,\n                'fileName': appsmith.store.ActualFileName\n              });\n              console.log(uploadurl.uploadUrl);\n              let filesize = FilePicker.files[0].size;\n              let startindex = 0;\n              let responsecreate = \"\";\n              let upload_chunk = filesize;\n              let endindex = filesize - 1;\n              responsecreate = await FileUpload_Create.run(() => {}, () => {}, {\n                'uploadurl': UploadSession_Create.data.uploadUrl.split('//')[1],\n                'range': upload_chunk,\n                'startindex': startindex,\n                'endindex': endindex,\n                'filesize': filesize\n              });\n              console.log('response is', FileUpload_Create.data);\n              if (FileUpload_Create.data.length != 0) {\n                if (FileUpload_Create.data.name == ActualFileName_Input.text) {\n                  statename = 'DBUpdate';\n                  progressstatus = 50;\n                }\n              } else if (retry == 0) {\n                retry++;\n                await FileUploadProcess.setError(\"Upload Failed in first attempt, attempting second\");\n              } else {\n                await FileUploadProcess.setError(\"Upload Failed!, File Upload Update Response not valid\");\n                statename = 'Error';\n              }\n            } else {\n              statename = 'Completed';\n              progressstatus = 100;\n            }\n            break;\n          case 'UpdateMetadata':\n            let responsemetadata = \"\";\n            responsemetadata = await FileUploadProcess.modifyFileMetadata(appsmith.store.ActualFileName, fileParams, 'SalesId', Estimate_Table.selectedRow.Id);\n            console.log(responsemetadata);\n            if (responsemetadata.length != 0) {\n              if (responsemetadata.SalesId == Estimate_Table.selectedRow.Id) {\n                statename = 'Completed';\n                progressstatus = 100;\n              }\n            } else if (retry == 0) {\n              retry++;\n              await FileUploadProcess.setError(\"First Attempt for Metadata is failed, Attempting Second\");\n            } else {\n              await FileUploadProcess.setError(\"Upload Failed!, Metadata create response not valid\");\n              statename = 'Error';\n            }\n            break;\n          case 'Error':\n            await storeValue('closedisable', 'True');\n            statename = 'Completed';\n            break;\n        }\n      }\n      await storeValue('statename', statename).then(() => storeValue('progressstatus', progressstatus));\n      if (appsmith.store.statename == 'Completed' && appsmith.store.ErrorMessage == '') {\n        await EAttachments_Select.run({\n          \"EId\": Estimate_Table.selectedRow.Id\n        });\n        await FileUploadProcess.runRefreshFunc().then(() => closeModal('Progress_Modal')).then(() => storeValue('ActualFileName', '')).then(() => Promise.all([showModal('FileUpload_Modal'), EAttachments_Select.run({\n          \"EId\": Estimate_Table.selectedRow.EId\n        })])).then(() => showAlert('Estimate File Updated', 'success')).then(() => resetWidget('QuoteAttachments_Table'));\n      }\n    } else {\n      await EAttachments_Update.run({\n        \"FileId\": FileId,\n        \"FileComments\": FileComments\n      }).then(() => EAttachments_Select.run({\n        \"EId\": Estimate_Table.selectedRow.EId\n      })).then(() => storeValue('ActualFileName', '')).then(() => Promise.all([showModal('FileUpload_Modal'), EAttachments_Select.run({\n        \"EId\": Estimate_Table.selectedRow.EId\n      })])).then(() => showAlert('File Comments Updated', 'success'));\n    }\n  } catch (err) {\n    if (err.message == \"Cannot read properties of undefined (reading 'data')\") {\n      Promise.all([FileUploadProcess.setError(\"Network got disconnected!, Please check your connection and retry\"), storeValue('closedisable', 'True'), showAlert('Network got disconnected!, Please check your connection and retry', 'error')]);\n    } else {\n      Promise.all([FileUploadProcess.setError(\"Upload Failed retry, \" + err.message), storeValue('closedisable', 'True'), showAlert(\"Upload Failed retry, \" + err.message, 'error')]);\n    }\n  }\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"FileId"},{"name":"FileComments"}]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async (FileId, FileComments) => {\n  try {\n    if (FilePicker.files.length > 0) {\n      let statename = appsmith.store.statename == null ? storeValue('statename', 'FileCheck') : appsmith.store.statename;\n      let progressstatus = appsmith.store.progressstatus == null ? storeValue('progressstatus', '0') : appsmith.store.progressstatus;\n      let retry = 0;\n      await FileUploadProcess.clearError();\n      await storeValue('closedisable', 'False');\n      if (appsmith.store.statename == 'Completed') {\n        statename = \"FileCheck\";\n        progressstatus = 0;\n        await storeValue('statename', statename);\n        await storeValue('progressstatus', progressstatus);\n      }\n      let DriveId = FileUploadProcess.getValue('Estimate', 'DriveId');\n      let DriveItemId = FileUploadProcess.getValue('Estimate', 'DriveItemId');\n      let fileParams = {\n        \"FileType\": FilePicker.files[0].name.split('.').pop().trim(),\n        \"SalesNumber\": Estimate_Table.selectedRow.Number,\n        \"ModifiedBy\": appsmith.user.email.split(\"@\")[0],\n        \"SalesId\": Estimate_Table.selectedRow.Id,\n        \"EstimateId\": Estimate_Table.selectedRow.EId,\n        \"OriginalFileName\": appsmith.store.tabledata[5].Value\n      };\n      await showModal('Progress_Modal');\n      while (statename != 'Completed') {\n        console.log(progressstatus);\n        console.log(statename);\n        if (statename != 'Error') {\n          await storeValue('statename', statename);\n          await storeValue('progressstatus', progressstatus);\n        }\n        switch (statename) {\n          case 'FileCheck':\n            let response = await SpecificFilesInDrive_Select.run({\n              'DriveId': DriveId,\n              'DriveItemId': DriveItemId,\n              'FileName': EstimateAttachments_Table.selectedRow.FileName\n            });\n            if (response.value.length > 0) {\n              for (const eachFile of response.value) {\n                if (eachFile.name == ActualFileName_Input.text) {\n                  statename = 'UploadToSharePoint';\n                  progressstatus = 25;\n                  break;\n                }\n              }\n            }\n            if (statename != 'UploadToSharePoint') {\n              await FileUploadProcess.setError(\"File Not Found In Sharepoint!\");\n              statename = 'Error';\n            }\n            break;\n          case 'DBUpdate':\n            await EAttachments_Update.run({\n              \"FileId\": FileId,\n              \"FileComments\": FileComments\n            });\n            statename = 'UpdateMetadata';\n            progressstatus = 75;\n            break;\n          case 'UploadToSharePoint':\n            if (FilePicker.files.length > 0) {\n              console.log('start2...');\n              let uploadurl = await UploadSession_Create.run({\n                'DriveId': DriveId,\n                'DriveItemId': DriveItemId,\n                'fileName': appsmith.store.ActualFileName\n              });\n              console.log(uploadurl.uploadUrl);\n              let filesize = FilePicker.files[0].size;\n              let startindex = 0;\n              let responsecreate = \"\";\n              let upload_chunk = filesize;\n              let endindex = filesize - 1;\n              responsecreate = await FileUpload_Create.run(() => {}, () => {}, {\n                'uploadurl': UploadSession_Create.data.uploadUrl.split('//')[1],\n                'range': upload_chunk,\n                'startindex': startindex,\n                'endindex': endindex,\n                'filesize': filesize\n              });\n              console.log('response is', FileUpload_Create.data);\n              if (FileUpload_Create.data.length != 0) {\n                if (FileUpload_Create.data.name == ActualFileName_Input.text) {\n                  statename = 'DBUpdate';\n                  progressstatus = 50;\n                }\n              } else if (retry == 0) {\n                retry++;\n                await FileUploadProcess.setError(\"Upload Failed in first attempt, attempting second\");\n              } else {\n                await FileUploadProcess.setError(\"Upload Failed!, File Upload Update Response not valid\");\n                statename = 'Error';\n              }\n            } else {\n              statename = 'Completed';\n              progressstatus = 100;\n            }\n            break;\n          case 'UpdateMetadata':\n            let responsemetadata = \"\";\n            responsemetadata = await FileUploadProcess.modifyFileMetadata(appsmith.store.ActualFileName, fileParams, 'SalesId', Estimate_Table.selectedRow.Id);\n            console.log(responsemetadata);\n            if (responsemetadata.length != 0) {\n              if (responsemetadata.SalesId == Estimate_Table.selectedRow.Id) {\n                statename = 'Completed';\n                progressstatus = 100;\n              }\n            } else if (retry == 0) {\n              retry++;\n              await FileUploadProcess.setError(\"First Attempt for Metadata is failed, Attempting Second\");\n            } else {\n              await FileUploadProcess.setError(\"Upload Failed!, Metadata create response not valid\");\n              statename = 'Error';\n            }\n            break;\n          case 'Error':\n            await storeValue('closedisable', 'True');\n            statename = 'Completed';\n            break;\n        }\n      }\n      await storeValue('statename', statename).then(() => storeValue('progressstatus', progressstatus));\n      if (appsmith.store.statename == 'Completed' && appsmith.store.ErrorMessage == '') {\n        await EAttachments_Select.run({\n          \"EId\": Estimate_Table.selectedRow.Id\n        });\n        await FileUploadProcess.runRefreshFunc().then(() => closeModal('Progress_Modal')).then(() => storeValue('ActualFileName', '')).then(() => Promise.all([showModal('FileUpload_Modal'), EAttachments_Select.run({\n          \"EId\": Estimate_Table.selectedRow.EId\n        })])).then(() => showAlert('Estimate File Updated', 'success')).then(() => resetWidget('QuoteAttachments_Table'));\n      }\n    } else {\n      await EAttachments_Update.run({\n        \"FileId\": FileId,\n        \"FileComments\": FileComments\n      }).then(() => EAttachments_Select.run({\n        \"EId\": Estimate_Table.selectedRow.EId\n      })).then(() => storeValue('ActualFileName', '')).then(() => Promise.all([showModal('FileUpload_Modal'), EAttachments_Select.run({\n        \"EId\": Estimate_Table.selectedRow.EId\n      })])).then(() => showAlert('File Comments Updated', 'success'));\n    }\n  } catch (err) {\n    if (err.message == \"Cannot read properties of undefined (reading 'data')\") {\n      Promise.all([FileUploadProcess.setError(\"Network got disconnected!, Please check your connection and retry\"), storeValue('closedisable', 'True'), showAlert('Network got disconnected!, Please check your connection and retry', 'error')]);\n    } else {\n      Promise.all([FileUploadProcess.setError(\"Upload Failed retry, \" + err.message), storeValue('closedisable', 'True'), showAlert(\"Upload Failed retry, \" + err.message, 'error')]);\n    }\n  }\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-08T11:42:38Z"},"id":"Estimate Process_FileUploadProcess.runModifyFile","deleted":false,"gitSyncId":"67f4d81e59d0ae34925978ba_67f50bae59d0ae3492597b74"},{"pluginType":"JS","pluginId":"js-plugin","unpublishedAction":{"name":"disableUpdateButton","fullyQualifiedName":"GlobalVariables.disableUpdateButton","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","organizationId":"62a1cace93e9481dacb0f741","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","collectionId":"Estimate Process_GlobalVariables","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"(formWidgets, formTable) => {\n  let disableWidget = false;\n  if (formTable.selectedRowIndex === -1) {\n    disableWidget = true;\n  } else if (GlobalVariables.validateForm(formWidgets) === false) {\n    disableWidget = true;\n  } else {\n    disableWidget = false;\n  }\n  return disableWidget;\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"formWidgets"},{"name":"formTable"}],"isAsync":false},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["(formWidgets, formTable) => {\n  let disableWidget = false;\n  if (formTable.selectedRowIndex === -1) {\n    disableWidget = true;\n  } else if (GlobalVariables.validateForm(formWidgets) === false) {\n    disableWidget = true;\n  } else {\n    disableWidget = false;\n  }\n  return disableWidget;\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"publishedAction":{"name":"disableUpdateButton","fullyQualifiedName":"GlobalVariables.disableUpdateButton","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","organizationId":"62a1cace93e9481dacb0f741","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","collectionId":"Estimate Process_GlobalVariables","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"(formWidgets, formTable) => {\n  let disableWidget = false;\n  if (formTable.selectedRowIndex === -1) {\n    disableWidget = true;\n  } else if (GlobalVariables.validateForm(formWidgets) === false) {\n    disableWidget = true;\n  } else {\n    disableWidget = false;\n  }\n  return disableWidget;\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"formWidgets"},{"name":"formTable"}],"isAsync":false},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["(formWidgets, formTable) => {\n  let disableWidget = false;\n  if (formTable.selectedRowIndex === -1) {\n    disableWidget = true;\n  } else if (GlobalVariables.validateForm(formWidgets) === false) {\n    disableWidget = true;\n  } else {\n    disableWidget = false;\n  }\n  return disableWidget;\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"id":"Estimate Process_GlobalVariables.disableUpdateButton","deleted":false,"gitSyncId":"62c6dd94aa3be20812d63927_62c6dd94aa3be20812d63951"},{"pluginType":"JS","pluginId":"js-plugin","unpublishedAction":{"name":"getModalTitle","fullyQualifiedName":"Process.getModalTitle","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","organizationId":"62a1cace93e9481dacb0f741","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","collectionId":"Estimate Process_Process","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"() => {\n  return appsmith.store.currentDecision?.Title || \"\";\n}","selfReferencingDataPaths":[],"jsArguments":[],"isAsync":false},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["() => {\n  return appsmith.store.currentDecision?.Title || \"\";\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"publishedAction":{"name":"getModalTitle","fullyQualifiedName":"Process.getModalTitle","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","organizationId":"62a1cace93e9481dacb0f741","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","collectionId":"Estimate Process_Process","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"() => {\n  return appsmith.store.currentDecision?.Title || \"\";\n}","selfReferencingDataPaths":[],"jsArguments":[],"isAsync":false},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["() => {\n  return appsmith.store.currentDecision?.Title || \"\";\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"id":"Estimate Process_Process.getModalTitle","deleted":false,"gitSyncId":"62c6dd94aa3be20812d63927_62c6dd94aa3be20812d63945"},{"pluginType":"JS","pluginId":"js-plugin","unpublishedAction":{"name":"myFun1","fullyQualifiedName":"Process.myFun1","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","organizationId":"62a1cace93e9481dacb0f741","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","collectionId":"Estimate Process_Process","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"() => {}","selfReferencingDataPaths":[],"jsArguments":[],"isAsync":false},"executeOnLoad":false,"clientSideExecution":true,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["() => {}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"publishedAction":{"name":"myFun1","fullyQualifiedName":"Process.myFun1","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","organizationId":"62a1cace93e9481dacb0f741","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","collectionId":"Estimate Process_Process","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"() => {}","selfReferencingDataPaths":[],"jsArguments":[],"isAsync":false},"executeOnLoad":false,"clientSideExecution":true,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["() => {}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"id":"Estimate Process_Process.myFun1","deleted":false,"gitSyncId":"62c6dd94aa3be20812d63927_62c6dd94aa3be20812d63934"},{"pluginType":"JS","pluginId":"js-plugin","unpublishedAction":{"name":"getDecision","fullyQualifiedName":"Process.getDecision","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","organizationId":"62a1cace93e9481dacb0f741","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","collectionId":"Estimate Process_Process","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"decisionName => {\n  return appsmith.store.currentState.Next.find(thisDecision => {\n    return thisDecision.Name == decisionName;\n  });\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"decisionName"}],"isAsync":false},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["decisionName => {\n  return appsmith.store.currentState.Next.find(thisDecision => {\n    return thisDecision.Name == decisionName;\n  });\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"publishedAction":{"name":"getDecision","fullyQualifiedName":"Process.getDecision","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","organizationId":"62a1cace93e9481dacb0f741","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","collectionId":"Estimate Process_Process","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"decisionName => {\n  return appsmith.store.currentState.Next.find(thisDecision => {\n    return thisDecision.Name == decisionName;\n  });\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"decisionName"}],"isAsync":false},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["decisionName => {\n  return appsmith.store.currentState.Next.find(thisDecision => {\n    return thisDecision.Name == decisionName;\n  });\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"id":"Estimate Process_Process.getDecision","deleted":false,"gitSyncId":"62c6dd94aa3be20812d63927_62c6dd94aa3be20812d63932"},{"pluginType":"JS","pluginId":"js-plugin","unpublishedAction":{"name":"resetWidgets","fullyQualifiedName":"GlobalVariables.resetWidgets","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","organizationId":"62a1cace93e9481dacb0f741","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","collectionId":"Estimate Process_GlobalVariables","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"widgetsArray => {\n  const widgetMap = widgetsArray.map(aWdiget => resetWidget(aWdiget));\n  return Promise.all(widgetMap);\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"widgetsArray"}],"isAsync":false},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["widgetsArray => {\n  const widgetMap = widgetsArray.map(aWdiget => resetWidget(aWdiget));\n  return Promise.all(widgetMap);\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"publishedAction":{"name":"resetWidgets","fullyQualifiedName":"GlobalVariables.resetWidgets","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","organizationId":"62a1cace93e9481dacb0f741","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","collectionId":"Estimate Process_GlobalVariables","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"widgetsArray => {\n  const widgetMap = widgetsArray.map(aWdiget => resetWidget(aWdiget));\n  return Promise.all(widgetMap);\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"widgetsArray"}],"isAsync":false},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["widgetsArray => {\n  const widgetMap = widgetsArray.map(aWdiget => resetWidget(aWdiget));\n  return Promise.all(widgetMap);\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"id":"Estimate Process_GlobalVariables.resetWidgets","deleted":false,"gitSyncId":"62c6dd94aa3be20812d63927_62c6dd94aa3be20812d63937"},{"pluginType":"JS","pluginId":"js-plugin","unpublishedAction":{"name":"resetForm","fullyQualifiedName":"GlobalVariables.resetForm","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","organizationId":"62a1cace93e9481dacb0f741","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","collectionId":"Estimate Process_GlobalVariables","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"tabWidgets => {\n  tabWidgets.forEach(eachWidget => {\n    resetWidget(eachWidget);\n  });\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"tabWidgets"}],"isAsync":false},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["tabWidgets => {\n  tabWidgets.forEach(eachWidget => {\n    resetWidget(eachWidget);\n  });\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"publishedAction":{"name":"resetForm","fullyQualifiedName":"GlobalVariables.resetForm","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","organizationId":"62a1cace93e9481dacb0f741","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","collectionId":"Estimate Process_GlobalVariables","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"tabWidgets => {\n  tabWidgets.forEach(eachWidget => {\n    resetWidget(eachWidget);\n  });\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"tabWidgets"}],"isAsync":false},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["tabWidgets => {\n  tabWidgets.forEach(eachWidget => {\n    resetWidget(eachWidget);\n  });\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"id":"Estimate Process_GlobalVariables.resetForm","deleted":false,"gitSyncId":"62c6dd94aa3be20812d63927_62c6dd94aa3be20812d63933"},{"pluginType":"JS","pluginId":"js-plugin","unpublishedAction":{"name":"disableArrow","fullyQualifiedName":"Process.disableArrow","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","organizationId":"62a1cace93e9481dacb0f741","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","collectionId":"Estimate Process_Process","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"arrow => {\n  return appsmith.store.currentStateName != arrow || Estimate_Table.selectedRowIndex === -1;\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"arrow"}],"isAsync":false},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["arrow => {\n  return appsmith.store.currentStateName != arrow || Estimate_Table.selectedRowIndex === -1;\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"publishedAction":{"name":"disableArrow","fullyQualifiedName":"Process.disableArrow","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","organizationId":"62a1cace93e9481dacb0f741","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","collectionId":"Estimate Process_Process","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"arrow => {\n  return appsmith.store.currentStateName != arrow || Estimate_Table.selectedRowIndex === -1;\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"arrow"}],"isAsync":false},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["arrow => {\n  return appsmith.store.currentStateName != arrow || Estimate_Table.selectedRowIndex === -1;\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"id":"Estimate Process_Process.disableArrow","deleted":false,"gitSyncId":"62c6dd94aa3be20812d63927_62c6dd94aa3be20812d6393d"},{"pluginType":"JS","pluginId":"js-plugin","unpublishedAction":{"name":"clearError","fullyQualifiedName":"FileUploadProcess.clearError","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","collectionId":"Estimate Process_FileUploadProcess","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async () => {\n  await storeValue('ErrorMessage', \"\");\n  await storeValue('ErrorVisibility', false);\n  await storeValue('ErrorOccured', false);\n}","selfReferencingDataPaths":[],"jsArguments":[]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async () => {\n  await storeValue('ErrorMessage', \"\");\n  await storeValue('ErrorVisibility', false);\n  await storeValue('ErrorOccured', false);\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-08T11:42:38Z"},"publishedAction":{"name":"clearError","fullyQualifiedName":"FileUploadProcess.clearError","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","collectionId":"Estimate Process_FileUploadProcess","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async () => {\n  await storeValue('ErrorMessage', \"\");\n  await storeValue('ErrorVisibility', false);\n  await storeValue('ErrorOccured', false);\n}","selfReferencingDataPaths":[],"jsArguments":[]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async () => {\n  await storeValue('ErrorMessage', \"\");\n  await storeValue('ErrorVisibility', false);\n  await storeValue('ErrorOccured', false);\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-08T11:42:38Z"},"id":"Estimate Process_FileUploadProcess.clearError","deleted":false,"gitSyncId":"67f4d81e59d0ae34925978ba_67f50bae59d0ae3492597b78"},{"pluginType":"JS","pluginId":"js-plugin","unpublishedAction":{"name":"disableCorporateAdminButton","fullyQualifiedName":"GlobalVariables.disableCorporateAdminButton","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","collectionId":"Estimate Process_GlobalVariables","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"() => {\n  return false || CorporateAdmin_Select.data.find(row => {\n    return row.name == appsmith.user.username.split('@')[0];\n  })?.name == appsmith.user.username.split('@')[0];\n}","selfReferencingDataPaths":[],"jsArguments":[],"isAsync":false},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["() => {\n  return false || CorporateAdmin_Select.data.find(row => {\n    return row.name == appsmith.user.username.split('@')[0];\n  })?.name == appsmith.user.username.split('@')[0];\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"publishedAction":{"name":"disableCorporateAdminButton","fullyQualifiedName":"GlobalVariables.disableCorporateAdminButton","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","collectionId":"Estimate Process_GlobalVariables","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"() => {\n  return false || CorporateAdmin_Select.data.find(row => {\n    return row.name == appsmith.user.username.split('@')[0];\n  })?.name == appsmith.user.username.split('@')[0];\n}","selfReferencingDataPaths":[],"jsArguments":[],"isAsync":false},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["() => {\n  return false || CorporateAdmin_Select.data.find(row => {\n    return row.name == appsmith.user.username.split('@')[0];\n  })?.name == appsmith.user.username.split('@')[0];\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"id":"Estimate Process_GlobalVariables.disableCorporateAdminButton","deleted":false,"gitSyncId":"62c6dd94aa3be20812d63927_62c71632aa3be20812d63a48"},{"pluginType":"JS","pluginId":"js-plugin","unpublishedAction":{"name":"myFun1","fullyQualifiedName":"PageObjects.myFun1","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","organizationId":"62a1cace93e9481dacb0f741","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","collectionId":"Estimate Process_PageObjects","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"() => {}","selfReferencingDataPaths":[],"jsArguments":[],"isAsync":false},"executeOnLoad":false,"clientSideExecution":true,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["() => {}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"publishedAction":{"name":"myFun1","fullyQualifiedName":"PageObjects.myFun1","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","organizationId":"62a1cace93e9481dacb0f741","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","collectionId":"Estimate Process_PageObjects","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"() => {}","selfReferencingDataPaths":[],"jsArguments":[],"isAsync":false},"executeOnLoad":false,"clientSideExecution":true,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["() => {}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"id":"Estimate Process_PageObjects.myFun1","deleted":false,"gitSyncId":"62c6dd94aa3be20812d63927_62c6dd94aa3be20812d63943"},{"pluginType":"JS","pluginId":"js-plugin","unpublishedAction":{"name":"myFun2","fullyQualifiedName":"Process.myFun2","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","organizationId":"62a1cace93e9481dacb0f741","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","collectionId":"Estimate Process_Process","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async () => {}","selfReferencingDataPaths":[],"jsArguments":[],"isAsync":true},"executeOnLoad":false,"clientSideExecution":true,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async () => {}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"publishedAction":{"name":"myFun2","fullyQualifiedName":"Process.myFun2","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","organizationId":"62a1cace93e9481dacb0f741","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","collectionId":"Estimate Process_Process","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async () => {}","selfReferencingDataPaths":[],"jsArguments":[],"isAsync":true},"executeOnLoad":false,"clientSideExecution":true,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async () => {}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"id":"Estimate Process_Process.myFun2","deleted":false,"gitSyncId":"62c6dd94aa3be20812d63927_62c6dd94aa3be20812d63949"},{"pluginType":"JS","pluginId":"js-plugin","unpublishedAction":{"name":"myFun2","fullyQualifiedName":"PageObjects.myFun2","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","organizationId":"62a1cace93e9481dacb0f741","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","collectionId":"Estimate Process_PageObjects","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async () => {}","selfReferencingDataPaths":[],"jsArguments":[],"isAsync":true},"executeOnLoad":false,"clientSideExecution":true,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async () => {}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"publishedAction":{"name":"myFun2","fullyQualifiedName":"PageObjects.myFun2","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","organizationId":"62a1cace93e9481dacb0f741","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","collectionId":"Estimate Process_PageObjects","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async () => {}","selfReferencingDataPaths":[],"jsArguments":[],"isAsync":true},"executeOnLoad":false,"clientSideExecution":true,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async () => {}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"id":"Estimate Process_PageObjects.myFun2","deleted":false,"gitSyncId":"62c6dd94aa3be20812d63927_62c6dd94aa3be20812d6392e"},{"pluginType":"JS","pluginId":"js-plugin","unpublishedAction":{"name":"validateWidget","fullyQualifiedName":"GlobalVariables.validateWidget","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","organizationId":"62a1cace93e9481dacb0f741","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","collectionId":"Estimate Process_GlobalVariables","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"widgetObject => {\n  let valid = false;\n  if (widgetObject.isValid === true) {\n    valid = true;\n  } else {\n    valid = false;\n  }\n  return valid;\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"widgetObject"}],"isAsync":false},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["widgetObject => {\n  let valid = false;\n  if (widgetObject.isValid === true) {\n    valid = true;\n  } else {\n    valid = false;\n  }\n  return valid;\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"publishedAction":{"name":"validateWidget","fullyQualifiedName":"GlobalVariables.validateWidget","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","organizationId":"62a1cace93e9481dacb0f741","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","collectionId":"Estimate Process_GlobalVariables","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"widgetObject => {\n  let valid = false;\n  if (widgetObject.isValid === true) {\n    valid = true;\n  } else {\n    valid = false;\n  }\n  return valid;\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"widgetObject"}],"isAsync":false},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["widgetObject => {\n  let valid = false;\n  if (widgetObject.isValid === true) {\n    valid = true;\n  } else {\n    valid = false;\n  }\n  return valid;\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"id":"Estimate Process_GlobalVariables.validateWidget","deleted":false,"gitSyncId":"62c6dd94aa3be20812d63927_62c6dd94aa3be20812d63938"},{"pluginType":"JS","pluginId":"js-plugin","unpublishedAction":{"name":"updateEstimateItem","fullyQualifiedName":"PageObjects.updateEstimateItem","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","organizationId":"62a1cace93e9481dacb0f741","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","collectionId":"Estimate Process_PageObjects","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async (estimateId, estItemNumber, estItemDes, estItemQty, estItemAmt, estItemId) => {\n  await EstimateItem_Update.run({\n    \"estItemNumber\": estItemNumber,\n    \"estItemDes\": estItemDes,\n    \"estItemQty\": estItemQty,\n    \"estItemAmt\": estItemAmt,\n    \"estItemId\": estItemId\n  }).then(() => {\n    return Promise.all([EstimateItem_Select.run({\n      'estimateId': estimateId\n    })]);\n  }).then(() => {\n    return GlobalVariables.resetWidgets([\"EstimateDetails_Container\", \"EstimateItem_Table\"]);\n  }).then(res => showAlert(\"Update Done\", \"success\")).catch(error => showAlert(error.toString(), \"error\"));\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"estimateId"},{"name":"estItemNumber"},{"name":"estItemDes"},{"name":"estItemQty"},{"name":"estItemAmt"},{"name":"estItemId"}],"isAsync":true},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async (estimateId, estItemNumber, estItemDes, estItemQty, estItemAmt, estItemId) => {\n  await EstimateItem_Update.run({\n    \"estItemNumber\": estItemNumber,\n    \"estItemDes\": estItemDes,\n    \"estItemQty\": estItemQty,\n    \"estItemAmt\": estItemAmt,\n    \"estItemId\": estItemId\n  }).then(() => {\n    return Promise.all([EstimateItem_Select.run({\n      'estimateId': estimateId\n    })]);\n  }).then(() => {\n    return GlobalVariables.resetWidgets([\"EstimateDetails_Container\", \"EstimateItem_Table\"]);\n  }).then(res => showAlert(\"Update Done\", \"success\")).catch(error => showAlert(error.toString(), \"error\"));\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"publishedAction":{"name":"updateEstimateItem","fullyQualifiedName":"PageObjects.updateEstimateItem","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","organizationId":"62a1cace93e9481dacb0f741","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","collectionId":"Estimate Process_PageObjects","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async (estimateId, estItemNumber, estItemDes, estItemQty, estItemAmt, estItemId) => {\n  await EstimateItem_Update.run({\n    \"estItemNumber\": estItemNumber,\n    \"estItemDes\": estItemDes,\n    \"estItemQty\": estItemQty,\n    \"estItemAmt\": estItemAmt,\n    \"estItemId\": estItemId\n  }).then(() => {\n    return Promise.all([EstimateItem_Select.run({\n      'estimateId': estimateId\n    })]);\n  }).then(() => {\n    return GlobalVariables.resetWidgets([\"EstimateDetails_Container\", \"EstimateItem_Table\"]);\n  }).then(res => showAlert(\"Update Done\", \"success\")).catch(error => showAlert(error.toString(), \"error\"));\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"estimateId"},{"name":"estItemNumber"},{"name":"estItemDes"},{"name":"estItemQty"},{"name":"estItemAmt"},{"name":"estItemId"}],"isAsync":true},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async (estimateId, estItemNumber, estItemDes, estItemQty, estItemAmt, estItemId) => {\n  await EstimateItem_Update.run({\n    \"estItemNumber\": estItemNumber,\n    \"estItemDes\": estItemDes,\n    \"estItemQty\": estItemQty,\n    \"estItemAmt\": estItemAmt,\n    \"estItemId\": estItemId\n  }).then(() => {\n    return Promise.all([EstimateItem_Select.run({\n      'estimateId': estimateId\n    })]);\n  }).then(() => {\n    return GlobalVariables.resetWidgets([\"EstimateDetails_Container\", \"EstimateItem_Table\"]);\n  }).then(res => showAlert(\"Update Done\", \"success\")).catch(error => showAlert(error.toString(), \"error\"));\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"id":"Estimate Process_PageObjects.updateEstimateItem","deleted":false,"gitSyncId":"62c6dd94aa3be20812d63927_62c6dd94aa3be20812d6394e"},{"pluginType":"JS","pluginId":"js-plugin","unpublishedAction":{"name":"testRunRefreshFunc","fullyQualifiedName":"FileUploadProcess.testRunRefreshFunc","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","collectionId":"Estimate Process_FileUploadProcess","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async () => {\n  Promise.all([resetWidget(\"FilePicker\"), storeValue('ActualFileName', \"\"), storeValue('disable', false), FileUploadProcess.clearError()]);\n}","selfReferencingDataPaths":[],"jsArguments":[]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async () => {\n  Promise.all([resetWidget(\"FilePicker\"), storeValue('ActualFileName', \"\"), storeValue('disable', false), FileUploadProcess.clearError()]);\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-08T11:42:38Z"},"publishedAction":{"name":"testRunRefreshFunc","fullyQualifiedName":"FileUploadProcess.testRunRefreshFunc","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","collectionId":"Estimate Process_FileUploadProcess","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async () => {\n  Promise.all([resetWidget(\"FilePicker\"), storeValue('ActualFileName', \"\"), storeValue('disable', false), FileUploadProcess.clearError()]);\n}","selfReferencingDataPaths":[],"jsArguments":[]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async () => {\n  Promise.all([resetWidget(\"FilePicker\"), storeValue('ActualFileName', \"\"), storeValue('disable', false), FileUploadProcess.clearError()]);\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-08T11:42:38Z"},"id":"Estimate Process_FileUploadProcess.testRunRefreshFunc","deleted":false,"gitSyncId":"67f4d81e59d0ae34925978ba_67f50bae59d0ae3492597b8e"},{"pluginType":"DB","pluginId":"mysql-plugin","unpublishedAction":{"name":"EstimateItem_Insert","datasource":{"name":"appsmithmysql","pluginId":"mysql-plugin","messages":[],"isAutoGenerated":false,"id":"appsmithmysql","deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"INSERT INTO EstimateItem        \t\t                                           (EstimateId,NUMBER,Description,Quantity,Amount)\nVALUES\n            ({{this.params?.estimateId}},\n            {{this.params?.estItemNumber}},\n            {{this.params?.estItemDes}},\n            {{parseFloat(this.params?.estItemQty)}},\n            {{parseFloat(this.params?.estItemAmt)}});","selfReferencingDataPaths":[],"pluginSpecifiedTemplates":[{"value":true}]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["this.params?.estimateId","parseFloat(this.params?.estItemQty)","this.params?.estItemDes","this.params?.estItemNumber","parseFloat(this.params?.estItemAmt)"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"publishedAction":{"name":"EstimateItem_Insert","datasource":{"name":"appsmithmysql","pluginId":"mysql-plugin","messages":[],"isAutoGenerated":false,"id":"appsmithmysql","deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"INSERT INTO EstimateItem        \t\t                                           (EstimateId,NUMBER,Description,Quantity,Amount)\nVALUES\n            ({{this.params?.estimateId}},\n            {{this.params?.estItemNumber}},\n            {{this.params?.estItemDes}},\n            {{parseFloat(this.params?.estItemQty)}},\n            {{parseFloat(this.params?.estItemAmt)}});","selfReferencingDataPaths":[],"pluginSpecifiedTemplates":[{"value":true}]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["this.params?.estimateId","parseFloat(this.params?.estItemQty)","this.params?.estItemDes","this.params?.estItemNumber","parseFloat(this.params?.estItemAmt)"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"id":"Estimate Process_EstimateItem_Insert","deleted":false,"gitSyncId":"62c6dd94aa3be20812d63927_62c6dd94aa3be20812d63941"},{"pluginType":"JS","pluginId":"js-plugin","unpublishedAction":{"name":"getState","fullyQualifiedName":"Process.getState","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","organizationId":"62a1cace93e9481dacb0f741","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","collectionId":"Estimate Process_Process","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"stateName => {\n  return EstimateStatesJS.states.find(state => {\n    return state.Name == stateName;\n  });\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"stateName"}],"isAsync":false},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["stateName => {\n  return EstimateStatesJS.states.find(state => {\n    return state.Name == stateName;\n  });\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"publishedAction":{"name":"getState","fullyQualifiedName":"Process.getState","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","organizationId":"62a1cace93e9481dacb0f741","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","collectionId":"Estimate Process_Process","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"stateName => {\n  return EstimateStatesJS.states.find(state => {\n    return state.Name == stateName;\n  });\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"stateName"}],"isAsync":false},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["stateName => {\n  return EstimateStatesJS.states.find(state => {\n    return state.Name == stateName;\n  });\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"id":"Estimate Process_Process.getState","deleted":false,"gitSyncId":"62c6dd94aa3be20812d63927_62c6dd94aa3be20812d6394b"},{"pluginType":"DB","pluginId":"mysql-plugin","unpublishedAction":{"name":"EAttachments_Delete","datasource":{"name":"appsmithmysql","pluginId":"mysql-plugin","messages":[],"isAutoGenerated":false,"id":"appsmithmysql","deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"DELETE \nFROM EstimatesAttachments\nWHERE Id = {{this.params?.FileId}};\n","selfReferencingDataPaths":[],"pluginSpecifiedTemplates":[{"value":true}]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["this.params?.FileId"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-11T05:53:04Z"},"publishedAction":{"name":"EAttachments_Delete","datasource":{"name":"appsmithmysql","pluginId":"mysql-plugin","messages":[],"isAutoGenerated":false,"id":"appsmithmysql","deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"DELETE \nFROM EstimatesAttachments\nWHERE Id = {{this.params?.FileId}};\n","selfReferencingDataPaths":[],"pluginSpecifiedTemplates":[{"value":true}]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["this.params?.FileId"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-11T05:53:04Z"},"id":"Estimate Process_EAttachments_Delete","deleted":false,"gitSyncId":"67f4d81e59d0ae34925978ba_67f8ae40358e8b1adbeac32e"},{"pluginType":"DB","pluginId":"mysql-plugin","unpublishedAction":{"name":"EAttachments_Select","datasource":{"name":"appsmithmysql","pluginId":"mysql-plugin","messages":[],"isAutoGenerated":false,"id":"appsmithmysql","deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"SELECT * FROM EstimatesAttachments\nWHERE EstimatesAttachments.EstimateId = {{this.params?.EId}}\n","selfReferencingDataPaths":[],"pluginSpecifiedTemplates":[{"value":true}]},"executeOnLoad":true,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["this.params?.EId"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-08T11:41:20Z"},"publishedAction":{"name":"EAttachments_Select","datasource":{"name":"appsmithmysql","pluginId":"mysql-plugin","messages":[],"isAutoGenerated":false,"id":"appsmithmysql","deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"SELECT * FROM EstimatesAttachments\nWHERE EstimatesAttachments.EstimateId = {{this.params?.EId}}\n","selfReferencingDataPaths":[],"pluginSpecifiedTemplates":[{"value":true}]},"executeOnLoad":true,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["this.params?.EId"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-08T11:41:20Z"},"id":"Estimate Process_EAttachments_Select","deleted":false,"gitSyncId":"67f4d81e59d0ae34925978ba_67f50b6059d0ae3492597b6c"},{"pluginType":"DB","pluginId":"mysql-plugin","unpublishedAction":{"name":"Estimate_State_Update","datasource":{"name":"appsmithmysql","pluginId":"mysql-plugin","messages":[],"isAutoGenerated":false,"id":"appsmithmysql","deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"UPDATE Estimate \nSET    CurrentState = {{this.params?.nextState}},\n\t\t   Deleted = 0\nWHERE  Estimate.Id = {{this.params?.Id}};","selfReferencingDataPaths":[]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["this.params?.nextState","this.params?.Id"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"publishedAction":{"name":"Estimate_State_Update","datasource":{"name":"appsmithmysql","pluginId":"mysql-plugin","messages":[],"isAutoGenerated":false,"id":"appsmithmysql","deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"UPDATE Estimate \nSET    CurrentState = {{this.params?.nextState}},\n\t\t   Deleted = 0\nWHERE  Estimate.Id = {{this.params?.Id}};","selfReferencingDataPaths":[]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["this.params?.nextState","this.params?.Id"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"id":"Estimate Process_Estimate_State_Update","deleted":false,"gitSyncId":"62c6dd94aa3be20812d63927_62c6dd94aa3be20812d6395a"},{"pluginType":"DB","pluginId":"mysql-plugin","unpublishedAction":{"name":"EstimateItem_Select","datasource":{"name":"appsmithmysql","pluginId":"mysql-plugin","messages":[],"isAutoGenerated":false,"id":"appsmithmysql","deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"SELECT * \nFROM   EstimateItem \nWHERE  EstimateItem.Deleted = 0  \n       AND EstimateItem.EstimateId = {{this.params?.estimateId}}\nORDER BY \n       Id ","selfReferencingDataPaths":[],"pluginSpecifiedTemplates":[{"value":true}]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["this.params?.estimateId"],"userSetOnLoad":true,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"publishedAction":{"name":"EstimateItem_Select","datasource":{"name":"appsmithmysql","pluginId":"mysql-plugin","messages":[],"isAutoGenerated":false,"id":"appsmithmysql","deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"SELECT * \nFROM   EstimateItem \nWHERE  EstimateItem.Deleted = 0  \n       AND EstimateItem.EstimateId = {{this.params?.estimateId}}\nORDER BY \n       Id ","selfReferencingDataPaths":[],"pluginSpecifiedTemplates":[{"value":true}]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["this.params?.estimateId"],"userSetOnLoad":true,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"id":"Estimate Process_EstimateItem_Select","deleted":false,"gitSyncId":"62c6dd94aa3be20812d63927_62c6dd94aa3be20812d63960"},{"pluginType":"DB","pluginId":"mysql-plugin","unpublishedAction":{"name":"EAttachments_Insert","datasource":{"name":"appsmithmysql","pluginId":"mysql-plugin","messages":[],"isAutoGenerated":false,"id":"appsmithmysql","deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"INSERT INTO EstimatesAttachments\n   (EstimateId, FileName, Comments)\nVALUES (\n       {{this.params?.EId}},\n       {{this.params?.FileName}},\n       {{this.params?.Comments}}\n)\n","selfReferencingDataPaths":[],"pluginSpecifiedTemplates":[{"value":true}]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["this.params?.EId","this.params?.Comments","this.params?.FileName"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-11T05:53:27Z"},"publishedAction":{"name":"EAttachments_Insert","datasource":{"name":"appsmithmysql","pluginId":"mysql-plugin","messages":[],"isAutoGenerated":false,"id":"appsmithmysql","deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"INSERT INTO EstimatesAttachments\n   (EstimateId, FileName, Comments)\nVALUES (\n       {{this.params?.EId}},\n       {{this.params?.FileName}},\n       {{this.params?.Comments}}\n)\n","selfReferencingDataPaths":[],"pluginSpecifiedTemplates":[{"value":true}]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["this.params?.EId","this.params?.Comments","this.params?.FileName"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-11T05:53:27Z"},"id":"Estimate Process_EAttachments_Insert","deleted":false,"gitSyncId":"67f4d81e59d0ae34925978ba_67f8ae57358e8b1adbeac330"},{"pluginType":"API","pluginId":"restapi-plugin","unpublishedAction":{"name":"SpecificFilesInDrive_Select","datasource":{"name":"MS Graph","pluginId":"restapi-plugin","messages":[],"isAutoGenerated":false,"id":"MS Graph","deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","path":"/v1.0/drives/{{this.params.DriveId}}/items/{{this.params.DriveItemId}}/children","headers":[],"autoGeneratedHeaders":[],"encodeParamsToggle":true,"queryParameters":[{"key":"$filter","value":"name eq '{{this.params.FileName}}'"}],"body":"","bodyFormData":[],"httpMethod":"GET","httpVersion":"HTTP11","selfReferencingDataPaths":[],"pluginSpecifiedTemplates":[{"value":true}],"formData":{"apiContentType":"none"}},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"path"},{"key":"queryParameters[0].value"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["this.params.DriveItemId","this.params.DriveId","this.params.FileName"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-11T05:47:16Z"},"publishedAction":{"name":"SpecificFilesInDrive_Select","datasource":{"name":"MS Graph","pluginId":"restapi-plugin","messages":[],"isAutoGenerated":false,"id":"MS Graph","deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","path":"/v1.0/drives/{{this.params.DriveId}}/items/{{this.params.DriveItemId}}/children","headers":[],"autoGeneratedHeaders":[],"encodeParamsToggle":true,"queryParameters":[{"key":"$filter","value":"name eq '{{this.params.FileName}}'"}],"body":"","bodyFormData":[],"httpMethod":"GET","httpVersion":"HTTP11","selfReferencingDataPaths":[],"pluginSpecifiedTemplates":[{"value":true}],"formData":{"apiContentType":"none"}},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"path"},{"key":"queryParameters[0].value"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["this.params.DriveItemId","this.params.DriveId","this.params.FileName"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-11T05:47:16Z"},"id":"Estimate Process_SpecificFilesInDrive_Select","deleted":false,"gitSyncId":"67f4d81e59d0ae34925978ba_67f8ace4358e8b1adbeac32a"},{"pluginType":"DB","pluginId":"mysql-plugin","unpublishedAction":{"name":"Estimate_Update","datasource":{"name":"appsmithmysql","pluginId":"mysql-plugin","messages":[],"isAutoGenerated":false,"id":"appsmithmysql","deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"UPDATE Estimate \nSET    Number = {{this.params?.number}},\n       EmailList = {{this.params?.email}},\n\t     CCEmailList = {{this.params?.ccemail}},\n\t     Notes = {{this.params?.note}}\nWHERE  Id = {{this.params?.id}}","selfReferencingDataPaths":[],"pluginSpecifiedTemplates":[{"value":true}]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["this.params?.number","this.params?.note","this.params?.email","this.params?.ccemail","this.params?.id"],"userSetOnLoad":false,"confirmBeforeExecute":true,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"publishedAction":{"name":"Estimate_Update","datasource":{"name":"appsmithmysql","pluginId":"mysql-plugin","messages":[],"isAutoGenerated":false,"id":"appsmithmysql","deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"UPDATE Estimate \nSET    Number = {{this.params?.number}},\n       EmailList = {{this.params?.email}},\n\t     CCEmailList = {{this.params?.ccemail}},\n\t     Notes = {{this.params?.note}}\nWHERE  Id = {{this.params?.id}}","selfReferencingDataPaths":[],"pluginSpecifiedTemplates":[{"value":true}]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["this.params?.number","this.params?.note","this.params?.email","this.params?.ccemail","this.params?.id"],"userSetOnLoad":false,"confirmBeforeExecute":true,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"id":"Estimate Process_Estimate_Update","deleted":false,"gitSyncId":"62c6dd94aa3be20812d63927_62c6dd94aa3be20812d63952"},{"pluginType":"API","pluginId":"restapi-plugin","unpublishedAction":{"name":"UploadSession_Create","datasource":{"name":"MS Graph","pluginId":"restapi-plugin","messages":[],"isAutoGenerated":false,"id":"MS Graph","deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","path":"/v1.0/drives/{{this.params.DriveId}}/items/{{this.params.DriveItemId}}:/{{this.params.fileName}}:/createUploadSession","headers":[{"key":"content-type","value":"application/json"}],"autoGeneratedHeaders":[{"key":"content-type","value":"application/json"}],"encodeParamsToggle":true,"queryParameters":[],"body":"","bodyFormData":[],"httpMethod":"POST","httpVersion":"HTTP11","selfReferencingDataPaths":[],"pluginSpecifiedTemplates":[{"value":true}],"formData":{"apiContentType":"none"}},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"path"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["this.params.DriveItemId","this.params.fileName","this.params.DriveId"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-11T05:47:57Z"},"publishedAction":{"name":"UploadSession_Create","datasource":{"name":"MS Graph","pluginId":"restapi-plugin","messages":[],"isAutoGenerated":false,"id":"MS Graph","deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","path":"/v1.0/drives/{{this.params.DriveId}}/items/{{this.params.DriveItemId}}:/{{this.params.fileName}}:/createUploadSession","headers":[{"key":"content-type","value":"application/json"}],"autoGeneratedHeaders":[{"key":"content-type","value":"application/json"}],"encodeParamsToggle":true,"queryParameters":[],"body":"","bodyFormData":[],"httpMethod":"POST","httpVersion":"HTTP11","selfReferencingDataPaths":[],"pluginSpecifiedTemplates":[{"value":true}],"formData":{"apiContentType":"none"}},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"path"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["this.params.DriveItemId","this.params.fileName","this.params.DriveId"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-11T05:47:57Z"},"id":"Estimate Process_UploadSession_Create","deleted":false,"gitSyncId":"67f4d81e59d0ae34925978ba_67f8ad0d358e8b1adbeac32c"},{"pluginType":"DB","pluginId":"mysql-plugin","unpublishedAction":{"name":"EstimateItem_Update","datasource":{"name":"appsmithmysql","pluginId":"mysql-plugin","messages":[],"isAutoGenerated":false,"id":"appsmithmysql","deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"UPDATE EstimateItem \nSET    Number = {{this.params?.estItemNumber}},\n       Description = {{this.params?.estItemDes}},\n       Quantity = {{parseFloat(this.params?.estItemQty)}},\n       Amount = {{parseFloat(this.params?.estItemAmt)}}\nWHERE  Id = {{this.params?.estItemId}} ","selfReferencingDataPaths":[],"pluginSpecifiedTemplates":[{"value":true}]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["parseFloat(this.params?.estItemQty)","this.params?.estItemDes","this.params?.estItemId","this.params?.estItemNumber","parseFloat(this.params?.estItemAmt)"],"userSetOnLoad":false,"confirmBeforeExecute":true,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"publishedAction":{"name":"EstimateItem_Update","datasource":{"name":"appsmithmysql","pluginId":"mysql-plugin","messages":[],"isAutoGenerated":false,"id":"appsmithmysql","deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"UPDATE EstimateItem \nSET    Number = {{this.params?.estItemNumber}},\n       Description = {{this.params?.estItemDes}},\n       Quantity = {{parseFloat(this.params?.estItemQty)}},\n       Amount = {{parseFloat(this.params?.estItemAmt)}}\nWHERE  Id = {{this.params?.estItemId}} ","selfReferencingDataPaths":[],"pluginSpecifiedTemplates":[{"value":true}]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["parseFloat(this.params?.estItemQty)","this.params?.estItemDes","this.params?.estItemId","this.params?.estItemNumber","parseFloat(this.params?.estItemAmt)"],"userSetOnLoad":false,"confirmBeforeExecute":true,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"id":"Estimate Process_EstimateItem_Update","deleted":false,"gitSyncId":"62c6dd94aa3be20812d63927_62c6dd94aa3be20812d63959"},{"pluginType":"DB","pluginId":"mysql-plugin","unpublishedAction":{"name":"UserRoles_Select","datasource":{"name":"appsmithmysql","pluginId":"mysql-plugin","messages":[],"isAutoGenerated":false,"id":"appsmithmysql","deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"SELECT Role.Name \nFROM Role \nINNER JOIN UserRole ON Role.Id  = UserRole.RoleId  \nINNER JOIN AppUser ON UserRole.UserId = AppUser.Id  \nWHERE AppUser.UserName = '{{appsmith.user.username.split('@')[0]}}'","selfReferencingDataPaths":[],"pluginSpecifiedTemplates":[{"value":true}]},"executeOnLoad":true,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["appsmith.user.username.split('@')[0]"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-02-23T09:01:18Z"},"publishedAction":{"name":"UserRoles_Select","datasource":{"name":"appsmithmysql","pluginId":"mysql-plugin","messages":[],"isAutoGenerated":false,"id":"appsmithmysql","deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"SELECT Role.Name \nFROM Role \nINNER JOIN UserRole ON Role.Id  = UserRole.RoleId  \nINNER JOIN AppUser ON UserRole.UserId = AppUser.Id  \nWHERE AppUser.UserName = '{{appsmith.user.username.split('@')[0]}}'","selfReferencingDataPaths":[],"pluginSpecifiedTemplates":[{"value":true}]},"executeOnLoad":true,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["appsmith.user.username.split('@')[0]"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-02-23T09:01:18Z"},"id":"Estimate Process_UserRoles_Select","deleted":false,"gitSyncId":"67bae209bfd36a5abab32b21_67bae3debfd36a5abab32b96"},{"pluginType":"DB","pluginId":"mysql-plugin","unpublishedAction":{"name":"EstimateItem_Delete","datasource":{"name":"appsmithmysql","pluginId":"mysql-plugin","messages":[],"isAutoGenerated":false,"id":"appsmithmysql","deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"UPDATE EstimateItem \nSET    EstimateItem.Deleted = 1\nWHERE  EstimateItem.Id = {{this.params?.estimateitemid}} ","selfReferencingDataPaths":[],"pluginSpecifiedTemplates":[{"value":true}]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["this.params?.estimateitemid"],"userSetOnLoad":false,"confirmBeforeExecute":true,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"publishedAction":{"name":"EstimateItem_Delete","datasource":{"name":"appsmithmysql","pluginId":"mysql-plugin","messages":[],"isAutoGenerated":false,"id":"appsmithmysql","deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"UPDATE EstimateItem \nSET    EstimateItem.Deleted = 1\nWHERE  EstimateItem.Id = {{this.params?.estimateitemid}} ","selfReferencingDataPaths":[],"pluginSpecifiedTemplates":[{"value":true}]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["this.params?.estimateitemid"],"userSetOnLoad":false,"confirmBeforeExecute":true,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"id":"Estimate Process_EstimateItem_Delete","deleted":false,"gitSyncId":"62c6dd94aa3be20812d63927_62c6dd94aa3be20812d6393f"},{"pluginType":"DB","pluginId":"mysql-plugin","unpublishedAction":{"name":"CorporateAdmin_Select","datasource":{"name":"appsmithmysql","pluginId":"mysql-plugin","messages":[],"isAutoGenerated":false,"id":"appsmithmysql","deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"SELECT \n     UserName as name \nFROM \n     AppUser \nINNER JOIN \n     UserRole ON AppUser.Id = UserRole.UserId INNER JOIN Role ON UserRole.RoleId = Role.Id\nWHERE \n     Role.Name IN ({{\"'\"+GlobalVariables.roles_with_access.join(\"','\")+\"'\"}}\n)\n","selfReferencingDataPaths":[],"pluginSpecifiedTemplates":[{"value":false}]},"executeOnLoad":true,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["\"'\"+GlobalVariables.roles_with_access.join(\"','\")+\"'\""],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"publishedAction":{"name":"CorporateAdmin_Select","datasource":{"name":"appsmithmysql","pluginId":"mysql-plugin","messages":[],"isAutoGenerated":false,"id":"appsmithmysql","deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"SELECT \n     UserName as name \nFROM \n     AppUser \nINNER JOIN \n     UserRole ON AppUser.Id = UserRole.UserId INNER JOIN Role ON UserRole.RoleId = Role.Id\nWHERE \n     Role.Name IN ({{\"'\"+GlobalVariables.roles_with_access.join(\"','\")+\"'\"}}\n)\n","selfReferencingDataPaths":[],"pluginSpecifiedTemplates":[{"value":false}]},"executeOnLoad":true,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["\"'\"+GlobalVariables.roles_with_access.join(\"','\")+\"'\""],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"id":"Estimate Process_CorporateAdmin_Select","deleted":false,"gitSyncId":"62c6dd94aa3be20812d63927_62c715efaa3be20812d63a46"},{"pluginType":"API","pluginId":"restapi-plugin","unpublishedAction":{"name":"ListItemMetaDataCreate_Select","datasource":{"name":"MS Graph","pluginId":"restapi-plugin","messages":[],"isAutoGenerated":false,"id":"MS Graph","deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","path":"/v1.0/sites/{{this.params.siteId}}/lists/{{this.params.listId}}/items","headers":[],"encodeParamsToggle":true,"queryParameters":[{"key":"$expand","value":"driveItem"},{"key":"$filter","value":"fields/{{this.params.NumberName}} eq null"},{"key":"$select","value":"id"}],"body":"","bodyFormData":[],"httpMethod":"GET","httpVersion":"HTTP11","selfReferencingDataPaths":[],"pluginSpecifiedTemplates":[{"value":true}],"formData":{"apiContentType":"none"}},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"path"},{"key":"queryParameters[1].value"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["this.params.siteId","this.params.listId","this.params.NumberName"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-11T05:27:48Z"},"publishedAction":{"name":"ListItemMetaDataCreate_Select","datasource":{"name":"MS Graph","pluginId":"restapi-plugin","messages":[],"isAutoGenerated":false,"id":"MS Graph","deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","path":"/v1.0/sites/{{this.params.siteId}}/lists/{{this.params.listId}}/items","headers":[],"encodeParamsToggle":true,"queryParameters":[{"key":"$expand","value":"driveItem"},{"key":"$filter","value":"fields/{{this.params.NumberName}} eq null"},{"key":"$select","value":"id"}],"body":"","bodyFormData":[],"httpMethod":"GET","httpVersion":"HTTP11","selfReferencingDataPaths":[],"pluginSpecifiedTemplates":[{"value":true}],"formData":{"apiContentType":"none"}},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"path"},{"key":"queryParameters[1].value"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["this.params.siteId","this.params.listId","this.params.NumberName"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-11T05:27:48Z"},"id":"Estimate Process_ListItemMetaDataCreate_Select","deleted":false,"gitSyncId":"67f4d81e59d0ae34925978ba_67f8a854358e8b1adbeac288"},{"pluginType":"API","pluginId":"restapi-plugin","unpublishedAction":{"name":"File_Delete","datasource":{"name":"MS Graph","pluginId":"restapi-plugin","messages":[],"isAutoGenerated":false,"id":"MS Graph","deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","path":"/v1.0/drives/{{this.params.driveId}}/items/{{this.params.itemId}}","headers":[{"key":"Content-type","value":"text/plain"}],"autoGeneratedHeaders":[{"key":"content-type","value":"application/json"}],"encodeParamsToggle":true,"queryParameters":[],"body":"","bodyFormData":[],"httpMethod":"DELETE","httpVersion":"HTTP11","selfReferencingDataPaths":[],"pluginSpecifiedTemplates":[{"value":true}],"formData":{"apiContentType":"none"}},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"path"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["this.params.driveId","this.params.itemId"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-11T05:19:41Z"},"publishedAction":{"name":"File_Delete","datasource":{"name":"MS Graph","pluginId":"restapi-plugin","messages":[],"isAutoGenerated":false,"id":"MS Graph","deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","path":"/v1.0/drives/{{this.params.driveId}}/items/{{this.params.itemId}}","headers":[{"key":"Content-type","value":"text/plain"}],"autoGeneratedHeaders":[{"key":"content-type","value":"application/json"}],"encodeParamsToggle":true,"queryParameters":[],"body":"","bodyFormData":[],"httpMethod":"DELETE","httpVersion":"HTTP11","selfReferencingDataPaths":[],"pluginSpecifiedTemplates":[{"value":true}],"formData":{"apiContentType":"none"}},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"path"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["this.params.driveId","this.params.itemId"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-11T05:19:41Z"},"id":"Estimate Process_File_Delete","deleted":false,"gitSyncId":"67f4d81e59d0ae34925978ba_67f8a66d358e8b1adbeac285"},{"pluginType":"API","pluginId":"restapi-plugin","unpublishedAction":{"name":"FileMetadata_Create","datasource":{"name":"MS Graph","pluginId":"restapi-plugin","messages":[],"isAutoGenerated":false,"id":"MS Graph","deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","path":"/v1.0/sites/{{this.params.siteId}}/lists/{{this.params.listId}}/items/{{this.params.listItemId}}/fields","headers":[{"key":"content-type","value":"application/json"}],"autoGeneratedHeaders":[{"key":"content-type","value":"application/json"}],"encodeParamsToggle":true,"queryParameters":[],"body":"{{\nthis.params.fileParams\n}}","bodyFormData":[],"httpMethod":"PATCH","httpVersion":"HTTP11","selfReferencingDataPaths":[],"pluginSpecifiedTemplates":[{"value":true}],"formData":{"apiContentType":"none"}},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"path"},{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["this.params.siteId","this.params.listItemId","this.params.listId","\nthis.params.fileParams\n"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-11T05:17:30Z"},"publishedAction":{"name":"FileMetadata_Create","datasource":{"name":"MS Graph","pluginId":"restapi-plugin","messages":[],"isAutoGenerated":false,"id":"MS Graph","deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","path":"/v1.0/sites/{{this.params.siteId}}/lists/{{this.params.listId}}/items/{{this.params.listItemId}}/fields","headers":[{"key":"content-type","value":"application/json"}],"autoGeneratedHeaders":[{"key":"content-type","value":"application/json"}],"encodeParamsToggle":true,"queryParameters":[],"body":"{{\nthis.params.fileParams\n}}","bodyFormData":[],"httpMethod":"PATCH","httpVersion":"HTTP11","selfReferencingDataPaths":[],"pluginSpecifiedTemplates":[{"value":true}],"formData":{"apiContentType":"none"}},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"path"},{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["this.params.siteId","this.params.listItemId","this.params.listId","\nthis.params.fileParams\n"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-11T05:17:30Z"},"id":"Estimate Process_FileMetadata_Create","deleted":false,"gitSyncId":"67f4d81e59d0ae34925978ba_67f8a5ea358e8b1adbeac27e"},{"pluginType":"DB","pluginId":"mysql-plugin","unpublishedAction":{"name":"EAttachments_Update","datasource":{"name":"appsmithmysql","pluginId":"mysql-plugin","messages":[],"isAutoGenerated":false,"id":"appsmithmysql","deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"UPDATE EstimatesAttachments\n  SET Comments = {{this.params?.FileComments}}\n  WHERE Id = {{this.params?.FileId}};\n","selfReferencingDataPaths":[],"pluginSpecifiedTemplates":[{"value":true}]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["this.params?.FileComments","this.params?.FileId"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-11T05:54:25Z"},"publishedAction":{"name":"EAttachments_Update","datasource":{"name":"appsmithmysql","pluginId":"mysql-plugin","messages":[],"isAutoGenerated":false,"id":"appsmithmysql","deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"UPDATE EstimatesAttachments\n  SET Comments = {{this.params?.FileComments}}\n  WHERE Id = {{this.params?.FileId}};\n","selfReferencingDataPaths":[],"pluginSpecifiedTemplates":[{"value":true}]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["this.params?.FileComments","this.params?.FileId"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-11T05:54:25Z"},"id":"Estimate Process_EAttachments_Update","deleted":false,"gitSyncId":"67f4d81e59d0ae34925978ba_67f8ae91358e8b1adbeac332"},{"pluginType":"API","pluginId":"restapi-plugin","unpublishedAction":{"name":"MetaData_Select","datasource":{"name":"MS Graph","pluginId":"restapi-plugin","messages":[],"isAutoGenerated":false,"id":"MS Graph","deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","path":"/v1.0/sites/{{this.params.siteId}}/lists/{{this.params.listId}}/items","headers":[],"autoGeneratedHeaders":[],"encodeParamsToggle":true,"queryParameters":[{"key":"$expand","value":"driveItem"},{"key":"$filter","value":"fields/{{this.params.NumberName}} eq '{{this.params.Number}}'"},{"key":"$select","value":"fields"}],"body":"","bodyFormData":[],"httpMethod":"GET","httpVersion":"HTTP11","selfReferencingDataPaths":[],"pluginSpecifiedTemplates":[{"value":true}],"formData":{"apiContentType":"none"}},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"path"},{"key":"queryParameters[1].value"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["this.params.Number","this.params.siteId","this.params.listId","this.params.NumberName"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-11T05:45:27Z"},"publishedAction":{"name":"MetaData_Select","datasource":{"name":"MS Graph","pluginId":"restapi-plugin","messages":[],"isAutoGenerated":false,"id":"MS Graph","deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","path":"/v1.0/sites/{{this.params.siteId}}/lists/{{this.params.listId}}/items","headers":[],"autoGeneratedHeaders":[],"encodeParamsToggle":true,"queryParameters":[{"key":"$expand","value":"driveItem"},{"key":"$filter","value":"fields/{{this.params.NumberName}} eq '{{this.params.Number}}'"},{"key":"$select","value":"fields"}],"body":"","bodyFormData":[],"httpMethod":"GET","httpVersion":"HTTP11","selfReferencingDataPaths":[],"pluginSpecifiedTemplates":[{"value":true}],"formData":{"apiContentType":"none"}},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"path"},{"key":"queryParameters[1].value"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["this.params.Number","this.params.siteId","this.params.listId","this.params.NumberName"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-11T05:45:27Z"},"id":"Estimate Process_MetaData_Select","deleted":false,"gitSyncId":"67f4d81e59d0ae34925978ba_67f8ac77358e8b1adbeac328"},{"pluginType":"API","pluginId":"restapi-plugin","unpublishedAction":{"name":"ListItemsDelete_Select","datasource":{"name":"MS Graph","pluginId":"restapi-plugin","messages":[],"isAutoGenerated":false,"id":"MS Graph","deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","path":"/v1.0/sites/{{this.params.siteId}}/lists/{{this.params.listId}}/items","headers":[{"key":"content-type","value":"text/plain"}],"autoGeneratedHeaders":[],"encodeParamsToggle":true,"queryParameters":[{"key":"$expand","value":"driveItem"},{"key":"$filter","value":"fields/{{this.params.NumberName}} eq '{{this.params.Number}}'"},{"key":"$select","value":"id"}],"body":"","bodyFormData":[],"httpMethod":"GET","httpVersion":"HTTP11","selfReferencingDataPaths":[],"pluginSpecifiedTemplates":[{"value":true}],"formData":{"apiContentType":"none"}},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"path"},{"key":"queryParameters[1].value"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["this.params.Number","this.params.siteId","this.params.listId","this.params.NumberName"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-11T05:43:22Z"},"publishedAction":{"name":"ListItemsDelete_Select","datasource":{"name":"MS Graph","pluginId":"restapi-plugin","messages":[],"isAutoGenerated":false,"id":"MS Graph","deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","path":"/v1.0/sites/{{this.params.siteId}}/lists/{{this.params.listId}}/items","headers":[{"key":"content-type","value":"text/plain"}],"autoGeneratedHeaders":[],"encodeParamsToggle":true,"queryParameters":[{"key":"$expand","value":"driveItem"},{"key":"$filter","value":"fields/{{this.params.NumberName}} eq '{{this.params.Number}}'"},{"key":"$select","value":"id"}],"body":"","bodyFormData":[],"httpMethod":"GET","httpVersion":"HTTP11","selfReferencingDataPaths":[],"pluginSpecifiedTemplates":[{"value":true}],"formData":{"apiContentType":"none"}},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"path"},{"key":"queryParameters[1].value"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["this.params.Number","this.params.siteId","this.params.listId","this.params.NumberName"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-11T05:43:22Z"},"id":"Estimate Process_ListItemsDelete_Select","deleted":false,"gitSyncId":"67f4d81e59d0ae34925978ba_67f8abfa358e8b1adbeac326"},{"pluginType":"API","pluginId":"restapi-plugin","unpublishedAction":{"name":"FileUpload_Create","datasource":{"name":"DEFAULT_REST_DATASOURCE","pluginId":"restapi-plugin","datasourceConfiguration":{"url":""},"invalids":[],"messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","path":"https://{{ this.params.uploadurl }}","headers":[{"key":"Content-Length","value":"{{this.params.range}}"},{"key":"Content-Range","value":"bytes {{this.params.startindex}}-{{this.params.endindex}}/{{this.params.filesize}}"},{"key":"content-type","value":"application/pdf"}],"autoGeneratedHeaders":[{"key":"content-type","value":"application/json"}],"encodeParamsToggle":false,"queryParameters":[],"body":"{{FilePicker.files[0]?.data}}","bodyFormData":[],"httpMethod":"PUT","httpVersion":"HTTP11","selfReferencingDataPaths":[],"pluginSpecifiedTemplates":[{"value":false}],"formData":{"apiContentType":"none"}},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"path"},{"key":"headers[0].value"},{"key":"headers[1].value"},{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["FilePicker.files[0]?.data","this.params.endindex","this.params.filesize"," this.params.uploadurl ","this.params.range","this.params.startindex"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-11T05:15:07Z"},"publishedAction":{"name":"FileUpload_Create","datasource":{"name":"DEFAULT_REST_DATASOURCE","pluginId":"restapi-plugin","datasourceConfiguration":{"url":""},"invalids":[],"messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","path":"https://{{ this.params.uploadurl }}","headers":[{"key":"Content-Length","value":"{{this.params.range}}"},{"key":"Content-Range","value":"bytes {{this.params.startindex}}-{{this.params.endindex}}/{{this.params.filesize}}"},{"key":"content-type","value":"application/pdf"}],"autoGeneratedHeaders":[{"key":"content-type","value":"application/json"}],"encodeParamsToggle":false,"queryParameters":[],"body":"{{FilePicker.files[0]?.data}}","bodyFormData":[],"httpMethod":"PUT","httpVersion":"HTTP11","selfReferencingDataPaths":[],"pluginSpecifiedTemplates":[{"value":false}],"formData":{"apiContentType":"none"}},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"path"},{"key":"headers[0].value"},{"key":"headers[1].value"},{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["FilePicker.files[0]?.data","this.params.endindex","this.params.filesize"," this.params.uploadurl ","this.params.range","this.params.startindex"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-11T05:15:07Z"},"id":"Estimate Process_FileUpload_Create","deleted":false,"gitSyncId":"67f4d81e59d0ae34925978ba_67f8a55b358e8b1adbeac27a"},{"pluginType":"DB","pluginId":"mysql-plugin","unpublishedAction":{"name":"Estimate_Select","datasource":{"name":"appsmithmysql","pluginId":"mysql-plugin","messages":[],"isAutoGenerated":false,"id":"appsmithmysql","deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"SELECT Estimate.Id AS EId,\n\t\t   Estimate.Number as EstimateNumber,\n \t\t   Estimate.EmailList,\n\t   \t Estimate.CCEmailList,\n\t\t   Estimate.Notes,\n\t\t   Sales.Number as SalesNumber,\n\t\t\t Sales.Id,\n\t\t   Sales.Description\nFROM   Estimate \n       INNER JOIN Sales ON Estimate.SalesId = Sales.Id \n\t\t\t LEFT JOIN AppUser AS BusinessManager ON Sales.BusinessManagerId = BusinessManager.Id \nWHERE  \n       Estimate.CurrentState = {{ appsmith.store?.currentStateName || 'Prepare' }} \n\t\t\t AND Estimate.Deleted = 0 AND (\n        (\n            '{{appsmith.store.FilterRole}}' = 'BusinessManager'\n            AND BusinessManager.UserName = '{{appsmith.user.username.split('@')[0]}}'\n        )\n        OR\n        '{{appsmith.store.FilterRole}}' = 'SalesManager'\n    )\nORDER BY \n       Sales.Number desc \n","selfReferencingDataPaths":[],"pluginSpecifiedTemplates":[{"value":true}]},"executeOnLoad":true,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["appsmith.store.FilterRole","appsmith.user.username.split('@')[0]"," appsmith.store?.currentStateName || 'Prepare' "],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"publishedAction":{"name":"Estimate_Select","datasource":{"name":"appsmithmysql","pluginId":"mysql-plugin","messages":[],"isAutoGenerated":false,"id":"appsmithmysql","deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"SELECT Estimate.Id AS EId,\n\t\t   Estimate.Number as EstimateNumber,\n \t\t   Estimate.EmailList,\n\t   \t Estimate.CCEmailList,\n\t\t   Estimate.Notes,\n\t\t   Sales.Number as SalesNumber,\n\t\t\t Sales.Id,\n\t\t   Sales.Description\nFROM   Estimate \n       INNER JOIN Sales ON Estimate.SalesId = Sales.Id \n\t\t\t LEFT JOIN AppUser AS BusinessManager ON Sales.BusinessManagerId = BusinessManager.Id \nWHERE  \n       Estimate.CurrentState = {{ appsmith.store?.currentStateName || 'Prepare' }} \n\t\t\t AND Estimate.Deleted = 0 AND (\n        (\n            '{{appsmith.store.FilterRole}}' = 'BusinessManager'\n            AND BusinessManager.UserName = '{{appsmith.user.username.split('@')[0]}}'\n        )\n        OR\n        '{{appsmith.store.FilterRole}}' = 'SalesManager'\n    )\nORDER BY \n       Sales.Number desc \n","selfReferencingDataPaths":[],"pluginSpecifiedTemplates":[{"value":true}]},"executeOnLoad":true,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["appsmith.store.FilterRole","appsmith.user.username.split('@')[0]"," appsmith.store?.currentStateName || 'Prepare' "],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"id":"Estimate Process_Estimate_Select","deleted":false,"gitSyncId":"62c6dd94aa3be20812d63927_62c6dd94aa3be20812d63966"},{"pluginType":"DB","pluginId":"mysql-plugin","unpublishedAction":{"name":"FileUpload_Check","datasource":{"name":"appsmithmysql","pluginId":"mysql-plugin","messages":[],"isAutoGenerated":false,"id":"appsmithmysql","deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"SELECT * FROM Estimate \nINNER JOIN EstimatesAttachments ON Estimate.Id = EstimatesAttachments.EstimateId\nWHERE Estimate.Id = {{this.params?.EId}}","selfReferencingDataPaths":[],"pluginSpecifiedTemplates":[{"value":true}]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["this.params?.EId"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-11T05:54:58Z"},"publishedAction":{"name":"FileUpload_Check","datasource":{"name":"appsmithmysql","pluginId":"mysql-plugin","messages":[],"isAutoGenerated":false,"id":"appsmithmysql","deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate Process","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"SELECT * FROM Estimate \nINNER JOIN EstimatesAttachments ON Estimate.Id = EstimatesAttachments.EstimateId\nWHERE Estimate.Id = {{this.params?.EId}}","selfReferencingDataPaths":[],"pluginSpecifiedTemplates":[{"value":true}]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["this.params?.EId"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2025-04-11T05:54:58Z"},"id":"Estimate Process_FileUpload_Check","deleted":false,"gitSyncId":"67f4d81e59d0ae34925978ba_67f8aeb2358e8b1adbeac334"},{"pluginType":"JS","pluginId":"js-plugin","unpublishedAction":{"name":"validateForm","fullyQualifiedName":"Globals.validateForm","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate State","collectionId":"Estimate State_Globals","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"formWidgets => {\n  let validity = true;\n  for (let aWidget of formWidgets) {\n    validity = validity && Globals.validateWidget(aWidget);\n    if (validity === false) break;\n  }\n  return validity;\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"formWidgets"}],"isAsync":false},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["formWidgets => {\n  let validity = true;\n  for (let aWidget of formWidgets) {\n    validity = validity && Globals.validateWidget(aWidget);\n    if (validity === false) break;\n  }\n  return validity;\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"publishedAction":{"name":"validateForm","fullyQualifiedName":"Globals.validateForm","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate State","collectionId":"Estimate State_Globals","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"formWidgets => {\n  let validity = true;\n  for (let aWidget of formWidgets) {\n    validity = validity && Globals.validateWidget(aWidget);\n    if (validity === false) break;\n  }\n  return validity;\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"formWidgets"}],"isAsync":false},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["formWidgets => {\n  let validity = true;\n  for (let aWidget of formWidgets) {\n    validity = validity && Globals.validateWidget(aWidget);\n    if (validity === false) break;\n  }\n  return validity;\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"id":"Estimate State_Globals.validateForm","deleted":false,"gitSyncId":"62c6dd94aa3be20812d63927_62c70033aa3be20812d63a2a"},{"pluginType":"JS","pluginId":"js-plugin","unpublishedAction":{"name":"disableDeleteButton","fullyQualifiedName":"Globals.disableDeleteButton","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate State","collectionId":"Estimate State_Globals","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"formTable => {\n  let disableDelete = false;\n  if (formTable.selectedRowIndex === -1) {\n    disableDelete = true;\n  } else {\n    disableDelete = false;\n  }\n  return disableDelete;\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"formTable"}],"isAsync":false},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["formTable => {\n  let disableDelete = false;\n  if (formTable.selectedRowIndex === -1) {\n    disableDelete = true;\n  } else {\n    disableDelete = false;\n  }\n  return disableDelete;\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"publishedAction":{"name":"disableDeleteButton","fullyQualifiedName":"Globals.disableDeleteButton","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate State","collectionId":"Estimate State_Globals","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"formTable => {\n  let disableDelete = false;\n  if (formTable.selectedRowIndex === -1) {\n    disableDelete = true;\n  } else {\n    disableDelete = false;\n  }\n  return disableDelete;\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"formTable"}],"isAsync":false},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["formTable => {\n  let disableDelete = false;\n  if (formTable.selectedRowIndex === -1) {\n    disableDelete = true;\n  } else {\n    disableDelete = false;\n  }\n  return disableDelete;\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"id":"Estimate State_Globals.disableDeleteButton","deleted":false,"gitSyncId":"62c6dd94aa3be20812d63927_62c70033aa3be20812d63a31"},{"pluginType":"JS","pluginId":"js-plugin","unpublishedAction":{"name":"validateWidget","fullyQualifiedName":"Globals.validateWidget","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate State","collectionId":"Estimate State_Globals","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"widgetObject => {\n  let valid = false;\n  if (widgetObject.isValid === true) {\n    valid = true;\n  } else {\n    valid = false;\n  }\n  return valid;\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"widgetObject"}],"isAsync":false},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["widgetObject => {\n  let valid = false;\n  if (widgetObject.isValid === true) {\n    valid = true;\n  } else {\n    valid = false;\n  }\n  return valid;\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"publishedAction":{"name":"validateWidget","fullyQualifiedName":"Globals.validateWidget","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate State","collectionId":"Estimate State_Globals","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"widgetObject => {\n  let valid = false;\n  if (widgetObject.isValid === true) {\n    valid = true;\n  } else {\n    valid = false;\n  }\n  return valid;\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"widgetObject"}],"isAsync":false},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["widgetObject => {\n  let valid = false;\n  if (widgetObject.isValid === true) {\n    valid = true;\n  } else {\n    valid = false;\n  }\n  return valid;\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"id":"Estimate State_Globals.validateWidget","deleted":false,"gitSyncId":"62c6dd94aa3be20812d63927_62c70033aa3be20812d63a24"},{"pluginType":"JS","pluginId":"js-plugin","unpublishedAction":{"name":"disableUpdateButton","fullyQualifiedName":"Globals.disableUpdateButton","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate State","collectionId":"Estimate State_Globals","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"(formWidgets, formTable) => {\n  let disableWidget = false;\n  if (formTable.selectedRowIndex === -1) {\n    disableWidget = true;\n  } else if (Globals.validateForm(formWidgets) === false) {\n    disableWidget = true;\n  } else {\n    disableWidget = false;\n  }\n  return disableWidget;\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"formWidgets"},{"name":"formTable"}],"isAsync":false},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["(formWidgets, formTable) => {\n  let disableWidget = false;\n  if (formTable.selectedRowIndex === -1) {\n    disableWidget = true;\n  } else if (Globals.validateForm(formWidgets) === false) {\n    disableWidget = true;\n  } else {\n    disableWidget = false;\n  }\n  return disableWidget;\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"publishedAction":{"name":"disableUpdateButton","fullyQualifiedName":"Globals.disableUpdateButton","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate State","collectionId":"Estimate State_Globals","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"(formWidgets, formTable) => {\n  let disableWidget = false;\n  if (formTable.selectedRowIndex === -1) {\n    disableWidget = true;\n  } else if (Globals.validateForm(formWidgets) === false) {\n    disableWidget = true;\n  } else {\n    disableWidget = false;\n  }\n  return disableWidget;\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"formWidgets"},{"name":"formTable"}],"isAsync":false},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["(formWidgets, formTable) => {\n  let disableWidget = false;\n  if (formTable.selectedRowIndex === -1) {\n    disableWidget = true;\n  } else if (Globals.validateForm(formWidgets) === false) {\n    disableWidget = true;\n  } else {\n    disableWidget = false;\n  }\n  return disableWidget;\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"id":"Estimate State_Globals.disableUpdateButton","deleted":false,"gitSyncId":"62c6dd94aa3be20812d63927_62c70033aa3be20812d63a2d"},{"pluginType":"JS","pluginId":"js-plugin","unpublishedAction":{"name":"uniqueCheck","fullyQualifiedName":"Globals.uniqueCheck","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate State","collectionId":"Estimate State_Globals","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async function (tableName, columnName, columnValue) {\n  let unique = false;\n  const response = await Duplicate_Check_Select.run({\n    'tableName': tableName,\n    'columnName': columnName,\n    'columnValue': columnValue\n  });\n  unique = response[0].row_count === 0;\n  return unique;\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"tableName"},{"name":"columnName"},{"name":"columnValue"}],"isAsync":true},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async function (tableName, columnName, columnValue) {\n  let unique = false;\n  const response = await Duplicate_Check_Select.run({\n    'tableName': tableName,\n    'columnName': columnName,\n    'columnValue': columnValue\n  });\n  unique = response[0].row_count === 0;\n  return unique;\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"publishedAction":{"name":"uniqueCheck","fullyQualifiedName":"Globals.uniqueCheck","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate State","collectionId":"Estimate State_Globals","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async function (tableName, columnName, columnValue) {\n  let unique = false;\n  const response = await Duplicate_Check_Select.run({\n    'tableName': tableName,\n    'columnName': columnName,\n    'columnValue': columnValue\n  });\n  unique = response[0].row_count === 0;\n  return unique;\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"tableName"},{"name":"columnName"},{"name":"columnValue"}],"isAsync":true},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async function (tableName, columnName, columnValue) {\n  let unique = false;\n  const response = await Duplicate_Check_Select.run({\n    'tableName': tableName,\n    'columnName': columnName,\n    'columnValue': columnValue\n  });\n  unique = response[0].row_count === 0;\n  return unique;\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"id":"Estimate State_Globals.uniqueCheck","deleted":false,"gitSyncId":"62c6dd94aa3be20812d63927_62c70033aa3be20812d63a29"},{"pluginType":"JS","pluginId":"js-plugin","unpublishedAction":{"name":"resetForm","fullyQualifiedName":"Globals.resetForm","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate State","collectionId":"Estimate State_Globals","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"tabWidgets => {\n  tabWidgets.forEach(eachWidget => {\n    resetWidget(eachWidget);\n  });\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"tabWidgets"}],"isAsync":false},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["tabWidgets => {\n  tabWidgets.forEach(eachWidget => {\n    resetWidget(eachWidget);\n  });\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"publishedAction":{"name":"resetForm","fullyQualifiedName":"Globals.resetForm","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate State","collectionId":"Estimate State_Globals","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"tabWidgets => {\n  tabWidgets.forEach(eachWidget => {\n    resetWidget(eachWidget);\n  });\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"tabWidgets"}],"isAsync":false},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["tabWidgets => {\n  tabWidgets.forEach(eachWidget => {\n    resetWidget(eachWidget);\n  });\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"id":"Estimate State_Globals.resetForm","deleted":false,"gitSyncId":"62c6dd94aa3be20812d63927_62c70033aa3be20812d63a23"},{"pluginType":"DB","pluginId":"mysql-plugin","unpublishedAction":{"name":"EstimateState_Update","datasource":{"name":"appsmithmysql","pluginId":"mysql-plugin","messages":[],"isAutoGenerated":false,"id":"appsmithmysql","deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate State","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"UPDATE EstimateState\n  SET Name = {{EstimateState_Name_Input.text}}, \n\tUIOrder = {{parseInt(EstimateState_Order_Input.text)}}\nWHERE \n\t Name = {{ EstimateState_Table.selectedRow.Name }};","selfReferencingDataPaths":[],"pluginSpecifiedTemplates":[{"value":true}]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["parseInt(EstimateState_Order_Input.text)"," EstimateState_Table.selectedRow.Name ","EstimateState_Name_Input.text"],"userSetOnLoad":false,"confirmBeforeExecute":true,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"publishedAction":{"name":"EstimateState_Update","datasource":{"name":"appsmithmysql","pluginId":"mysql-plugin","messages":[],"isAutoGenerated":false,"id":"appsmithmysql","deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate State","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"UPDATE EstimateState\n  SET Name = {{EstimateState_Name_Input.text}}, \n\tUIOrder = {{parseInt(EstimateState_Order_Input.text)}}\nWHERE \n\t Name = {{ EstimateState_Table.selectedRow.Name }};","selfReferencingDataPaths":[],"pluginSpecifiedTemplates":[{"value":true}]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["parseInt(EstimateState_Order_Input.text)"," EstimateState_Table.selectedRow.Name ","EstimateState_Name_Input.text"],"userSetOnLoad":false,"confirmBeforeExecute":true,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"id":"Estimate State_EstimateState_Update","deleted":false,"gitSyncId":"62c6dd94aa3be20812d63927_62c6feb3aa3be20812d63a15"},{"pluginType":"JS","pluginId":"js-plugin","unpublishedAction":{"name":"disableEstimatestateCreate","fullyQualifiedName":"PageObjects.disableEstimatestateCreate","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate State","collectionId":"Estimate State_PageObjects","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"() => {\n  return Globals.disableCreateButton([EstimateState_Order_Input, EstimateState_Name_Input]);\n}","selfReferencingDataPaths":[],"jsArguments":[],"isAsync":false},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["() => {\n  return Globals.disableCreateButton([EstimateState_Order_Input, EstimateState_Name_Input]);\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"publishedAction":{"name":"disableEstimatestateCreate","fullyQualifiedName":"PageObjects.disableEstimatestateCreate","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate State","collectionId":"Estimate State_PageObjects","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"() => {\n  return Globals.disableCreateButton([EstimateState_Order_Input, EstimateState_Name_Input]);\n}","selfReferencingDataPaths":[],"jsArguments":[],"isAsync":false},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["() => {\n  return Globals.disableCreateButton([EstimateState_Order_Input, EstimateState_Name_Input]);\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"id":"Estimate State_PageObjects.disableEstimatestateCreate","deleted":false,"gitSyncId":"62c6dd94aa3be20812d63927_62c70065aa3be20812d63a39"},{"pluginType":"DB","pluginId":"mysql-plugin","unpublishedAction":{"name":"EstimateState_Select","datasource":{"name":"appsmithmysql","pluginId":"mysql-plugin","messages":[],"isAutoGenerated":false,"id":"appsmithmysql","deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate State","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"SELECT * FROM EstimateState \nWHERE\n     Deleted = 0\nORDER BY\n     UIOrder;","selfReferencingDataPaths":[],"pluginSpecifiedTemplates":[{"value":true}]},"executeOnLoad":true,"dynamicBindingPathList":[],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":[],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"publishedAction":{"name":"EstimateState_Select","datasource":{"name":"appsmithmysql","pluginId":"mysql-plugin","messages":[],"isAutoGenerated":false,"id":"appsmithmysql","deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate State","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"SELECT * FROM EstimateState \nWHERE\n     Deleted = 0\nORDER BY\n     UIOrder;","selfReferencingDataPaths":[],"pluginSpecifiedTemplates":[{"value":true}]},"executeOnLoad":true,"dynamicBindingPathList":[],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":[],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"id":"Estimate State_EstimateState_Select","deleted":false,"gitSyncId":"62c6dd94aa3be20812d63927_62c6ff87aa3be20812d63a1b"},{"pluginType":"JS","pluginId":"js-plugin","unpublishedAction":{"name":"disableCreateButton","fullyQualifiedName":"Globals.disableCreateButton","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate State","collectionId":"Estimate State_Globals","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"formWidgets => {\n  return Globals.validateForm(formWidgets) === false;\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"formWidgets"}],"isAsync":false},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["formWidgets => {\n  return Globals.validateForm(formWidgets) === false;\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"publishedAction":{"name":"disableCreateButton","fullyQualifiedName":"Globals.disableCreateButton","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate State","collectionId":"Estimate State_Globals","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"formWidgets => {\n  return Globals.validateForm(formWidgets) === false;\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"formWidgets"}],"isAsync":false},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["formWidgets => {\n  return Globals.validateForm(formWidgets) === false;\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"id":"Estimate State_Globals.disableCreateButton","deleted":false,"gitSyncId":"62c6dd94aa3be20812d63927_62c70033aa3be20812d63a2b"},{"pluginType":"JS","pluginId":"js-plugin","unpublishedAction":{"name":"estimatestateCreate","fullyQualifiedName":"PageObjects.estimatestateCreate","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate State","collectionId":"Estimate State_PageObjects","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async () => {\n  if (await Globals.uniqueCheck('EstimateState', 'Name', EstimateState_Name_Input.text) === false) {\n    showAlert('duplicate name');\n  } else {\n    EstimateState_Insert.run(() => EstimateState_Select.run(() => showAlert('Values inserted')));\n  }\n}","selfReferencingDataPaths":[],"jsArguments":[],"isAsync":true},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async () => {\n  if (await Globals.uniqueCheck('EstimateState', 'Name', EstimateState_Name_Input.text) === false) {\n    showAlert('duplicate name');\n  } else {\n    EstimateState_Insert.run(() => EstimateState_Select.run(() => showAlert('Values inserted')));\n  }\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"publishedAction":{"name":"estimatestateCreate","fullyQualifiedName":"PageObjects.estimatestateCreate","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","messages":[],"isAutoGenerated":false,"deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate State","collectionId":"Estimate State_PageObjects","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async () => {\n  if (await Globals.uniqueCheck('EstimateState', 'Name', EstimateState_Name_Input.text) === false) {\n    showAlert('duplicate name');\n  } else {\n    EstimateState_Insert.run(() => EstimateState_Select.run(() => showAlert('Values inserted')));\n  }\n}","selfReferencingDataPaths":[],"jsArguments":[],"isAsync":true},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async () => {\n  if (await Globals.uniqueCheck('EstimateState', 'Name', EstimateState_Name_Input.text) === false) {\n    showAlert('duplicate name');\n  } else {\n    EstimateState_Insert.run(() => EstimateState_Select.run(() => showAlert('Values inserted')));\n  }\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"id":"Estimate State_PageObjects.estimatestateCreate","deleted":false,"gitSyncId":"62c6dd94aa3be20812d63927_62c70065aa3be20812d63a3b"},{"pluginType":"DB","pluginId":"mysql-plugin","unpublishedAction":{"name":"EstimateState_Delete","datasource":{"name":"appsmithmysql","pluginId":"mysql-plugin","messages":[],"isAutoGenerated":false,"id":"appsmithmysql","deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate State","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"UPDATE EstimateState SET Deleted = 1 \nWHERE \n     Name = {{ EstimateState_Table.selectedRow.Name }};","selfReferencingDataPaths":[],"pluginSpecifiedTemplates":[{"value":true}]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":[" EstimateState_Table.selectedRow.Name "],"userSetOnLoad":false,"confirmBeforeExecute":true,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"publishedAction":{"name":"EstimateState_Delete","datasource":{"name":"appsmithmysql","pluginId":"mysql-plugin","messages":[],"isAutoGenerated":false,"id":"appsmithmysql","deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate State","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"UPDATE EstimateState SET Deleted = 1 \nWHERE \n     Name = {{ EstimateState_Table.selectedRow.Name }};","selfReferencingDataPaths":[],"pluginSpecifiedTemplates":[{"value":true}]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":[" EstimateState_Table.selectedRow.Name "],"userSetOnLoad":false,"confirmBeforeExecute":true,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"id":"Estimate State_EstimateState_Delete","deleted":false,"gitSyncId":"62c6dd94aa3be20812d63927_62c6fe8eaa3be20812d63a13"},{"pluginType":"DB","pluginId":"mysql-plugin","unpublishedAction":{"name":"Duplicate_Check_Select","datasource":{"name":"appsmithmysql","pluginId":"mysql-plugin","messages":[],"isAutoGenerated":false,"id":"appsmithmysql","deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate State","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"SELECT COUNT(*) as row_count \nFROM \n    `{{this.params.tableName}}` \nwhere \n    `{{this.params.columnName}}` = '{{this.params.columnValue}}';\n","selfReferencingDataPaths":[],"pluginSpecifiedTemplates":[{"value":false}]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["this.params.columnValue","this.params.tableName","this.params.columnName"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"publishedAction":{"name":"Duplicate_Check_Select","datasource":{"name":"appsmithmysql","pluginId":"mysql-plugin","messages":[],"isAutoGenerated":false,"id":"appsmithmysql","deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate State","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"SELECT COUNT(*) as row_count \nFROM \n    `{{this.params.tableName}}` \nwhere \n    `{{this.params.columnName}}` = '{{this.params.columnValue}}';\n","selfReferencingDataPaths":[],"pluginSpecifiedTemplates":[{"value":false}]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["this.params.columnValue","this.params.tableName","this.params.columnName"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"id":"Estimate State_Duplicate_Check_Select","deleted":false,"gitSyncId":"62c6dd94aa3be20812d63927_62c6fdceaa3be20812d63a11"},{"pluginType":"DB","pluginId":"mysql-plugin","unpublishedAction":{"name":"EstimateState_Insert","datasource":{"name":"appsmithmysql","pluginId":"mysql-plugin","messages":[],"isAutoGenerated":false,"id":"appsmithmysql","deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate State","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"INSERT INTO EstimateState\n  (Name, UIOrder)\nVALUES\n  (\n\t\t{{EstimateState_Name_Input.text}},\n\t\t{{parseInt(EstimateState_Order_Input.text)}}\n  );","selfReferencingDataPaths":[],"pluginSpecifiedTemplates":[{"value":true}]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["parseInt(EstimateState_Order_Input.text)","EstimateState_Name_Input.text"],"userSetOnLoad":true,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"publishedAction":{"name":"EstimateState_Insert","datasource":{"name":"appsmithmysql","pluginId":"mysql-plugin","messages":[],"isAutoGenerated":false,"id":"appsmithmysql","deleted":false,"policies":[],"userPermissions":[]},"pageId":"Estimate State","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"INSERT INTO EstimateState\n  (Name, UIOrder)\nVALUES\n  (\n\t\t{{EstimateState_Name_Input.text}},\n\t\t{{parseInt(EstimateState_Order_Input.text)}}\n  );","selfReferencingDataPaths":[],"pluginSpecifiedTemplates":[{"value":true}]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["parseInt(EstimateState_Order_Input.text)","EstimateState_Name_Input.text"],"userSetOnLoad":true,"confirmBeforeExecute":false,"policies":[],"userPermissions":[],"createdAt":"2024-04-08T06:52:42Z"},"id":"Estimate State_EstimateState_Insert","deleted":false,"gitSyncId":"62c6dd94aa3be20812d63927_62c6feefaa3be20812d63a17"}],"actionCollectionList":[{"unpublishedCollection":{"name":"EstimateStatesJS","pageId":"PO Entry","pluginId":"js-plugin","pluginType":"JS","actions":[],"archivedActions":[],"body":"export default {\n\tstates: [{\n    \"Next\": [\n      {\n        \"State\": \"Completed\",\n        \"Title\": \"PO Entered\",\n        \"Confirmation\": [\n          \"Have you stored the PO on the sharepoint?\",\n\t\t\t\t\t\"Have all meta data for the PO added on sharepoint?\"\n        ],\n        \"Name\": \"EnterPO_Completed\"\n      }\n    ],\n    \"Name\": \"EnterPO\"\n  },\n  {\n    \"Next\": [\n\t\t\t {\n        \"State\": \"EnterPO\",\n        \"Title\": \"Update PO details\",\n        \"Confirmation\": [\n          \"Moving Estimate to EnterPO state to update PO details\"\n        ],\n        \"Name\": \"Completed_EnterPO\"\n      }\n\t\t],\n    \"Name\": \"Completed\"\n  }]\n}","variables":[{"name":"states","value":"[{\n  \"Next\": [{\n    \"State\": \"Completed\",\n    \"Title\": \"PO Entered\",\n    \"Confirmation\": [\"Have you stored the PO on the sharepoint?\", \"Have all meta data for the PO added on sharepoint?\"],\n    \"Name\": \"EnterPO_Completed\"\n  }],\n  \"Name\": \"EnterPO\"\n}, {\n  \"Next\": [{\n    \"State\": \"EnterPO\",\n    \"Title\": \"Update PO details\",\n    \"Confirmation\": [\"Moving Estimate to EnterPO state to update PO details\"],\n    \"Name\": \"Completed_EnterPO\"\n  }],\n  \"Name\": \"Completed\"\n}]"}],"userPermissions":[]},"publishedCollection":{"name":"EstimateStatesJS","pageId":"PO Entry","pluginId":"js-plugin","pluginType":"JS","actions":[],"archivedActions":[],"body":"export default {\n\tstates: [{\n    \"Next\": [\n      {\n        \"State\": \"Completed\",\n        \"Title\": \"PO Entered\",\n        \"Confirmation\": [\n          \"Have you stored the PO on the sharepoint?\",\n\t\t\t\t\t\"Have all meta data for the PO added on sharepoint?\"\n        ],\n        \"Name\": \"EnterPO_Completed\"\n      }\n    ],\n    \"Name\": \"EnterPO\"\n  },\n  {\n    \"Next\": [\n\t\t\t {\n        \"State\": \"EnterPO\",\n        \"Title\": \"Update PO details\",\n        \"Confirmation\": [\n          \"Moving Estimate to EnterPO state to update PO details\"\n        ],\n        \"Name\": \"Completed_EnterPO\"\n      }\n\t\t],\n    \"Name\": \"Completed\"\n  }]\n}","variables":[{"name":"states","value":"[{\n  \"Next\": [{\n    \"State\": \"Completed\",\n    \"Title\": \"PO Entered\",\n    \"Confirmation\": [\"Have you stored the PO on the sharepoint?\", \"Have all meta data for the PO added on sharepoint?\"],\n    \"Name\": \"EnterPO_Completed\"\n  }],\n  \"Name\": \"EnterPO\"\n}, {\n  \"Next\": [{\n    \"State\": \"EnterPO\",\n    \"Title\": \"Update PO details\",\n    \"Confirmation\": [\"Moving Estimate to EnterPO state to update PO details\"],\n    \"Name\": \"Completed_EnterPO\"\n  }],\n  \"Name\": \"Completed\"\n}]"}],"userPermissions":[]},"id":"PO Entry_EstimateStatesJS","deleted":false,"gitSyncId":"62c6dd94aa3be20812d63927_62c6dd95aa3be20812d639ca"},{"unpublishedCollection":{"name":"PageObjects","pageId":"PO Entry","pluginId":"js-plugin","pluginType":"JS","actions":[],"archivedActions":[],"body":"export default {\n\troles_with_access :[\"Corporate admin\"],\n\n\t/*async insertPORow(){ \n\t\tif(await GlobalVariables.uniqueCheck(\"PurchaseOrder\", \"Number\", PO_Number_Input.text)===false) {\n\t\t\tshowAlert(\"PO# not unique\", \"error\");\n\t\t} else {\n\t\t\tawait PO_Insert.run();\n\t\t\tPO_Select.run();\n\t\t\tGlobalVariables.resetForm([\"PO_Details_Container\"]); \n\t\t} \n\t},\n\t\n\tasync insertPOItemRow(){ \n\t\tif(await GlobalVariables.uniqueCheck(\"PurchaseOrderItem\", \"Number\", POItem_Number_Input.text)===false) {\n\t\t\tshowAlert(\"PO Item# not unique\", \"error\");\n\t\t} else {\n\t\t\tawait PO_Item_Insert.run();\n\t\t\tPO_Item_Select.run();\n\t\t\tGlobalVariables.resetForm([\"PO_Item_Container\"]); \n\t\t} \n\t},*/\n\t\taccessControl:async()=>{\n\t\tawait UserRoles_Select.run()\n\t\tlet role = '';\n\t\tif (UserRoles_Select.data.find((row) => row.Name === 'Sales Manager' || row.Name === 'Accounts Receivables')) {\n\t\t\tconsole.log('111')\n\t\t\trole = 'SalesManager'\n\t\t}else if (UserRoles_Select.data.find((row) => row.Name === 'Business Manager')) {\n\t\t\tconsole.log('222')\n\t\t\trole = 'BusinessManager';\n\t\t}\n\t\tawait storeValue('FilterRole', role, false);\n    console.log('frole', appsmith.store.FilterRole);\n    await Estimate_Select.run();\n\t},\n\tinsertPO: async(estimateId,PONumber,PODes,POBillto,POShipto,PaymentTerm,Taxable) =>{\n\tif(await GlobalVariables.uniqueCheck(\"PurchaseOrder\", \"Number\",PONumber)===false) {\n\t\t\tshowAlert(\"PO# not unique\", \"error\");\n\t\t} else {\n\t\t\tawait PO_Insert.run({\"estimateId\":estimateId,\"PONumber\":PONumber,\n\t\t\t\t\t\t\t\t\t\t\t\t\t \"PODes\":PODes,\"POBillto\":POBillto,\"POShipto\":POShipto,\n\t\t\t\t\t\t\t\t\t\t\t\t\t \"PaymentTerm\":PaymentTerm,\"Taxable\":Taxable}).then(()=>{\n\t\t\t\treturn Promise.all([Estimate_Select.run(),PO_Details_Select.run(),PO_Select.run()]); \n\t\t\t})\n\t\t\t.then(()=> {return GlobalVariables.resetWidgets([\"Estimate_PO_Table\",\"PO_Details_Container\"])})\n\t\t\t\t.then((res)=> showAlert(\"Insert Done\", \"success\"))\n\t\t\t\t.catch((error)=> showAlert(error.toString(), \"error\"));\n\t\t}\n  },\n\t\n\tinsertPOItem: async(POId,POItemNum,POItemDes,POItemQty,POItemAmt,SalesTax) =>{\n\t\t\tawait PO_Item_Insert.run({\"POId\":POId,\"POItemNum\":POItemNum,\"POItemDes\":POItemDes,\"POItemQty\":POItemQty,\"POItemAmt\":POItemAmt,\"SalesTax\":SalesTax}).then(()=>{\n\t\t\t\treturn Promise.all([PO_Item_Select.run({'purchaseOrderId':PO_Table.selectedRow.Id }, PO_Details_Select.run())]); \n\t\t\t})\n\t\t\t.then(()=> {return GlobalVariables.resetWidgets([\"PO_Item_Container\"])})\n\t\t\t\t.then((res)=> showAlert(\"Insert Done\", \"success\"))\n\t\t\t\t.catch((error)=> showAlert(error.toString(), \"error\"));\n  },\n\t\n\t\tupdatePO: async(PONum,PODes,Billto,Shipto,PaymentTerm,Taxable) =>{\n\t\tawait PO_Update.run({\"PONum\":PONum,\"PODes\":PODes,\"Billto\":Billto,\n\t\t\t\t\t\t\t\t\t\t\t\t \"Shipto\":Shipto,\"PaymentTerm\":PaymentTerm,\"Taxable\":Taxable}).then(()=>{\n\t\t\t\treturn Promise.all([Estimate_Select.run(),PO_Details_Select.run(),PO_Select.run()]); \n\t\t\t})\n\t\t\t.then(()=> {return GlobalVariables.resetWidgets([\"Estimate_PO_Table\",\"PO_Details_Container\"])})\n\t\t\t\t.then((res)=> showAlert(\"Update Done\", \"success\"))\n\t\t\t\t.catch((error)=> showAlert(error.toString(), \"error\"));\n   },\n\t\n\tupdatePOItem: async(POItemNum,POItemDes,POItemQty,POItemAmt,SalesTax,POItemId) =>{\n\t\tawait PO_Item_Update.run({\"POItemNum\":POItemNum,\"POItemDes\":POItemDes,\"POItemQty\":POItemQty,\"POItemAmt\":POItemAmt,\"SalesTax\":SalesTax,\"POItemId\":POItemId}).then(()=>{\n\t\t\t\treturn Promise.all([PO_Item_Select.run({'purchaseOrderId':PO_Table.selectedRow.Id },PO_Details_Select.run())]); \n\t\t\t})\n\t\t\t.then(()=> {return GlobalVariables.resetWidgets([\"PO_Item_Container\"])})\n\t\t\t\t.then((res)=> showAlert(\"Update Done\", \"success\"))\n\t\t\t\t.catch((error)=> showAlert(error.toString(), \"error\"));\n   },\n\t\n\tdeletePO: async(POId) =>{\n\t\tawait PO_Delete.run({\"POId\":POId}).then(()=>POItems_Delete.run({\"POId\":POId})).then(()=>{\n\t\t\t\treturn Promise.all([Estimate_Select.run(),PO_Details_Select.run(),PO_Select.run()]); \n\t\t\t})\n\t\t\t.then(()=> {return GlobalVariables.resetWidgets([\"Estimate_PO_Table\",\"PO_Details_Container\"])})\n\t\t\t\t.then((res)=> showAlert(\"Delete Done\", \"success\"))\n\t\t\t\t.catch((error)=> showAlert(error.toString(), \"error\"));\n   },\n\t\n\tdeletePOItem: async(POItemId) =>{\n\t\tawait PO_Item_Delete.run({\"POItemId\":POItemId}).then(()=>{\n\t\t\t\treturn Promise.all([PO_Item_Select.run({'purchaseOrderId':PO_Table.selectedRow.Id },PO_Details_Select.run())]); \n\t\t\t})\n\t\t\t.then(()=> {return GlobalVariables.resetWidgets([\"PO_Item_Container\"])})\n\t\t\t\t.then((res)=> showAlert(\"Delete Done\", \"success\"))\n\t\t\t\t.catch((error)=> showAlert(error.toString(), \"error\"));\n   },\nDisablePODetailsInsertButton:()=>{\n\t\treturn(\tEstimate_PO_Table.selectedRowIndex == -1  || appsmith.store.currentStateName == 'Completed' || GlobalVariables.disableCreateButton([PO_Number_Input,PO_Description_Input,PO_BillTo_Input,PO_ShipTo_Input,PO_PaymentTerm_Input]))\n\t\t\n\t                                  },\nDisablePODetailsUpdateButton:()=>{\n\treturn(Estimate_PO_Table.selectedRowIndex == -1 ||  appsmith.store.currentStateName == 'Completed' || GlobalVariables.disableCreateButton([PO_Number_Input,PO_Description_Input,PO_BillTo_Input,PO_ShipTo_Input,PO_PaymentTerm_Input]))\n\t\t\n\t                               },\nDisablePOItemDetailsInsertButton:()=>{\n\t//return(PO_Table.selectedRowIndex ==-1 ||appsmith.store.currentStateName !='EnterPO'     \t\n\treturn(PO_Table.selectedRowIndex ==-1 || appsmith.store.currentStateName == 'Completed' ||GlobalVariables.disableCreateButton([POItem_Number_Input,POItem_Quantity_Input,POItem_Description_Input,POItem_Amount_Input,POItem_SaleTax_Input]))\n\t\n                                    },\n\t\nDisablePOItemDetailsUpdateButton:()=>{\n\treturn(PO_Item_Table.selectedRowIndex == -1 || appsmith.store.currentStateName !='EnterPO' || GlobalVariables.disableCreateButton([POItem_Number_Input,POItem_Description_Input,POItem_Quantity_Input,POItem_Amount_Input]))\n\t\n                                     },\n\t\n\tselectInitialState: async () => {\n\t\tawait Process.clickState('EnterPO', Estimate_Select);\n\t},\n\tdisableEstCompleteArrow:()=>{\n\t\t\n\t\t//if (Tabs1.selectedTab == 'PO Details):\n\t\t\t if (Estimates_POItems_Select.data.length >0){\n\t\t\t\t return false\n\t\t\t }\n\t\t//else if (Tabs.selectedTab == ' PO Item Details'):\n\t\t\t\t//if PO_Details_Select.data.length>0:\n\t\t\t\t//return true\n\t//else:\n\t\t\t//return false\n\t\t\n\t\t\n\t}\n\t\n}","variables":[{"name":"roles_with_access","value":"[\"Corporate admin\"]"}],"userPermissions":[]},"publishedCollection":{"name":"PageObjects","pageId":"PO Entry","pluginId":"js-plugin","pluginType":"JS","actions":[],"archivedActions":[],"body":"export default {\n\troles_with_access :[\"Corporate admin\"],\n\n\t/*async insertPORow(){ \n\t\tif(await GlobalVariables.uniqueCheck(\"PurchaseOrder\", \"Number\", PO_Number_Input.text)===false) {\n\t\t\tshowAlert(\"PO# not unique\", \"error\");\n\t\t} else {\n\t\t\tawait PO_Insert.run();\n\t\t\tPO_Select.run();\n\t\t\tGlobalVariables.resetForm([\"PO_Details_Container\"]); \n\t\t} \n\t},\n\t\n\tasync insertPOItemRow(){ \n\t\tif(await GlobalVariables.uniqueCheck(\"PurchaseOrderItem\", \"Number\", POItem_Number_Input.text)===false) {\n\t\t\tshowAlert(\"PO Item# not unique\", \"error\");\n\t\t} else {\n\t\t\tawait PO_Item_Insert.run();\n\t\t\tPO_Item_Select.run();\n\t\t\tGlobalVariables.resetForm([\"PO_Item_Container\"]); \n\t\t} \n\t},*/\n\t\taccessControl:async()=>{\n\t\tawait UserRoles_Select.run()\n\t\tlet role = '';\n\t\tif (UserRoles_Select.data.find((row) => row.Name === 'Sales Manager' || row.Name === 'Accounts Receivables')) {\n\t\t\tconsole.log('111')\n\t\t\trole = 'SalesManager'\n\t\t}else if (UserRoles_Select.data.find((row) => row.Name === 'Business Manager')) {\n\t\t\tconsole.log('222')\n\t\t\trole = 'BusinessManager';\n\t\t}\n\t\tawait storeValue('FilterRole', role, false);\n    console.log('frole', appsmith.store.FilterRole);\n    await Estimate_Select.run();\n\t},\n\tinsertPO: async(estimateId,PONumber,PODes,POBillto,POShipto,PaymentTerm,Taxable) =>{\n\tif(await GlobalVariables.uniqueCheck(\"PurchaseOrder\", \"Number\",PONumber)===false) {\n\t\t\tshowAlert(\"PO# not unique\", \"error\");\n\t\t} else {\n\t\t\tawait PO_Insert.run({\"estimateId\":estimateId,\"PONumber\":PONumber,\n\t\t\t\t\t\t\t\t\t\t\t\t\t \"PODes\":PODes,\"POBillto\":POBillto,\"POShipto\":POShipto,\n\t\t\t\t\t\t\t\t\t\t\t\t\t \"PaymentTerm\":PaymentTerm,\"Taxable\":Taxable}).then(()=>{\n\t\t\t\treturn Promise.all([Estimate_Select.run(),PO_Details_Select.run(),PO_Select.run()]); \n\t\t\t})\n\t\t\t.then(()=> {return GlobalVariables.resetWidgets([\"Estimate_PO_Table\",\"PO_Details_Container\"])})\n\t\t\t\t.then((res)=> showAlert(\"Insert Done\", \"success\"))\n\t\t\t\t.catch((error)=> showAlert(error.toString(), \"error\"));\n\t\t}\n  },\n\t\n\tinsertPOItem: async(POId,POItemNum,POItemDes,POItemQty,POItemAmt,SalesTax) =>{\n\t\t\tawait PO_Item_Insert.run({\"POId\":POId,\"POItemNum\":POItemNum,\"POItemDes\":POItemDes,\"POItemQty\":POItemQty,\"POItemAmt\":POItemAmt,\"SalesTax\":SalesTax}).then(()=>{\n\t\t\t\treturn Promise.all([PO_Item_Select.run({'purchaseOrderId':PO_Table.selectedRow.Id }, PO_Details_Select.run())]); \n\t\t\t})\n\t\t\t.then(()=> {return GlobalVariables.resetWidgets([\"PO_Item_Container\"])})\n\t\t\t\t.then((res)=> showAlert(\"Insert Done\", \"success\"))\n\t\t\t\t.catch((error)=> showAlert(error.toString(), \"error\"));\n  },\n\t\n\t\tupdatePO: async(PONum,PODes,Billto,Shipto,PaymentTerm,Taxable) =>{\n\t\tawait PO_Update.run({\"PONum\":PONum,\"PODes\":PODes,\"Billto\":Billto,\n\t\t\t\t\t\t\t\t\t\t\t\t \"Shipto\":Shipto,\"PaymentTerm\":PaymentTerm,\"Taxable\":Taxable}).then(()=>{\n\t\t\t\treturn Promise.all([Estimate_Select.run(),PO_Details_Select.run(),PO_Select.run()]); \n\t\t\t})\n\t\t\t.then(()=> {return GlobalVariables.resetWidgets([\"Estimate_PO_Table\",\"PO_Details_Container\"])})\n\t\t\t\t.then((res)=> showAlert(\"Update Done\", \"success\"))\n\t\t\t\t.catch((error)=> showAlert(error.toString(), \"error\"));\n   },\n\t\n\tupdatePOItem: async(POItemNum,POItemDes,POItemQty,POItemAmt,SalesTax,POItemId) =>{\n\t\tawait PO_Item_Update.run({\"POItemNum\":POItemNum,\"POItemDes\":POItemDes,\"POItemQty\":POItemQty,\"POItemAmt\":POItemAmt,\"SalesTax\":SalesTax,\"POItemId\":POItemId}).then(()=>{\n\t\t\t\treturn Promise.all([PO_Item_Select.run({'purchaseOrderId':PO_Table.selectedRow.Id },PO_Details_Select.run())]); \n\t\t\t})\n\t\t\t.then(()=> {return GlobalVariables.resetWidgets([\"PO_Item_Container\"])})\n\t\t\t\t.then((res)=> showAlert(\"Update Done\", \"success\"))\n\t\t\t\t.catch((error)=> showAlert(error.toString(), \"error\"));\n   },\n\t\n\tdeletePO: async(POId) =>{\n\t\tawait PO_Delete.run({\"POId\":POId}).then(()=>POItems_Delete.run({\"POId\":POId})).then(()=>{\n\t\t\t\treturn Promise.all([Estimate_Select.run(),PO_Details_Select.run(),PO_Select.run()]); \n\t\t\t})\n\t\t\t.then(()=> {return GlobalVariables.resetWidgets([\"Estimate_PO_Table\",\"PO_Details_Container\"])})\n\t\t\t\t.then((res)=> showAlert(\"Delete Done\", \"success\"))\n\t\t\t\t.catch((error)=> showAlert(error.toString(), \"error\"));\n   },\n\t\n\tdeletePOItem: async(POItemId) =>{\n\t\tawait PO_Item_Delete.run({\"POItemId\":POItemId}).then(()=>{\n\t\t\t\treturn Promise.all([PO_Item_Select.run({'purchaseOrderId':PO_Table.selectedRow.Id },PO_Details_Select.run())]); \n\t\t\t})\n\t\t\t.then(()=> {return GlobalVariables.resetWidgets([\"PO_Item_Container\"])})\n\t\t\t\t.then((res)=> showAlert(\"Delete Done\", \"success\"))\n\t\t\t\t.catch((error)=> showAlert(error.toString(), \"error\"));\n   },\nDisablePODetailsInsertButton:()=>{\n\t\treturn(\tEstimate_PO_Table.selectedRowIndex == -1  || appsmith.store.currentStateName == 'Completed' || GlobalVariables.disableCreateButton([PO_Number_Input,PO_Description_Input,PO_BillTo_Input,PO_ShipTo_Input,PO_PaymentTerm_Input]))\n\t\t\n\t                                  },\nDisablePODetailsUpdateButton:()=>{\n\treturn(Estimate_PO_Table.selectedRowIndex == -1 ||  appsmith.store.currentStateName == 'Completed' || GlobalVariables.disableCreateButton([PO_Number_Input,PO_Description_Input,PO_BillTo_Input,PO_ShipTo_Input,PO_PaymentTerm_Input]))\n\t\t\n\t                               },\nDisablePOItemDetailsInsertButton:()=>{\n\t//return(PO_Table.selectedRowIndex ==-1 ||appsmith.store.currentStateName !='EnterPO'     \t\n\treturn(PO_Table.selectedRowIndex ==-1 || appsmith.store.currentStateName == 'Completed' ||GlobalVariables.disableCreateButton([POItem_Number_Input,POItem_Quantity_Input,POItem_Description_Input,POItem_Amount_Input,POItem_SaleTax_Input]))\n\t\n                                    },\n\t\nDisablePOItemDetailsUpdateButton:()=>{\n\treturn(PO_Item_Table.selectedRowIndex == -1 || appsmith.store.currentStateName !='EnterPO' || GlobalVariables.disableCreateButton([POItem_Number_Input,POItem_Description_Input,POItem_Quantity_Input,POItem_Amount_Input]))\n\t\n                                     },\n\t\n\tselectInitialState: async () => {\n\t\tawait Process.clickState('EnterPO', Estimate_Select);\n\t},\n\tdisableEstCompleteArrow:()=>{\n\t\t\n\t\t//if (Tabs1.selectedTab == 'PO Details):\n\t\t\t if (Estimates_POItems_Select.data.length >0){\n\t\t\t\t return false\n\t\t\t }\n\t\t//else if (Tabs.selectedTab == ' PO Item Details'):\n\t\t\t\t//if PO_Details_Select.data.length>0:\n\t\t\t\t//return true\n\t//else:\n\t\t\t//return false\n\t\t\n\t\t\n\t}\n\t\n}","variables":[{"name":"roles_with_access","value":"[\"Corporate admin\"]"}],"userPermissions":[]},"id":"PO Entry_PageObjects","deleted":false,"gitSyncId":"62c6dd94aa3be20812d63927_62c6dd95aa3be20812d639ce"},{"unpublishedCollection":{"name":"GlobalVariables","pageId":"PO Entry","pluginId":"js-plugin","pluginType":"JS","actions":[],"archivedActions":[],"body":"export default {\n  LabelColor:'#008695',\n\tIconColor:'#48BF91',\n\tmyFun2: async () => {\n\t\t//do async stuff here or use JS promises\n\t},\n\tdisableCorporateAdminButton:  () => {\n\t\treturn ( false ||  CorporateAdmin_Select.data.find((row)=>{return row.name == appsmith.user.username.split('@')[0]})?.name == appsmith.user.username.split('@')[0])\n\t},\n\tresetForm: (tabWidgets) => {\n\t\ttabWidgets.forEach(eachWidget => {resetWidget(eachWidget)});\n\t},\n\t\n\tresetWidgets: (widgetsArray) => {\n\t\tconst widgetMap = widgetsArray.map((aWdiget) => resetWidget(aWdiget));\n\t\treturn Promise.all(widgetMap);\n\t},\n\t\n\tvalidateWidget: (widgetObject) => {\n\t// if(typeof widgetObject.text !== \"undefined\" && (widgetObject.isValid === true|| widgetObject.isValid === undefined)) {\n\t\tlet valid = false;\n\t\tif (widgetObject.isValid === true) {\n\t\t\tvalid = true;\n\t\t} else {\n\t\t\tvalid = false;\n\t\t}\n\t\treturn valid;\n\t},\n\t\n\tvalidateForm: (formWidgets) => {\n\t\t// function accepts an array of widget objects. see ProjectType tab for example usage. \n\t\t// function returns false, if any of the form widgets returns false during validity check. \n\t\tlet validity = true;\n\t\tfor(let aWidget of formWidgets) {\n\t\t\tvalidity = validity && (GlobalVariables.validateWidget(aWidget));\n\t\t\tif (validity === false)\n\t\t\t\tbreak;\n\t\t}\n\t\treturn validity;\n\t},\n\t\n\tdisableDeleteButton: (formTable) => {\n\t\t// Function accepts a table object and\n\t\t// function returns false, if any of the form widgets returns false during validity check. \n\t  let disableDelete = formTable.selectedRowIndex === -1?true:false;\n\t  return disableDelete;\n },\n\t\n\tdisableCreateButton: (formWidgets) => {\n\t\t// Accepts an array of widget objects. Performs validity check on each one of them. \n\t\t// Function returns true, if validity is false, otherwise true \n\t\treturn (GlobalVariables.validateForm(formWidgets) === false);\n\t}, \n\n\tdisableUpdateButton: (formWidgets, formTable) => {\n\t\t// Accepts an array of widget objects and a table widget object, If no row in the table is selected returns true. \n\t\t// If one row is selected and all widgets pass vality check, returns false. . \n\t\t// Function returns true, if validity is false, otherwise true \n\t\tlet disableWidget = false;\n\t\tif (formTable.selectedRowIndex === -1) {\n\t\t\tdisableWidget = true;\n\t\t} else if (GlobalVariables.validateForm(formWidgets) === false) {\n\t\t\tdisableWidget = true;\n\t\t} else {\n\t\t\tdisableWidget = false;\n\t\t}\n\t\treturn disableWidget;\n\t},\n\t\n\tasync uniqueCheck(tableName, columnName,columnValue) {\n\t\t// Generic function to check if a value in a column is used before. \n\t\t// The value is unique if the row count is zero, otherwise there is already an entry in database with same value. \n\t\t// Async function needs to be used inside an async function. \n\t\tlet unique = false;\n\t\tconst response = await Duplicate_Value_Select.run({'tableName': tableName, 'columnName': columnName,'columnValue': columnValue});\n\t\tunique = (response[0].row_count === 0);\n\t\t//await showAlert(\"unique: \" + unique); // for debug\n\t\treturn unique;\t\t    \n\t}\t\n}","variables":[{"name":"LabelColor","value":"'#008695'"},{"name":"IconColor","value":"'#48BF91'"}],"userPermissions":[]},"publishedCollection":{"name":"GlobalVariables","pageId":"PO Entry","pluginId":"js-plugin","pluginType":"JS","actions":[],"archivedActions":[],"body":"export default {\n  LabelColor:'#008695',\n\tIconColor:'#48BF91',\n\tmyFun2: async () => {\n\t\t//do async stuff here or use JS promises\n\t},\n\tdisableCorporateAdminButton:  () => {\n\t\treturn ( false ||  CorporateAdmin_Select.data.find((row)=>{return row.name == appsmith.user.username.split('@')[0]})?.name == appsmith.user.username.split('@')[0])\n\t},\n\tresetForm: (tabWidgets) => {\n\t\ttabWidgets.forEach(eachWidget => {resetWidget(eachWidget)});\n\t},\n\t\n\tresetWidgets: (widgetsArray) => {\n\t\tconst widgetMap = widgetsArray.map((aWdiget) => resetWidget(aWdiget));\n\t\treturn Promise.all(widgetMap);\n\t},\n\t\n\tvalidateWidget: (widgetObject) => {\n\t// if(typeof widgetObject.text !== \"undefined\" && (widgetObject.isValid === true|| widgetObject.isValid === undefined)) {\n\t\tlet valid = false;\n\t\tif (widgetObject.isValid === true) {\n\t\t\tvalid = true;\n\t\t} else {\n\t\t\tvalid = false;\n\t\t}\n\t\treturn valid;\n\t},\n\t\n\tvalidateForm: (formWidgets) => {\n\t\t// function accepts an array of widget objects. see ProjectType tab for example usage. \n\t\t// function returns false, if any of the form widgets returns false during validity check. \n\t\tlet validity = true;\n\t\tfor(let aWidget of formWidgets) {\n\t\t\tvalidity = validity && (GlobalVariables.validateWidget(aWidget));\n\t\t\tif (validity === false)\n\t\t\t\tbreak;\n\t\t}\n\t\treturn validity;\n\t},\n\t\n\tdisableDeleteButton: (formTable) => {\n\t\t// Function accepts a table object and\n\t\t// function returns false, if any of the form widgets returns false during validity check. \n\t  let disableDelete = formTable.selectedRowIndex === -1?true:false;\n\t  return disableDelete;\n },\n\t\n\tdisableCreateButton: (formWidgets) => {\n\t\t// Accepts an array of widget objects. Performs validity check on each one of them. \n\t\t// Function returns true, if validity is false, otherwise true \n\t\treturn (GlobalVariables.validateForm(formWidgets) === false);\n\t}, \n\n\tdisableUpdateButton: (formWidgets, formTable) => {\n\t\t// Accepts an array of widget objects and a table widget object, If no row in the table is selected returns true. \n\t\t// If one row is selected and all widgets pass vality check, returns false. . \n\t\t// Function returns true, if validity is false, otherwise true \n\t\tlet disableWidget = false;\n\t\tif (formTable.selectedRowIndex === -1) {\n\t\t\tdisableWidget = true;\n\t\t} else if (GlobalVariables.validateForm(formWidgets) === false) {\n\t\t\tdisableWidget = true;\n\t\t} else {\n\t\t\tdisableWidget = false;\n\t\t}\n\t\treturn disableWidget;\n\t},\n\t\n\tasync uniqueCheck(tableName, columnName,columnValue) {\n\t\t// Generic function to check if a value in a column is used before. \n\t\t// The value is unique if the row count is zero, otherwise there is already an entry in database with same value. \n\t\t// Async function needs to be used inside an async function. \n\t\tlet unique = false;\n\t\tconst response = await Duplicate_Value_Select.run({'tableName': tableName, 'columnName': columnName,'columnValue': columnValue});\n\t\tunique = (response[0].row_count === 0);\n\t\t//await showAlert(\"unique: \" + unique); // for debug\n\t\treturn unique;\t\t    \n\t}\t\n}","variables":[{"name":"LabelColor","value":"'#008695'"},{"name":"IconColor","value":"'#48BF91'"}],"userPermissions":[]},"id":"PO Entry_GlobalVariables","deleted":false,"gitSyncId":"62c6dd94aa3be20812d63927_62c6dd95aa3be20812d639cc"},{"unpublishedCollection":{"name":"Process","pageId":"PO Entry","pluginId":"js-plugin","pluginType":"JS","actions":[],"archivedActions":[],"body":"export default {\n\tmyVar1: [],\n\tmyVar2: {},\n\tmyFun1: () => {\n\t\t//write code here\n\t},\n\tmyFun2: async () => {\n\t\t//use async-await or promises\n\t},\n\tgetInitialState: () => {\n\t\tif (appsmith.store.currentStateName) {\n\t\t\treturn appsmith.store.currentStateName;\n\t\t} else {\n\t\t\tstoreValue(\"currentStateName\", 'EnterPO');\n\t\t\treturn \"EnterPO\";\n\t\t}\n\t},\n\t\n\t\n\tgetState:(stateName)=>{ return(EstimateStatesJS.states.find((state) => {return(state.Name == stateName)}))},\n\tdisableArrow:(arrow)=>{return((appsmith.store.currentStateName!=arrow) || (Estimate_PO_Table.selectedRowIndex === -1));},\n  getDecision:(decisionName)=>{return(appsmith.store.currentState.Next.find((thisDecision)=> {return(thisDecision.Name==decisionName)}))},\n\tgetModalTitle: ()=>{ return(appsmith.store.currentDecision?.Title||\"\") },\n\n\tasync clickState(stateName, query=null)\n\t{\n\t\t\tawait storeValue(\"currentState\", Process.getState(stateName));\n\t\t\tawait storeValue(\"currentStateName\", stateName);\n\t\t\tif(query !== null ) {\n\t\t\t\tquery.run({\"currentStateName\": stateName})\n\t\t\t\tshowAlert(\"Loading Estimate in state \" + appsmith.store.currentStateName, \"success\");\n\t\t\t}\n\t\tawait GlobalVariables.resetForm([\"PO_Table\"]);\n\t\tEstimate_Select.run();\n\t\tPO_Select.run();\n\t\tPO_Item_Select.run({'purchaseOrderId':-1});\n\t},\n\tasync clickArrow(DecisionName)\n\t\t{\n\t\t\tawait storeValue(\"currentDecisionName\", DecisionName);\n\t\t\tawait storeValue(\"currentDecision\",Process.getDecision(DecisionName));\n\t\t\tawait storeValue(\"currentNext\",appsmith.store.currentState.Next);\n\t\t\tshowModal(\"ChangeState_Modal\");\n\t\t},\n\tasync onModalSubmitClicked(estimateId) {\n\t\tawait showAlert(\"Moving Estimate to \" + appsmith.store.currentDecision.State + \" State\",\"info\");\n\t\t//showAlert(\"Here in \" + appsmith.store.currentStateName);\n\t\tawait Estimate_State_Update.run({\"nextState\": appsmith.store.currentDecision.State,\"estimateId\":estimateId});\n\t\tawait Estimate_Select.run({\"currentStateName\": appsmith.store.currentStateName})\n\t\tawait PO_Select.run({\"currentStateName\": appsmith.store.currentStateName});\n\t\tPO_Item_Select.run({'purchaseOrderId':-1});\n\t\tcloseModal(\"ChangeState_Modal\");\n\t},\n}","variables":[{"name":"myVar1","value":"[]"},{"name":"myVar2","value":"{}"}],"userPermissions":[]},"publishedCollection":{"name":"Process","pageId":"PO Entry","pluginId":"js-plugin","pluginType":"JS","actions":[],"archivedActions":[],"body":"export default {\n\tmyVar1: [],\n\tmyVar2: {},\n\tmyFun1: () => {\n\t\t//write code here\n\t},\n\tmyFun2: async () => {\n\t\t//use async-await or promises\n\t},\n\tgetInitialState: () => {\n\t\tif (appsmith.store.currentStateName) {\n\t\t\treturn appsmith.store.currentStateName;\n\t\t} else {\n\t\t\tstoreValue(\"currentStateName\", 'EnterPO');\n\t\t\treturn \"EnterPO\";\n\t\t}\n\t},\n\t\n\t\n\tgetState:(stateName)=>{ return(EstimateStatesJS.states.find((state) => {return(state.Name == stateName)}))},\n\tdisableArrow:(arrow)=>{return((appsmith.store.currentStateName!=arrow) || (Estimate_PO_Table.selectedRowIndex === -1));},\n  getDecision:(decisionName)=>{return(appsmith.store.currentState.Next.find((thisDecision)=> {return(thisDecision.Name==decisionName)}))},\n\tgetModalTitle: ()=>{ return(appsmith.store.currentDecision?.Title||\"\") },\n\n\tasync clickState(stateName, query=null)\n\t{\n\t\t\tawait storeValue(\"currentState\", Process.getState(stateName));\n\t\t\tawait storeValue(\"currentStateName\", stateName);\n\t\t\tif(query !== null ) {\n\t\t\t\tquery.run({\"currentStateName\": stateName})\n\t\t\t\tshowAlert(\"Loading Estimate in state \" + appsmith.store.currentStateName, \"success\");\n\t\t\t}\n\t\tawait GlobalVariables.resetForm([\"PO_Table\"]);\n\t\tEstimate_Select.run();\n\t\tPO_Select.run();\n\t\tPO_Item_Select.run({'purchaseOrderId':-1});\n\t},\n\tasync clickArrow(DecisionName)\n\t\t{\n\t\t\tawait storeValue(\"currentDecisionName\", DecisionName);\n\t\t\tawait storeValue(\"currentDecision\",Process.getDecision(DecisionName));\n\t\t\tawait storeValue(\"currentNext\",appsmith.store.currentState.Next);\n\t\t\tshowModal(\"ChangeState_Modal\");\n\t\t},\n\tasync onModalSubmitClicked(estimateId) {\n\t\tawait showAlert(\"Moving Estimate to \" + appsmith.store.currentDecision.State + \" State\",\"info\");\n\t\t//showAlert(\"Here in \" + appsmith.store.currentStateName);\n\t\tawait Estimate_State_Update.run({\"nextState\": appsmith.store.currentDecision.State,\"estimateId\":estimateId});\n\t\tawait Estimate_Select.run({\"currentStateName\": appsmith.store.currentStateName})\n\t\tawait PO_Select.run({\"currentStateName\": appsmith.store.currentStateName});\n\t\tPO_Item_Select.run({'purchaseOrderId':-1});\n\t\tcloseModal(\"ChangeState_Modal\");\n\t},\n}","variables":[{"name":"myVar1","value":"[]"},{"name":"myVar2","value":"{}"}],"userPermissions":[]},"id":"PO Entry_Process","deleted":false,"gitSyncId":"62c6dd94aa3be20812d63927_62c6dd95aa3be20812d639d0"},{"unpublishedCollection":{"name":"FileUploadProcess","pageId":"PO Entry","pluginId":"js-plugin","pluginType":"JS","actions":[],"archivedActions":[],"body":"export default {\n\t\n\tonfileselect:async()=>{\n\t\tif(FilePicker.files[0].size >= '20000000'){\n\t\t\t\tawait showModal('File_Alert_Modal');\n\t\t}else{\n\t\t\tif(FilePicker.files[0].name.split('.')[1]=='zip'&& FilePicker.files[0].size >= 4000000){\n\t\t\t\tawait showModal('File_Alert_Modal');\n\t\t\t}else{\n\t\t\t\tawait showAlert('File Selected','success');\n\t\t\t} \n\t\t}\n },\n\t  \n fileUploadStruct: {\n\t\t\"EstimatePO\": {\n\t\t'Title': \"Upload PO Files\",\n\t\t'DriveId': 'b!9sncToW8AUeetDafxm9_qHQ1D99nS8NIu4I1_LuTxxjEP0Mcv7wWRoPeiPnjDKd2',\n\t\t'DriveItemId': '01WIYHH3V6Y2GOVW7725BZO354PWSELRRZ', \n\t\t'SharepointId': 'anoralabs.sharepoint.com,4edcc9f6-bc85-4701-9eb4-369fc66f7fa8,df0f3574-4b67-48c3-bb82-35fcbb93c718',\n\t\t'ListId': '1c433fc4-bcbf-4616-83de-88f9e30ca776'\n\t\t}\n },\n\t \n\t fileUploadStructProd: {\n\t\t\"EstimatePO\": {\n\t\t'Title': \"Upload PO Files\",\n\t\t'DriveId': 'b!9sncToW8AUeetDafxm9_qIKKA-4bAhtFjvt40BOkn5UZ2f5-H_OFQ6HZkIUS5qEP',\n\t\t'DriveItemId': '01FIWJAG56Y2GOVW7725BZO354PWSELRRZ', \n\t\t'SharepointId': 'anoralabs.sharepoint.com,4edcc9f6-bc85-4701-9eb4-369fc66f7fa8,ee038a82-021b-451b-8efb-78d013a49f95',\n\t\t'ListId': '7efed919-f31f-4385-a1d9-908512e6a10f'\n\t\t}\n\t},\n\t \n\tclearError: async () => {\n\t\tawait storeValue('ErrorMessage', \"\");\n\t\tawait storeValue('ErrorVisibility', false);\n\t\tawait storeValue('ErrorOccured', false);\n\t}, \n\t\n\tsetError: async (errorMessage) => {\n\t\tawait storeValue('ErrorMessage', errorMessage);\n\t\tawait storeValue('ErrorVisibility', true);\n\t\tawait storeValue('ErrorOccured', true);\n\t}, \n\t \n\t getValue: (modelType, key) => {\n\t\tif(appsmith.URL.hostname==\"erp-dev.anoralabs.com\") {\t\t\n\t\t\treturn FileUploadProcess.fileUploadStruct[modelType][key];\n\t\t} else {\n\t\t\treturn FileUploadProcess.fileUploadStructProd[modelType][key];\n\t\t}\n\t},\n\t \n\t getFileObject: async (fileName,Number,NumberName) => {\n\t\tlet response=\"\";\n\t\tlet params = {'siteId': FileUploadProcess.getValue('EstimatePO', 'SharepointId'), \n\t\t\t\t\t\t\t\t\t'listId': FileUploadProcess.getValue('EstimatePO', 'ListId'),\n\t\t\t\t\t\t\t\t  'Number':Number,\n\t\t\t\t\t\t\t\t  'NumberName':NumberName};\n\t\t\n\t\tresponse = await ListItemsDelete_Select.run(params);\n\t\tconsole.log('dwnld res is',response);\n\t\tif (response.value.length == 0) {\n\t\t\treturn await FileUploadProcess.setError(\"No files exist!\");\n\t\t}\n\t\tfor(const eachFile of response.value ) {\n\t\t\tif (eachFile.driveItem.name == fileName){\n\t\t\t\tawait storeValue('fileerror','false');\n\t\t\t\treturn eachFile; \n\t\t\t} \n\t\t} \n\t\tawait storeValue('fileerror','true');\n\t\treturn await FileUploadProcess.setError(\"Cannot find file \" + fileName);\n\t},\n\t \n\t\trunDownloadFile: async () => {\n\t\tlet fileObject = await FileUploadProcess.getFileObject(ActualFileName_Input.text,appsmith.store.POId,                                                                  'POId');\n\t\tconsole.log(fileObject)\n\t\t\t\n\t\tif (appsmith.store.fileerror == 'true' ) {\n\t\t\tawait showModal('ShowAlert_Modal');\n\t\t} else {\n\t\tlet download_url = fileObject.driveItem[\"@microsoft.graph.downloadUrl\"];\n\t\tlet filename = fileObject.driveItem['name'];\n\t\tlet filetype = fileObject.driveItem[\"file\"][\"mimeType\"];\n\t\tconsole.log(filetype,'File')\n\t\tdownload(download_url, filename, filetype);\n\t\tawait showAlert('File Downloaded Successfully','success')\n\t\t}\n\t},\n\t\t\t\n\t\t getFileName: async () => {\n\t\tawait FileUploadProcess.clearError();\n\t\tif(POAttachments_Table.selectedRowIndex != -1) {\n\t\t\treturn await storeValue('ActualFileName', POAttachments_Table.selectedRow.FileName);\n\t\t}\n\t\tif (FilePicker.files.length == 0) {\n\t\t\treturn await storeValue('ActualFileName', \"\");\n\t\t}\n\t\t\n\t\tif (UserText_Input.text == \"\" || UserText_Input.isValid != true) {\n\t\t\tawait FileUploadProcess.setError(\"UserText is not provided or is not valid\");\n\t\t\treturn await storeValue('ActualFileName', \"\");\n\t\t}\n\t\tlet file_name_temp = \"\";\n\t\t file_name_temp = PO_Table.selectedRow.Id.toString().replace(/[^a-zA-Z0-9]/g, '').toString().trim() + \"_\" + UserText_Input.text.toString() + \".\" + FilePicker.files[0].name.split('.').pop().trim();\n\t\t\n\t\tawait FileUploadProcess.clearError();\n\t\treturn await storeValue('ActualFileName', file_name_temp.split(\" \").join(\"_\"));\n\t\t\n\t},\n\t\n onUploadModalClick: async () => {\n\t\t\n\t\tlet tabledata=[];\n\t\tlet siteId=\"\";\n\t\tlet listId=\"\";\n\t\tPromise.all([storeValue('activetab','Empty Tab'),FileUploadProcess.testRunRefreshFunc()])\n\t\tPromise.all([siteId=FileUploadProcess.getValue('EstimatePO','SharepointId'),listId=FileUploadProcess.getValue('EstimatePO','ListId')])\n\t\tlet data=await MetaData_Select.run({\"siteId\":siteId,\"listId\":listId,\"NumberName\":\"POId\",\"Number\":appsmith.store.POId});\n\t\tconsole.log(data);\n\t\t\n\t\tfor(let i=0;i<data.value.length;i++){\n\t\t\tconsole.log(data.value[i].fields[\"LinkFilename\"]);\n\t\t\tif(data.value[i].fields[\"LinkFilename\"]==POAttachments_Table.selectedRow.FileName){\n\t\t\t\t\t\n\t\t\t\t\t\ttabledata.push({\"Field\":\"PONumber\",\"Value\":data.value[i].fields['PONumber']},\n\t\t\t\t\t\t\t\t\t\t\t\t\t {\"Field\":\"FileType\",\"Value\":data.value[i].fields['FileType']},\n\t\t\t\t\t\t\t\t\t\t\t\t\t {\"Field\":\"ModifiedBy\",\"Value\":data.value[i].fields['ModifiedBy']},\n\t\t\t\t\t\t\t\t\t\t\t\t\t {\"Field\":'POId',\"Value\":data.value[i].fields['POId']},\n\t\t\t\t\t\t\t\t\t\t\t\t\t {\"Field\":\"OriginalFileName\",\"Value\":data.value[i].fields['OriginalFileName']})\t\t\t\t\t\t\t\t\t\t\n\t\t\t}\t\t  \n\t\t}\n\t\tPromise.all([storeValue('ActualFileName',POAttachments_Table.selectedRow.FileName),storeValue('tabledata',tabledata),\n\t\t\t\t\t\t\t\t storeValue('statename','Completed'),storeValue('disable',false)]);\n\t\t\n\t},\n\t\n\tretryfunction:async()=>{\n\t\tif(appsmith.store.add==1){\n\t\t\tawait FileUploadProcess.runCreateFile(PO_Table.selectedRow.Id,FileComments_Input.text);\n\t\t}else if(appsmith.store.add==2){\n\t\t\tawait FileUploadProcess.runModifyFile(POAttachments_Table.selectedRow.Id,FileComments_Input.text)\n\t\t}else{\n\t\t\tawait FileUploadProcess.setError('value error in retry');\n\t\t}\t\t\n\t},\n\t\t \n runCreateFile: async (POId, Comments ) => {\n\t\t// Check for duplicate.\n\t\t// if yes, raise Error\n\t\t// else, create entry in db.\n\t\t// upload file. \n\t\t// update file metadata. \n\t\ttry\n\t\t{\n\t\t\t\tlet statename=appsmith.store.statename==null?storeValue('statename','FileCheck'):appsmith.store.statename\n\t\t\t\tlet progressstatus=appsmith.store.progressstatus==null?storeValue('progressstatus','0'):appsmith.store.progressstatus\n\t\t\t\tlet retry=0;\n\t\t\t\tawait FileUploadProcess.clearError();\n\t\t\t\tawait storeValue('closedisable','False');\n\t\t\t\tif(appsmith.store.statename=='Completed'){\n\t\t\t\t\tstatename=\"FileCheck\"; \n\t\t\t\t\tprogressstatus=0;\n\t\t\t\t\tawait storeValue('statename',statename);\n\t\t\t\t\tawait storeValue('progressstatus',progressstatus);\n\t\t\t\t}\n\t\t\t\tshowModal('Progress_Modal');\n\t\t\t\tlet fileParams = { \n\t\t\t\t\t\t\t\t\t\t\t\t\t \"ModifiedBy\":appsmith.user.email.split(\"@\")[0],\n\t\t\t\t\t                 \"FileType\":FilePicker.files[0].name.split('.').pop().trim(),\n\t\t\t\t\t                 \"PONumber\":PO_Table.selectedRow.PurchaseOrderNumber,\n\t\t\t\t\t\t\t\t\t\t\t\t\t \"POId\":PO_Table.selectedRow.Id,\n\t\t\t\t\t                 \"OriginalFileName\":FilePicker.files[0].name\n\t\t\t\t}\n\t\t\t\tlet DriveId = FileUploadProcess.getValue('EstimatePO', 'DriveId');\n\t\t\t\tlet DriveItemId = FileUploadProcess.getValue('EstimatePO', 'DriveItemId');\n\t\t\t\t\n\t\t\t\twhile(statename != 'Completed')\n\t\t\t\t{\n\t\t\t\t\t\tconsole.log('statusckeckn',progressstatus);\n\t\t\t\t\t\tconsole.log(statename);\n\t\t\t\t\t\tif(statename!='Error'){\n\t\t\t\t\t\t\tawait storeValue('statename',statename);\n\t\t\t\t\t\t\tawait storeValue('progressstatus',progressstatus);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tswitch(statename)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcase 'FileCheck':\n\t\t\t\t\t\t\t\t\t\tlet response = await SpecificFilesInDrive_Select.run({'DriveId': DriveId, \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'DriveItemId': DriveItemId,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'FileName':ActualFileName_Input.text});\n\t\t\t\t\t\t\t\t\t\tconsole.log(response,'response')\n\t\t\t\t\t\t\t\t\t\tif (response.value.length == 0) {\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\tstatename='UploadToSharePoint'\n\t\t\t\t\t\t\t\t\t\t\t\t\tprogressstatus=25;\n\t\t\t\t\t\t\t\t\t\t}     \n\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tawait FileUploadProcess.setError(\"File Name Not Unique! Enter different user \");\n\t\t\t\t\t\t\t\t\t\t\t\tstatename='Error';\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase 'DBInsert':\n\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\tawait EPOAttachments_Insert.run({\"POId\":POId, \n\t\t\t\t\t\t\t\t\t\t\t\t\"FileName\":appsmith.store.ActualFileName, \"Comments\":Comments})\n\t\t\t\t\t\t\t\t\t\t\t\t.then(() => EPOAttachments_Select.run({\"POId\":POId}))\n\t\t\t\t\t\t\t\t\t\t\t\tstatename='UpdateMetadata';\n\t\t\t\t\t\t\t\t\t\t\t\tprogressstatus=75;\n\t\t\t\t\t\t\t\t    \t\tbreak;\n       \n\t\t\t\t\t\t\tcase 'UploadToSharePoint':\n\t\t\t\t\t\t\t\t     let uploadurl=await UploadSession_Create.run({'DriveId':DriveId,'DriveItemId':DriveItemId,'fileName':ActualFileName_Input.text});\n\t\t\t\t\t\t\t\t\t\t\tconsole.log('uploadurl is',uploadurl.uploadUrl);\n\t\t\t\t\t\t\t\t\t\t\tlet filesize=FilePicker.files[0].size;\n\t\t\t\t\t\t\t\t\t\t\tlet startindex=0;\n\t\t\t\t\t\t\t\t\t\t\tlet responsecreate = \"\";\n\t\t\t\t\t\t\t\t\t\t\tlet upload_chunk = filesize;\n\t\t\t\t\t\t\t\t\t\t\tlet endindex=filesize-1; \n\t\t\t\t\t\t\t\t\t\t\tresponsecreate = await FileUpload_Create.run(()=>{},()=>{},{'uploadurl':UploadSession_Create.data.uploadUrl.split('//')[1],'range':upload_chunk,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t 'startindex':startindex,'endindex':endindex,'filesize':filesize});\n\t\t\t\t\t\t\t\t\t\t\tconsole.log('responsecreate is',FileUpload_Create.data);\n\t\t\t\t\t\t\t\t\t\t\tconsole.log('name',FileUpload_Create.data.name,\"Name\")\n\t\t\t\t\t\t\t\t\t\t\tif(FileUpload_Create.data.length!=0){\n\t\t\t\t\t\t\t\t\t\t\t\tif(FileUpload_Create.data.name == ActualFileName_Input.text){ //check uploaded or not\n\t\t\t\t\t\t\t\t\t\t\t\t\tstatename='DBInsert';\n\t\t\t\t\t\t\t\t\t\t\t\t\tprogressstatus=50;\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\telse if(retry==0)\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tretry++;\n\t\t\t\t\t\t\t\t\t\t\t\tawait FileUploadProcess.setError(\"Upload Failed in first attempt, attempting second\");\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t\t\t\t\t\tawait FileUploadProcess.setError(\"Upload Failed!, File Upload Create Response not valid\");\n\t\t\t\t\t\t\t\t\t\t\t\tstatename='Error';\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'UpdateMetadata':\n\t\t\t\t\t\t\t\t\t\tlet responsemetadata=\"\";\n\t\t\t\t\t\t\t\t\t\tresponsemetadata = await FileUploadProcess.modifyFileMetadata(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tappsmith.store.ActualFileName, \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfileParams,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  'POId',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  PO_Table.selectedRow.Id);\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tconsole.log('metadata',responsemetadata);\n\t\t\t\t\t\t\t\t\t\tif(FileMetadata_Create.data.length!=0){\n\t\t\t\t\t\t\t\t\t\t\tif(FileMetadata_Create.data.POId==PO_Table.selectedRow.Id){\n\t\t\t\t\t\t\t\t\t\t\t\tstatename='Completed'\n\t\t\t\t\t\t\t\t\t\t\t\tprogressstatus=100;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\telse if(retry==0)\n\t\t\t\t\t\t\t\t\t\t{ \n\t\t\t\t\t\t\t\t\t\t\t\tretry++;\n\t\t\t\t\t\t\t\t\t\t\t\tawait FileUploadProcess.setError(\"First Attempt for Metadata is failed, Attempting Second\");\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t\t\t\t\t\tawait FileUploadProcess.setError(\"Upload Failed!, Metadata create response not valid\");\n\t\t\t\t\t\t\t\t\t\t\t\tstatename='Error';\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t \t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'Error':\n\t\t\t\t\t\t\t\t\t\tawait storeValue('closedisable','True');\n\t\t\t\t\t\t\t\t\t\tstatename='Completed';\n\t\t\t\t\t\t\t\t\t\tbreak;\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t}\n\t\t\tawait storeValue('statename',statename)\n\t\t\tawait storeValue('progressstatus',progressstatus);\n\t\t\tif(appsmith.store.statename=='Completed'&&appsmith.store.ErrorMessage==''){\n\t\t\t  await FileUploadProcess.runRefreshFunc()\n\t\t\t  .then(()=>closeModal('Progress_Modal'))\n\t\t\t\t.then(()=>Promise.all([showModal('FileUpload_Modal'),EPOAttachments_Select.run({\"POId\":PO_Table.selectedRow.Id})]))\n\t\t\t\t.then(()=>showAlert('PO File Inserted','success'))\n\t\t\t\t.then(()=>FileUpload_Check.run({'POId':PO_Table.selectedRow.Id}))\n\t\t\t}\n\t\t}\n\t\tcatch(err)\n\t\t\t{\n\t\t\t\tif(err.message==\"Cannot read properties of undefined (reading 'data')\"){\n\t\t\t\t\t\t\tPromise.all([FileUploadProcess.setError(\"Network got disconnected!, Please check your connection and retry\"),\n\t\t\t\t\t\t\t\t\t\t\t\t\tstoreValue('closedisable','True'),showAlert('Network got disconnected!, Please check your connection and retry','error')])\n\t\t\t\t \t\n\t\t\t\t}else{\n\t\t\t\t\t\t\tPromise.all([FileUploadProcess.setError(\"Upload Failed retry, \" + err.message),\n\t\t\t\t\t\t\t\t\t\t\t\t\t storeValue('closedisable','True'),showAlert(\"Upload Failed retry, \" \n\t\t\t\t\t\t\t\t\t\t\t\t\t +err.message,'error')])\n\t\t\t\t}\n\t\t\t}\n\t\n\t},\n\t\t\n modifyFileMetadata: async (fileName, fileParams, NumberName,Number) => {\n\t\t// Get a file name and the type of document (component, assembly or manufacturing)\n\t\t// Steps:\n\t\t// Get File Id from the sharepoint list.\n\t\t// Send the metadata with the API call. \n\t\t//console.log(\"meta check1\")\n\t\tlet response=\"\";\n\t\t//console.log(fileCategory);\n\t\tlet params = {'siteId': FileUploadProcess.getValue('EstimatePO', 'SharepointId'), \n\t\t\t\t\t\t\t\t\t'listId': FileUploadProcess.getValue('EstimatePO', 'ListId'),\n\t\t\t\t\t\t\t\t  'NumberName': NumberName,\n\t\t\t\t\t\t\t\t\t'Number':Number \n\t\t\t\t\t\t\t\t };\n\t\tif(POAttachments_Table.selectedRowIndex==-1){\n\t\t\t\tconsole.log(params,'metabreak');\n\t\t\t\tresponse = await ListItemMetaDataCreate_Select.run(params);\n\t\t\tconsole.log(response);\n\t\t}else{\n\t\t\t\tresponse = await ListItemsDelete_Select.run(params);\n\t\t}\n\t\tif (response.value.length == 0) {\n\t\t\treturn await FileUploadProcess.setError(\"No files exist!\");\n\t\t}\n\t\tfor(const eachFile of response.value ) {\n\t\t\tconsole.log(\"eachfile\",eachFile)\n\t\t\tif (eachFile.driveItem.name == fileName){\n\t\t\t\tconsole.log(\"eachfile\",eachFile)\n\t\t\t\t// console.log(\"File found\");\n\t\t\t\t// console.log(fileParams);\n\t\t\t\tlet query_params = {\n\t\t\t\t\t'siteId': FileUploadProcess.getValue('EstimatePO', 'SharepointId'), \n\t\t\t\t\t'listId': FileUploadProcess.getValue('EstimatePO', 'ListId'),\n\t\t\t\t\t'listItemId': eachFile.id,\n\t\t\t\t\t'fileParams': fileParams,\n\t\t\t\t};\n\t\t\t\tconsole.log(query_params)\n\t\t\t\treturn await FileMetadata_Create.run(query_params);\n\t\t\t\t\n\t\t\t}\n\t\t}\t\n\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nrunModifyFile: async (FileId, FileComments) => {\n\t\t// Update the comment to DB. \n\t\t// Update the file.\n\t\ttry\n\t\t{\n\t\t\tif(FilePicker.files.length>0){\n\t\t\t\tlet statename=appsmith.store.statename==null?storeValue('statename','FileCheck'):appsmith.store.statename\n\t\t\t\tlet progressstatus=appsmith.store.progressstatus==null?storeValue('progressstatus','0'):appsmith.store.progressstatus\n\t\t\t\tlet retry=0;\n\t\t\t\tawait FileUploadProcess.clearError();\n\t\t\t\tawait storeValue('closedisable','False');\n\t\t\t\tif(appsmith.store.statename=='Completed'){\n\t\t\t\t\tstatename=\"FileCheck\";\n\t\t\t\t\tprogressstatus=0;\n\t\t\t\t\tawait storeValue('statename',statename);\n\t\t\t\t\tawait storeValue('progressstatus',progressstatus);\n\t\t\t\t}\n\t\t\t\t//await showModal('Progress_Modal');\n\t\t\t\tlet DriveId = FileUploadProcess.getValue('EstimatePO', 'DriveId');\n\t\t\t\tlet DriveItemId = FileUploadProcess.getValue('EstimatePO', 'DriveItemId');\n\t\t\tlet fileParams = { \t \n\t\t\t\t\t\t\t\t\t\t\t\t\t \"FileType\":FilePicker.files[0].name.split('.').pop().trim(),\n\t\t\t\t\t                 \"PONumber\":PO_Table.selectedRow.PurchaseOrderNumber,\n\t\t\t\t\t\t\t\t\t\t\t\t\t \"ModifiedBy\":appsmith.user.email.split(\"@\")[0],\n\t\t\t\t\t\t\t\t\t\t\t\t\t \"POId\":PO_Table.selectedRow.Id,\n\t\t\t\t                   \"OriginalFileName\":appsmith.store.tabledata[4].Value\n\t\t\t\t};\n\t\t\t\n\t\t\tawait showModal('Progress_Modal');\n\t\t\twhile(statename != 'Completed')\n\t\t\t\t{\n\t\t\t\tconsole.log(progressstatus);\n\t\t\t\tconsole.log(statename);\n\t\t\t\tif(statename!='Error'){\n\t\t\t\t\t\tawait storeValue('statename',statename);\n\t\t\t\t\t\tawait storeValue('progressstatus',progressstatus);\n\t\t\t\t}\n\t\t\t\t\t\tswitch(statename)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcase 'FileCheck':\n\t\t\t\t\t\t\t\t\t\tlet response = await SpecificFilesInDrive_Select.run({'DriveId': DriveId,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'DriveItemId': DriveItemId,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'FileName':POAttachments_Table.selectedRow.FileName});\n\t\t\t\t\t\t\t\t\t\tif(response.value.length>0){\n\t\t\t\t\t\t\t\t\t\t\t\tfor(const eachFile of response.value ) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (eachFile.name == ActualFileName_Input.text){\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstatename='UploadToSharePoint';\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tprogressstatus=25;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t\t\t}     \n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tif(statename!='UploadToSharePoint'){\n\t\t\t\t\t\t\t\t\t\t\t\tawait FileUploadProcess.setError(\"File Not Found In Sharepoint!\");\n\t\t\t\t\t\t\t\t\t\t\t\tstatename='Error';\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tcase 'DBUpdate':\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tawait EPOAttachments_Update.run({\"FileId\":FileId, \"FileComments\": FileComments})\n\t\t\t\t\t\t\t\t\t\tstatename='UpdateMetadata';\n\t\t\t\t\t\t\t\t\t\tprogressstatus=75;\n\t\t\t\t\t\t\t\t    break;\n\n\t\t\t\t\t\t\tcase 'UploadToSharePoint': \n\t\t\t\t\t\t\t\tif(FilePicker.files.length>0){\n\t\t\t\t\t\t\t\t\t console.log('start2...')\n\t\t\t\t\t\t\t\t\t\tlet uploadurl=await  UploadSession_Create.run({'DriveId':DriveId,'DriveItemId':DriveItemId,'fileName':appsmith.store.ActualFileName});\n\t\t\t\t\t\t\t\t\t\tconsole.log(uploadurl.uploadUrl);\n\t\t\t\t\t\t\t\t\t\tlet filesize=FilePicker.files[0].size;\n\t\t\t\t\t\t\t\t\t\tlet startindex=0; \n\t\t\t\t\t\t\t\t\t\tlet responsecreate = \"\"; \n\t\t\t\t\t\t\t\t\t\tlet upload_chunk = filesize; \n\t\t\t\t\t\t\t\t\t\tlet endindex=filesize-1;\n\t\t\t\t\t\t\t\t\t\tresponsecreate = await FileUpload_Create.run(()=>{},()=>{},{'uploadurl':UploadSession_Create.data.uploadUrl.split('//')[1],'range':upload_chunk,'startindex':startindex,'endindex':endindex,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'filesize':filesize});\n\t\t\t\t\t\t\t\t\t\tconsole.log('response is',FileUpload_Create.data);\n\t\t\t\t\t\t\t\t\t\tif(FileUpload_Create.data.length!=0){\n\t\t\t\t\t\t\t\t\t\t\t\tif(FileUpload_Create.data.name == ActualFileName_Input.text){\n\t\t\t\t\t\t\t\t\t\t\t\tstatename='DBUpdate';\n\t\t\t\t\t\t\t\t\t\t\t\tprogressstatus=50;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\telse if(retry==0)\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tretry++;\n\t\t\t\t\t\t\t\t\t\t\tawait FileUploadProcess.setError(\"Upload Failed in first attempt, attempting second\");\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t\t\t\t\tawait FileUploadProcess.setError(\"Upload Failed!, File Upload Update Response not valid\");\n\t\t\t\t\t\t\t\t\t\t\tstatename='Error';\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\t\tstatename='Completed';\n\t\t\t\t\t\t\t\t\tprogressstatus=100;\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'UpdateMetadata':\n\t\t\t\t\t\t\t\t\t\tlet responsemetadata=\"\";\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tresponsemetadata = await FileUploadProcess.modifyFileMetadata(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tappsmith.store.ActualFileName, \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfileParams,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'POId',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  PO_Table.selectedRow.Id);\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tconsole.log(responsemetadata);\n\t\t\t\t\t\t\t\t\t\tif(responsemetadata.length!=0){\n\t\t\t\t\t\t\t\t\t\t\tif(responsemetadata.POId==PO_Table.selectedRow.Id){\n\t\t\t\t\t\t\t\t\t\t\t\tstatename='Completed'\n\t\t\t\t\t\t\t\t\t\t\t\tprogressstatus=100;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\telse if(retry==0)\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tretry++;\n\t\t\t\t\t\t\t\t\t\t\t\tawait FileUploadProcess.setError(\"First Attemp for Metadata is failed, Attempting Second\");\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t\t\t\t\t\tawait FileUploadProcess.setError(\"Upload Failed!, Metadata create response not valid\");\n\t\t\t\t\t\t\t\t\t\t\t\tstatename='Error';\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t \t\t\t\tbreak;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tcase 'Error':\n\t\t\t\t\t\t\t\t\t\tawait storeValue('closedisable','True');\n\t\t\t\t\t\t\t\t\t\tstatename='Completed';\n\t\t\t\t\t\t\t\t\t\tbreak;\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t}\n\t\t\tawait storeValue('statename',statename)\n\t\t\t.then(()=>storeValue('progressstatus',progressstatus))\n\t\t\tif(appsmith.store.statename=='Completed'&&appsmith.store.ErrorMessage==''){\n\t\t\t\tawait EPOAttachments_Select.run({\"POId\":PO_Table.selectedRow.Id})\n\t\t\t  await FileUploadProcess.runRefreshFunc()\n\t\t\t  .then(()=>closeModal('Progress_Modal'))\n\t\t\t\t.then(()=>storeValue('ActualFileName',''))\n\t\t\t\t.then(()=>Promise.all([showModal('FileUpload_Modal'),EPOAttachments_Select.run({\"POId\":PO_Table.selectedRow.Id})]))\n\t\t\t\t.then(()=>showAlert('PO File Updated','success'))\n\t\t\t\t.then(()=>resetWidget('EPOAttachments_Table'))\n\t\t\t}\n\t\t\t}else{\n\t\t\t\t\n\t\t\t\tawait EPOAttachments_Update.run({\"FileId\":FileId, \"FileComments\": FileComments})\n\t\t\t\t.then(() => EPOAttachments_Select.run({\"POId\":PO_Table.selectedRow.Id}))\n\t\t\t\t.then(()=>storeValue('ActualFileName',''))\n\t\t\t\t.then(()=>Promise.all([showModal('FileUpload_Modal'),EPOAttachments_Select.run({\"POId\":PO_Table.selectedRow.Id})]))\n\t\t\t\t.then(()=>showAlert('File Comments Updated','success'))\n\t\t\t}\n\t\t}\n\t\tcatch(err)\n\t\t\t{\n\t\t\t\tif(err.message==\"Cannot read properties of undefined (reading 'data')\"){\n\t\t\t\t\t\t\tPromise.all([FileUploadProcess.setError(\"Network got disconnected!, Please check your connection and retry\"),\n\t\t\t\t\t\t\t\t\t\t\t\t\tstoreValue('closedisable','True'),showAlert('Network got disconnected!, Please check your connection and retry','error')])\n\t\t\t\t \t\n\t\t\t\t}else{\n\t\t\t\t\t\t\tPromise.all([FileUploadProcess.setError(\"Upload Failed retry, \" + err.message),\n\t\t\t\t\t\t\t\t\t\t\t\t\t storeValue('closedisable','True'),showAlert(\"Upload Failed retry, \" \n\t\t\t\t\t\t\t\t\t\t\t\t\t +err.message,'error')])\n\t\t\t\t}\n\t\t\t}\n\t},\n\trunDeleteFile: async (FileId) => {\n\t\t// Delete entry in db. \n\t\t// Delete entry in sharepoint\n\t try{\n\t\t \t\tlet fileObject=\"\";\n\t\t \t\tawait FileUploadProcess.clearError();\n\t\t \t\t\n\t\t\t\tfileObject = await FileUploadProcess.getFileObject(appsmith.store.ActualFileName,PO_Table.selectedRow.Id,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t 'POId');\n\t\t\t\tif (appsmith.store.ErrorOccured === true) {\n\t\t\t\t\tawait showAlert(\"File not found in sharepoint, Deleting in database\");\n\t\t\t\t\tawait FileUploadProcess.setError(\"No files exist!\");\n\t\t\t\t}else{\n\t\t\t\tconsole.log(fileObject);\n\t\t\t\tlet driveId = FileUploadProcess.getValue('EstimatePO', 'DriveId');\n\t\t\t\tlet itemId = fileObject.driveItem[\"id\"]; // sharepointid for file , then delete it\n\n\t\t\t\tlet response = \"\";\n\t\t\t\tresponse = await File_Delete.run({\"driveId\": driveId, \"itemId\": itemId})\n\t\t\t\t}\t\t\n\n\t\t\t\tawait EPOAttachments_Delete.run({\"FileId\": FileId})\n\t\t\t\t.then(() => EPOAttachments_Select.run({\"POId\":PO_Table.selectedRow.Id}))\n\t\t    .then(()=>storeValue('ActualFileName',''))\n\t\t\t\t.then(() => showAlert(\"PO File Deleted\", \"success\"))\n\t\t \t\t.then(()=>FileUpload_Check.run({\"POId\":PO_Table.selectedRow.EId}))\n\t\t\t\t\t\t\t\t\t\n\t }catch(err){\n\t\t if(err.message==\"Cannot read properties of undefined (reading 'data')\"){\n\t\t\t\t\t\t\tPromise.all([FileUploadProcess.setError(\"Network got disconnected!, Please check your connection and retry\"),\n\t\t\t\t\t\t\t\t\t\t\t\t\tstoreValue('closedisable','True'),showAlert('Network got disconnected!, Please check your connection and retry','error')])\n\t\t\t\t \t\n\t\t\t\t}else{\n\t\t\t\t\t\t\tPromise.all([FileUploadProcess.setError(\"Delete Failed retry, \" + err.message),\n\t\t\t\t\t\t\t\t\t\t\t\t\t storeValue('closedisable','True'),showAlert(\"Delete Failed retry, \" \n\t\t\t\t\t\t\t\t\t\t\t\t\t +err.message,'error')])\n\t\t\t\t} \n\t }\n\t},\n\trunRefreshFunc: async () => {\n\t\tPromise.all([GlobalVariables.resetForm(['UserText_Input','FileComments_Input','FilePicker']),\n\t\t\tstoreValue('ActualFileName', \"\"),storeValue('disable',false),FileUploadProcess.clearError()])\n\t},\n\ttestRunRefreshFunc: async () => {\n\t\tPromise.all([resetWidget(\"FilePicker\"),\n\t\t\tstoreValue('ActualFileName', \"\"),storeValue('disable',false),FileUploadProcess.clearError()])\n\t},\n\t\n\tmodifyMetadata: async (fileParams, Number, NumberName) => {\n\t\t// Get a file name and the type of document (component, assembly or manufacturing)\n\t\t// Steps:\n\t\t// Get File Id from the sharepoint list.\n\t\t// Send the metadata with the API call. \n\t\t//console.log(\"meta check1\")\n\t\tlet response=\"\";\n\t\tlet metaresponse=\"\";\n\t\tlet siteId=\"\";\n\t\tlet listId =\"\";\n\t\tPromise.all([siteId=FileUploadProcess.getValue('EstimatePO','SharepointId'),listId=FileUploadProcess.getValue('EstimatePO','ListId')])\n\t\t\n\t\tlet params = {'siteId': siteId, \n\t\t\t\t\t\t\t\t\t'listId': listId,\n\t\t\t\t\t\t\t\t  'Number': Number,\n\t\t\t\t\t\t\t\t  'NumberName':NumberName};\n\t\t\n\t\tresponse = await ListItemsDelete_Select.run(params);\n\t\t\n\t\tif (response.value.length == 0) {\n\t\t\tawait showAlert('Update failed','error');\n\t\t}\n\t\tlet data=[];\n\t\tfor(const eachFile of response.value ) {\n\t\t\n\t\t\t\tlet query_params = {\n\t\t\t\t\t'siteId': FileUploadProcess.getValue('EstimatePO', 'SharepointId'), \n\t\t\t\t\t'listId': FileUploadProcess.getValue('EstimatePO', 'ListId'),\n\t\t\t\t\t'listItemId': eachFile.id,\n\t\t\t\t\t'fileParams': fileParams,\n\t\t\t\t};\n\t\t\t\tdata.push(query_params);\n\t\t\n\t\t}\n\t\tconst metadata = data.map(data=>FileMetadata_Create.run(data))\n\t\treturn Promise.all(metadata)\n\t},\n\t\n}\n\t","variables":[{"name":"fileUploadStruct","value":"{\n  \"EstimatePO\": {\n    'Title': \"Upload PO Files\",\n    'DriveId': 'b!9sncToW8AUeetDafxm9_qHQ1D99nS8NIu4I1_LuTxxjEP0Mcv7wWRoPeiPnjDKd2',\n    'DriveItemId': '01WIYHH3V6Y2GOVW7725BZO354PWSELRRZ',\n    'SharepointId': 'anoralabs.sharepoint.com,4edcc9f6-bc85-4701-9eb4-369fc66f7fa8,df0f3574-4b67-48c3-bb82-35fcbb93c718',\n    'ListId': '1c433fc4-bcbf-4616-83de-88f9e30ca776'\n  }\n}"},{"name":"fileUploadStructProd","value":"{\n  \"EstimatePO\": {\n    'Title': \"Upload PO Files\",\n    'DriveId': 'b!9sncToW8AUeetDafxm9_qIKKA-4bAhtFjvt40BOkn5UZ2f5-H_OFQ6HZkIUS5qEP',\n    'DriveItemId': '01FIWJAG56Y2GOVW7725BZO354PWSELRRZ',\n    'SharepointId': 'anoralabs.sharepoint.com,4edcc9f6-bc85-4701-9eb4-369fc66f7fa8,ee038a82-021b-451b-8efb-78d013a49f95',\n    'ListId': '7efed919-f31f-4385-a1d9-908512e6a10f'\n  }\n}"}],"userPermissions":[]},"publishedCollection":{"name":"FileUploadProcess","pageId":"PO Entry","pluginId":"js-plugin","pluginType":"JS","actions":[],"archivedActions":[],"body":"export default {\n\t\n\tonfileselect:async()=>{\n\t\tif(FilePicker.files[0].size >= '20000000'){\n\t\t\t\tawait showModal('File_Alert_Modal');\n\t\t}else{\n\t\t\tif(FilePicker.files[0].name.split('.')[1]=='zip'&& FilePicker.files[0].size >= 4000000){\n\t\t\t\tawait showModal('File_Alert_Modal');\n\t\t\t}else{\n\t\t\t\tawait showAlert('File Selected','success');\n\t\t\t} \n\t\t}\n },\n\t  \n fileUploadStruct: {\n\t\t\"EstimatePO\": {\n\t\t'Title': \"Upload PO Files\",\n\t\t'DriveId': 'b!9sncToW8AUeetDafxm9_qHQ1D99nS8NIu4I1_LuTxxjEP0Mcv7wWRoPeiPnjDKd2',\n\t\t'DriveItemId': '01WIYHH3V6Y2GOVW7725BZO354PWSELRRZ', \n\t\t'SharepointId': 'anoralabs.sharepoint.com,4edcc9f6-bc85-4701-9eb4-369fc66f7fa8,df0f3574-4b67-48c3-bb82-35fcbb93c718',\n\t\t'ListId': '1c433fc4-bcbf-4616-83de-88f9e30ca776'\n\t\t}\n },\n\t \n\t fileUploadStructProd: {\n\t\t\"EstimatePO\": {\n\t\t'Title': \"Upload PO Files\",\n\t\t'DriveId': 'b!9sncToW8AUeetDafxm9_qIKKA-4bAhtFjvt40BOkn5UZ2f5-H_OFQ6HZkIUS5qEP',\n\t\t'DriveItemId': '01FIWJAG56Y2GOVW7725BZO354PWSELRRZ', \n\t\t'SharepointId': 'anoralabs.sharepoint.com,4edcc9f6-bc85-4701-9eb4-369fc66f7fa8,ee038a82-021b-451b-8efb-78d013a49f95',\n\t\t'ListId': '7efed919-f31f-4385-a1d9-908512e6a10f'\n\t\t}\n\t},\n\t \n\tclearError: async () => {\n\t\tawait storeValue('ErrorMessage', \"\");\n\t\tawait storeValue('ErrorVisibility', false);\n\t\tawait storeValue('ErrorOccured', false);\n\t}, \n\t\n\tsetError: async (errorMessage) => {\n\t\tawait storeValue('ErrorMessage', errorMessage);\n\t\tawait storeValue('ErrorVisibility', true);\n\t\tawait storeValue('ErrorOccured', true);\n\t}, \n\t \n\t getValue: (modelType, key) => {\n\t\tif(appsmith.URL.hostname==\"erp-dev.anoralabs.com\") {\t\t\n\t\t\treturn FileUploadProcess.fileUploadStruct[modelType][key];\n\t\t} else {\n\t\t\treturn FileUploadProcess.fileUploadStructProd[modelType][key];\n\t\t}\n\t},\n\t \n\t getFileObject: async (fileName,Number,NumberName) => {\n\t\tlet response=\"\";\n\t\tlet params = {'siteId': FileUploadProcess.getValue('EstimatePO', 'SharepointId'), \n\t\t\t\t\t\t\t\t\t'listId': FileUploadProcess.getValue('EstimatePO', 'ListId'),\n\t\t\t\t\t\t\t\t  'Number':Number,\n\t\t\t\t\t\t\t\t  'NumberName':NumberName};\n\t\t\n\t\tresponse = await ListItemsDelete_Select.run(params);\n\t\tconsole.log('dwnld res is',response);\n\t\tif (response.value.length == 0) {\n\t\t\treturn await FileUploadProcess.setError(\"No files exist!\");\n\t\t}\n\t\tfor(const eachFile of response.value ) {\n\t\t\tif (eachFile.driveItem.name == fileName){\n\t\t\t\tawait storeValue('fileerror','false');\n\t\t\t\treturn eachFile; \n\t\t\t} \n\t\t} \n\t\tawait storeValue('fileerror','true');\n\t\treturn await FileUploadProcess.setError(\"Cannot find file \" + fileName);\n\t},\n\t \n\t\trunDownloadFile: async () => {\n\t\tlet fileObject = await FileUploadProcess.getFileObject(ActualFileName_Input.text,appsmith.store.POId,                                                                  'POId');\n\t\tconsole.log(fileObject)\n\t\t\t\n\t\tif (appsmith.store.fileerror == 'true' ) {\n\t\t\tawait showModal('ShowAlert_Modal');\n\t\t} else {\n\t\tlet download_url = fileObject.driveItem[\"@microsoft.graph.downloadUrl\"];\n\t\tlet filename = fileObject.driveItem['name'];\n\t\tlet filetype = fileObject.driveItem[\"file\"][\"mimeType\"];\n\t\tconsole.log(filetype,'File')\n\t\tdownload(download_url, filename, filetype);\n\t\tawait showAlert('File Downloaded Successfully','success')\n\t\t}\n\t},\n\t\t\t\n\t\t getFileName: async () => {\n\t\tawait FileUploadProcess.clearError();\n\t\tif(POAttachments_Table.selectedRowIndex != -1) {\n\t\t\treturn await storeValue('ActualFileName', POAttachments_Table.selectedRow.FileName);\n\t\t}\n\t\tif (FilePicker.files.length == 0) {\n\t\t\treturn await storeValue('ActualFileName', \"\");\n\t\t}\n\t\t\n\t\tif (UserText_Input.text == \"\" || UserText_Input.isValid != true) {\n\t\t\tawait FileUploadProcess.setError(\"UserText is not provided or is not valid\");\n\t\t\treturn await storeValue('ActualFileName', \"\");\n\t\t}\n\t\tlet file_name_temp = \"\";\n\t\t file_name_temp = PO_Table.selectedRow.Id.toString().replace(/[^a-zA-Z0-9]/g, '').toString().trim() + \"_\" + UserText_Input.text.toString() + \".\" + FilePicker.files[0].name.split('.').pop().trim();\n\t\t\n\t\tawait FileUploadProcess.clearError();\n\t\treturn await storeValue('ActualFileName', file_name_temp.split(\" \").join(\"_\"));\n\t\t\n\t},\n\t\n onUploadModalClick: async () => {\n\t\t\n\t\tlet tabledata=[];\n\t\tlet siteId=\"\";\n\t\tlet listId=\"\";\n\t\tPromise.all([storeValue('activetab','Empty Tab'),FileUploadProcess.testRunRefreshFunc()])\n\t\tPromise.all([siteId=FileUploadProcess.getValue('EstimatePO','SharepointId'),listId=FileUploadProcess.getValue('EstimatePO','ListId')])\n\t\tlet data=await MetaData_Select.run({\"siteId\":siteId,\"listId\":listId,\"NumberName\":\"POId\",\"Number\":appsmith.store.POId});\n\t\tconsole.log(data);\n\t\t\n\t\tfor(let i=0;i<data.value.length;i++){\n\t\t\tconsole.log(data.value[i].fields[\"LinkFilename\"]);\n\t\t\tif(data.value[i].fields[\"LinkFilename\"]==POAttachments_Table.selectedRow.FileName){\n\t\t\t\t\t\n\t\t\t\t\t\ttabledata.push({\"Field\":\"PONumber\",\"Value\":data.value[i].fields['PONumber']},\n\t\t\t\t\t\t\t\t\t\t\t\t\t {\"Field\":\"FileType\",\"Value\":data.value[i].fields['FileType']},\n\t\t\t\t\t\t\t\t\t\t\t\t\t {\"Field\":\"ModifiedBy\",\"Value\":data.value[i].fields['ModifiedBy']},\n\t\t\t\t\t\t\t\t\t\t\t\t\t {\"Field\":'POId',\"Value\":data.value[i].fields['POId']},\n\t\t\t\t\t\t\t\t\t\t\t\t\t {\"Field\":\"OriginalFileName\",\"Value\":data.value[i].fields['OriginalFileName']})\t\t\t\t\t\t\t\t\t\t\n\t\t\t}\t\t  \n\t\t}\n\t\tPromise.all([storeValue('ActualFileName',POAttachments_Table.selectedRow.FileName),storeValue('tabledata',tabledata),\n\t\t\t\t\t\t\t\t storeValue('statename','Completed'),storeValue('disable',false)]);\n\t\t\n\t},\n\t\n\tretryfunction:async()=>{\n\t\tif(appsmith.store.add==1){\n\t\t\tawait FileUploadProcess.runCreateFile(PO_Table.selectedRow.Id,FileComments_Input.text);\n\t\t}else if(appsmith.store.add==2){\n\t\t\tawait FileUploadProcess.runModifyFile(POAttachments_Table.selectedRow.Id,FileComments_Input.text)\n\t\t}else{\n\t\t\tawait FileUploadProcess.setError('value error in retry');\n\t\t}\t\t\n\t},\n\t\t \n runCreateFile: async (POId, Comments ) => {\n\t\t// Check for duplicate.\n\t\t// if yes, raise Error\n\t\t// else, create entry in db.\n\t\t// upload file. \n\t\t// update file metadata. \n\t\ttry\n\t\t{\n\t\t\t\tlet statename=appsmith.store.statename==null?storeValue('statename','FileCheck'):appsmith.store.statename\n\t\t\t\tlet progressstatus=appsmith.store.progressstatus==null?storeValue('progressstatus','0'):appsmith.store.progressstatus\n\t\t\t\tlet retry=0;\n\t\t\t\tawait FileUploadProcess.clearError();\n\t\t\t\tawait storeValue('closedisable','False');\n\t\t\t\tif(appsmith.store.statename=='Completed'){\n\t\t\t\t\tstatename=\"FileCheck\"; \n\t\t\t\t\tprogressstatus=0;\n\t\t\t\t\tawait storeValue('statename',statename);\n\t\t\t\t\tawait storeValue('progressstatus',progressstatus);\n\t\t\t\t}\n\t\t\t\tshowModal('Progress_Modal');\n\t\t\t\tlet fileParams = { \n\t\t\t\t\t\t\t\t\t\t\t\t\t \"ModifiedBy\":appsmith.user.email.split(\"@\")[0],\n\t\t\t\t\t                 \"FileType\":FilePicker.files[0].name.split('.').pop().trim(),\n\t\t\t\t\t                 \"PONumber\":PO_Table.selectedRow.PurchaseOrderNumber,\n\t\t\t\t\t\t\t\t\t\t\t\t\t \"POId\":PO_Table.selectedRow.Id,\n\t\t\t\t\t                 \"OriginalFileName\":FilePicker.files[0].name\n\t\t\t\t}\n\t\t\t\tlet DriveId = FileUploadProcess.getValue('EstimatePO', 'DriveId');\n\t\t\t\tlet DriveItemId = FileUploadProcess.getValue('EstimatePO', 'DriveItemId');\n\t\t\t\t\n\t\t\t\twhile(statename != 'Completed')\n\t\t\t\t{\n\t\t\t\t\t\tconsole.log('statusckeckn',progressstatus);\n\t\t\t\t\t\tconsole.log(statename);\n\t\t\t\t\t\tif(statename!='Error'){\n\t\t\t\t\t\t\tawait storeValue('statename',statename);\n\t\t\t\t\t\t\tawait storeValue('progressstatus',progressstatus);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tswitch(statename)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcase 'FileCheck':\n\t\t\t\t\t\t\t\t\t\tlet response = await SpecificFilesInDrive_Select.run({'DriveId': DriveId, \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'DriveItemId': DriveItemId,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'FileName':ActualFileName_Input.text});\n\t\t\t\t\t\t\t\t\t\tconsole.log(response,'response')\n\t\t\t\t\t\t\t\t\t\tif (response.value.length == 0) {\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\tstatename='UploadToSharePoint'\n\t\t\t\t\t\t\t\t\t\t\t\t\tprogressstatus=25;\n\t\t\t\t\t\t\t\t\t\t}     \n\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tawait FileUploadProcess.setError(\"File Name Not Unique! Enter different user \");\n\t\t\t\t\t\t\t\t\t\t\t\tstatename='Error';\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase 'DBInsert':\n\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\tawait EPOAttachments_Insert.run({\"POId\":POId, \n\t\t\t\t\t\t\t\t\t\t\t\t\"FileName\":appsmith.store.ActualFileName, \"Comments\":Comments})\n\t\t\t\t\t\t\t\t\t\t\t\t.then(() => EPOAttachments_Select.run({\"POId\":POId}))\n\t\t\t\t\t\t\t\t\t\t\t\tstatename='UpdateMetadata';\n\t\t\t\t\t\t\t\t\t\t\t\tprogressstatus=75;\n\t\t\t\t\t\t\t\t    \t\tbreak;\n       \n\t\t\t\t\t\t\tcase 'UploadToSharePoint':\n\t\t\t\t\t\t\t\t     let uploadurl=await UploadSession_Create.run({'DriveId':DriveId,'DriveItemId':DriveItemId,'fileName':ActualFileName_Input.text});\n\t\t\t\t\t\t\t\t\t\t\tconsole.log('uploadurl is',uploadurl.uploadUrl);\n\t\t\t\t\t\t\t\t\t\t\tlet filesize=FilePicker.files[0].size;\n\t\t\t\t\t\t\t\t\t\t\tlet startindex=0;\n\t\t\t\t\t\t\t\t\t\t\tlet responsecreate = \"\";\n\t\t\t\t\t\t\t\t\t\t\tlet upload_chunk = filesize;\n\t\t\t\t\t\t\t\t\t\t\tlet endindex=filesize-1; \n\t\t\t\t\t\t\t\t\t\t\tresponsecreate = await FileUpload_Create.run(()=>{},()=>{},{'uploadurl':UploadSession_Create.data.uploadUrl.split('//')[1],'range':upload_chunk,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t 'startindex':startindex,'endindex':endindex,'filesize':filesize});\n\t\t\t\t\t\t\t\t\t\t\tconsole.log('responsecreate is',FileUpload_Create.data);\n\t\t\t\t\t\t\t\t\t\t\tconsole.log('name',FileUpload_Create.data.name,\"Name\")\n\t\t\t\t\t\t\t\t\t\t\tif(FileUpload_Create.data.length!=0){\n\t\t\t\t\t\t\t\t\t\t\t\tif(FileUpload_Create.data.name == ActualFileName_Input.text){ //check uploaded or not\n\t\t\t\t\t\t\t\t\t\t\t\t\tstatename='DBInsert';\n\t\t\t\t\t\t\t\t\t\t\t\t\tprogressstatus=50;\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\telse if(retry==0)\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tretry++;\n\t\t\t\t\t\t\t\t\t\t\t\tawait FileUploadProcess.setError(\"Upload Failed in first attempt, attempting second\");\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t\t\t\t\t\tawait FileUploadProcess.setError(\"Upload Failed!, File Upload Create Response not valid\");\n\t\t\t\t\t\t\t\t\t\t\t\tstatename='Error';\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'UpdateMetadata':\n\t\t\t\t\t\t\t\t\t\tlet responsemetadata=\"\";\n\t\t\t\t\t\t\t\t\t\tresponsemetadata = await FileUploadProcess.modifyFileMetadata(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tappsmith.store.ActualFileName, \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfileParams,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  'POId',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  PO_Table.selectedRow.Id);\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tconsole.log('metadata',responsemetadata);\n\t\t\t\t\t\t\t\t\t\tif(FileMetadata_Create.data.length!=0){\n\t\t\t\t\t\t\t\t\t\t\tif(FileMetadata_Create.data.POId==PO_Table.selectedRow.Id){\n\t\t\t\t\t\t\t\t\t\t\t\tstatename='Completed'\n\t\t\t\t\t\t\t\t\t\t\t\tprogressstatus=100;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\telse if(retry==0)\n\t\t\t\t\t\t\t\t\t\t{ \n\t\t\t\t\t\t\t\t\t\t\t\tretry++;\n\t\t\t\t\t\t\t\t\t\t\t\tawait FileUploadProcess.setError(\"First Attempt for Metadata is failed, Attempting Second\");\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t\t\t\t\t\tawait FileUploadProcess.setError(\"Upload Failed!, Metadata create response not valid\");\n\t\t\t\t\t\t\t\t\t\t\t\tstatename='Error';\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t \t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'Error':\n\t\t\t\t\t\t\t\t\t\tawait storeValue('closedisable','True');\n\t\t\t\t\t\t\t\t\t\tstatename='Completed';\n\t\t\t\t\t\t\t\t\t\tbreak;\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t}\n\t\t\tawait storeValue('statename',statename)\n\t\t\tawait storeValue('progressstatus',progressstatus);\n\t\t\tif(appsmith.store.statename=='Completed'&&appsmith.store.ErrorMessage==''){\n\t\t\t  await FileUploadProcess.runRefreshFunc()\n\t\t\t  .then(()=>closeModal('Progress_Modal'))\n\t\t\t\t.then(()=>Promise.all([showModal('FileUpload_Modal'),EPOAttachments_Select.run({\"POId\":PO_Table.selectedRow.Id})]))\n\t\t\t\t.then(()=>showAlert('PO File Inserted','success'))\n\t\t\t\t.then(()=>FileUpload_Check.run({'POId':PO_Table.selectedRow.Id}))\n\t\t\t}\n\t\t}\n\t\tcatch(err)\n\t\t\t{\n\t\t\t\tif(err.message==\"Cannot read properties of undefined (reading 'data')\"){\n\t\t\t\t\t\t\tPromise.all([FileUploadProcess.setError(\"Network got disconnected!, Please check your connection and retry\"),\n\t\t\t\t\t\t\t\t\t\t\t\t\tstoreValue('closedisable','True'),showAlert('Network got disconnected!, Please check your connection and retry','error')])\n\t\t\t\t \t\n\t\t\t\t}else{\n\t\t\t\t\t\t\tPromise.all([FileUploadProcess.setError(\"Upload Failed retry, \" + err.message),\n\t\t\t\t\t\t\t\t\t\t\t\t\t storeValue('closedisable','True'),showAlert(\"Upload Failed retry, \" \n\t\t\t\t\t\t\t\t\t\t\t\t\t +err.message,'error')])\n\t\t\t\t}\n\t\t\t}\n\t\n\t},\n\t\t\n modifyFileMetadata: async (fileName, fileParams, NumberName,Number) => {\n\t\t// Get a file name and the type of document (component, assembly or manufacturing)\n\t\t// Steps:\n\t\t// Get File Id from the sharepoint list.\n\t\t// Send the metadata with the API call. \n\t\t//console.log(\"meta check1\")\n\t\tlet response=\"\";\n\t\t//console.log(fileCategory);\n\t\tlet params = {'siteId': FileUploadProcess.getValue('EstimatePO', 'SharepointId'), \n\t\t\t\t\t\t\t\t\t'listId': FileUploadProcess.getValue('EstimatePO', 'ListId'),\n\t\t\t\t\t\t\t\t  'NumberName': NumberName,\n\t\t\t\t\t\t\t\t\t'Number':Number \n\t\t\t\t\t\t\t\t };\n\t\tif(POAttachments_Table.selectedRowIndex==-1){\n\t\t\t\tconsole.log(params,'metabreak');\n\t\t\t\tresponse = await ListItemMetaDataCreate_Select.run(params);\n\t\t\tconsole.log(response);\n\t\t}else{\n\t\t\t\tresponse = await ListItemsDelete_Select.run(params);\n\t\t}\n\t\tif (response.value.length == 0) {\n\t\t\treturn await FileUploadProcess.setError(\"No files exist!\");\n\t\t}\n\t\tfor(const eachFile of response.value ) {\n\t\t\tconsole.log(\"eachfile\",eachFile)\n\t\t\tif (eachFile.driveItem.name == fileName){\n\t\t\t\tconsole.log(\"eachfile\",eachFile)\n\t\t\t\t// console.log(\"File found\");\n\t\t\t\t// console.log(fileParams);\n\t\t\t\tlet query_params = {\n\t\t\t\t\t'siteId': FileUploadProcess.getValue('EstimatePO', 'SharepointId'), \n\t\t\t\t\t'listId': FileUploadProcess.getValue('EstimatePO', 'ListId'),\n\t\t\t\t\t'listItemId': eachFile.id,\n\t\t\t\t\t'fileParams': fileParams,\n\t\t\t\t};\n\t\t\t\tconsole.log(query_params)\n\t\t\t\treturn await FileMetadata_Create.run(query_params);\n\t\t\t\t\n\t\t\t}\n\t\t}\t\n\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nrunModifyFile: async (FileId, FileComments) => {\n\t\t// Update the comment to DB. \n\t\t// Update the file.\n\t\ttry\n\t\t{\n\t\t\tif(FilePicker.files.length>0){\n\t\t\t\tlet statename=appsmith.store.statename==null?storeValue('statename','FileCheck'):appsmith.store.statename\n\t\t\t\tlet progressstatus=appsmith.store.progressstatus==null?storeValue('progressstatus','0'):appsmith.store.progressstatus\n\t\t\t\tlet retry=0;\n\t\t\t\tawait FileUploadProcess.clearError();\n\t\t\t\tawait storeValue('closedisable','False');\n\t\t\t\tif(appsmith.store.statename=='Completed'){\n\t\t\t\t\tstatename=\"FileCheck\";\n\t\t\t\t\tprogressstatus=0;\n\t\t\t\t\tawait storeValue('statename',statename);\n\t\t\t\t\tawait storeValue('progressstatus',progressstatus);\n\t\t\t\t}\n\t\t\t\t//await showModal('Progress_Modal');\n\t\t\t\tlet DriveId = FileUploadProcess.getValue('EstimatePO', 'DriveId');\n\t\t\t\tlet DriveItemId = FileUploadProcess.getValue('EstimatePO', 'DriveItemId');\n\t\t\tlet fileParams = { \t \n\t\t\t\t\t\t\t\t\t\t\t\t\t \"FileType\":FilePicker.files[0].name.split('.').pop().trim(),\n\t\t\t\t\t                 \"PONumber\":PO_Table.selectedRow.PurchaseOrderNumber,\n\t\t\t\t\t\t\t\t\t\t\t\t\t \"ModifiedBy\":appsmith.user.email.split(\"@\")[0],\n\t\t\t\t\t\t\t\t\t\t\t\t\t \"POId\":PO_Table.selectedRow.Id,\n\t\t\t\t                   \"OriginalFileName\":appsmith.store.tabledata[4].Value\n\t\t\t\t};\n\t\t\t\n\t\t\tawait showModal('Progress_Modal');\n\t\t\twhile(statename != 'Completed')\n\t\t\t\t{\n\t\t\t\tconsole.log(progressstatus);\n\t\t\t\tconsole.log(statename);\n\t\t\t\tif(statename!='Error'){\n\t\t\t\t\t\tawait storeValue('statename',statename);\n\t\t\t\t\t\tawait storeValue('progressstatus',progressstatus);\n\t\t\t\t}\n\t\t\t\t\t\tswitch(statename)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcase 'FileCheck':\n\t\t\t\t\t\t\t\t\t\tlet response = await SpecificFilesInDrive_Select.run({'DriveId': DriveId,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'DriveItemId': DriveItemId,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'FileName':POAttachments_Table.selectedRow.FileName});\n\t\t\t\t\t\t\t\t\t\tif(response.value.length>0){\n\t\t\t\t\t\t\t\t\t\t\t\tfor(const eachFile of response.value ) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (eachFile.name == ActualFileName_Input.text){\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstatename='UploadToSharePoint';\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tprogressstatus=25;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t\t\t}     \n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tif(statename!='UploadToSharePoint'){\n\t\t\t\t\t\t\t\t\t\t\t\tawait FileUploadProcess.setError(\"File Not Found In Sharepoint!\");\n\t\t\t\t\t\t\t\t\t\t\t\tstatename='Error';\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tcase 'DBUpdate':\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tawait EPOAttachments_Update.run({\"FileId\":FileId, \"FileComments\": FileComments})\n\t\t\t\t\t\t\t\t\t\tstatename='UpdateMetadata';\n\t\t\t\t\t\t\t\t\t\tprogressstatus=75;\n\t\t\t\t\t\t\t\t    break;\n\n\t\t\t\t\t\t\tcase 'UploadToSharePoint': \n\t\t\t\t\t\t\t\tif(FilePicker.files.length>0){\n\t\t\t\t\t\t\t\t\t console.log('start2...')\n\t\t\t\t\t\t\t\t\t\tlet uploadurl=await  UploadSession_Create.run({'DriveId':DriveId,'DriveItemId':DriveItemId,'fileName':appsmith.store.ActualFileName});\n\t\t\t\t\t\t\t\t\t\tconsole.log(uploadurl.uploadUrl);\n\t\t\t\t\t\t\t\t\t\tlet filesize=FilePicker.files[0].size;\n\t\t\t\t\t\t\t\t\t\tlet startindex=0; \n\t\t\t\t\t\t\t\t\t\tlet responsecreate = \"\"; \n\t\t\t\t\t\t\t\t\t\tlet upload_chunk = filesize; \n\t\t\t\t\t\t\t\t\t\tlet endindex=filesize-1;\n\t\t\t\t\t\t\t\t\t\tresponsecreate = await FileUpload_Create.run(()=>{},()=>{},{'uploadurl':UploadSession_Create.data.uploadUrl.split('//')[1],'range':upload_chunk,'startindex':startindex,'endindex':endindex,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'filesize':filesize});\n\t\t\t\t\t\t\t\t\t\tconsole.log('response is',FileUpload_Create.data);\n\t\t\t\t\t\t\t\t\t\tif(FileUpload_Create.data.length!=0){\n\t\t\t\t\t\t\t\t\t\t\t\tif(FileUpload_Create.data.name == ActualFileName_Input.text){\n\t\t\t\t\t\t\t\t\t\t\t\tstatename='DBUpdate';\n\t\t\t\t\t\t\t\t\t\t\t\tprogressstatus=50;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\telse if(retry==0)\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tretry++;\n\t\t\t\t\t\t\t\t\t\t\tawait FileUploadProcess.setError(\"Upload Failed in first attempt, attempting second\");\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t\t\t\t\tawait FileUploadProcess.setError(\"Upload Failed!, File Upload Update Response not valid\");\n\t\t\t\t\t\t\t\t\t\t\tstatename='Error';\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\t\tstatename='Completed';\n\t\t\t\t\t\t\t\t\tprogressstatus=100;\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'UpdateMetadata':\n\t\t\t\t\t\t\t\t\t\tlet responsemetadata=\"\";\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tresponsemetadata = await FileUploadProcess.modifyFileMetadata(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tappsmith.store.ActualFileName, \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfileParams,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'POId',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  PO_Table.selectedRow.Id);\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tconsole.log(responsemetadata);\n\t\t\t\t\t\t\t\t\t\tif(responsemetadata.length!=0){\n\t\t\t\t\t\t\t\t\t\t\tif(responsemetadata.POId==PO_Table.selectedRow.Id){\n\t\t\t\t\t\t\t\t\t\t\t\tstatename='Completed'\n\t\t\t\t\t\t\t\t\t\t\t\tprogressstatus=100;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\telse if(retry==0)\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tretry++;\n\t\t\t\t\t\t\t\t\t\t\t\tawait FileUploadProcess.setError(\"First Attemp for Metadata is failed, Attempting Second\");\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t\t\t\t\t\tawait FileUploadProcess.setError(\"Upload Failed!, Metadata create response not valid\");\n\t\t\t\t\t\t\t\t\t\t\t\tstatename='Error';\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t \t\t\t\tbreak;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tcase 'Error':\n\t\t\t\t\t\t\t\t\t\tawait storeValue('closedisable','True');\n\t\t\t\t\t\t\t\t\t\tstatename='Completed';\n\t\t\t\t\t\t\t\t\t\tbreak;\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t}\n\t\t\tawait storeValue('statename',statename)\n\t\t\t.then(()=>storeValue('progressstatus',progressstatus))\n\t\t\tif(appsmith.store.statename=='Completed'&&appsmith.store.ErrorMessage==''){\n\t\t\t\tawait EPOAttachments_Select.run({\"POId\":PO_Table.selectedRow.Id})\n\t\t\t  await FileUploadProcess.runRefreshFunc()\n\t\t\t  .then(()=>closeModal('Progress_Modal'))\n\t\t\t\t.then(()=>storeValue('ActualFileName',''))\n\t\t\t\t.then(()=>Promise.all([showModal('FileUpload_Modal'),EPOAttachments_Select.run({\"POId\":PO_Table.selectedRow.Id})]))\n\t\t\t\t.then(()=>showAlert('PO File Updated','success'))\n\t\t\t\t.then(()=>resetWidget('EPOAttachments_Table'))\n\t\t\t}\n\t\t\t}else{\n\t\t\t\t\n\t\t\t\tawait EPOAttachments_Update.run({\"FileId\":FileId, \"FileComments\": FileComments})\n\t\t\t\t.then(() => EPOAttachments_Select.run({\"POId\":PO_Table.selectedRow.Id}))\n\t\t\t\t.then(()=>storeValue('ActualFileName',''))\n\t\t\t\t.then(()=>Promise.all([showModal('FileUpload_Modal'),EPOAttachments_Select.run({\"POId\":PO_Table.selectedRow.Id})]))\n\t\t\t\t.then(()=>showAlert('File Comments Updated','success'))\n\t\t\t}\n\t\t}\n\t\tcatch(err)\n\t\t\t{\n\t\t\t\tif(err.message==\"Cannot read properties of undefined (reading 'data')\"){\n\t\t\t\t\t\t\tPromise.all([FileUploadProcess.setError(\"Network got disconnected!, Please check your connection and retry\"),\n\t\t\t\t\t\t\t\t\t\t\t\t\tstoreValue('closedisable','True'),showAlert('Network got disconnected!, Please check your connection and retry','error')])\n\t\t\t\t \t\n\t\t\t\t}else{\n\t\t\t\t\t\t\tPromise.all([FileUploadProcess.setError(\"Upload Failed retry, \" + err.message),\n\t\t\t\t\t\t\t\t\t\t\t\t\t storeValue('closedisable','True'),showAlert(\"Upload Failed retry, \" \n\t\t\t\t\t\t\t\t\t\t\t\t\t +err.message,'error')])\n\t\t\t\t}\n\t\t\t}\n\t},\n\trunDeleteFile: async (FileId) => {\n\t\t// Delete entry in db. \n\t\t// Delete entry in sharepoint\n\t try{\n\t\t \t\tlet fileObject=\"\";\n\t\t \t\tawait FileUploadProcess.clearError();\n\t\t \t\t\n\t\t\t\tfileObject = await FileUploadProcess.getFileObject(appsmith.store.ActualFileName,PO_Table.selectedRow.Id,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t 'POId');\n\t\t\t\tif (appsmith.store.ErrorOccured === true) {\n\t\t\t\t\tawait showAlert(\"File not found in sharepoint, Deleting in database\");\n\t\t\t\t\tawait FileUploadProcess.setError(\"No files exist!\");\n\t\t\t\t}else{\n\t\t\t\tconsole.log(fileObject);\n\t\t\t\tlet driveId = FileUploadProcess.getValue('EstimatePO', 'DriveId');\n\t\t\t\tlet itemId = fileObject.driveItem[\"id\"]; // sharepointid for file , then delete it\n\n\t\t\t\tlet response = \"\";\n\t\t\t\tresponse = await File_Delete.run({\"driveId\": driveId, \"itemId\": itemId})\n\t\t\t\t}\t\t\n\n\t\t\t\tawait EPOAttachments_Delete.run({\"FileId\": FileId})\n\t\t\t\t.then(() => EPOAttachments_Select.run({\"POId\":PO_Table.selectedRow.Id}))\n\t\t    .then(()=>storeValue('ActualFileName',''))\n\t\t\t\t.then(() => showAlert(\"PO File Deleted\", \"success\"))\n\t\t \t\t.then(()=>FileUpload_Check.run({\"POId\":PO_Table.selectedRow.EId}))\n\t\t\t\t\t\t\t\t\t\n\t }catch(err){\n\t\t if(err.message==\"Cannot read properties of undefined (reading 'data')\"){\n\t\t\t\t\t\t\tPromise.all([FileUploadProcess.setError(\"Network got disconnected!, Please check your connection and retry\"),\n\t\t\t\t\t\t\t\t\t\t\t\t\tstoreValue('closedisable','True'),showAlert('Network got disconnected!, Please check your connection and retry','error')])\n\t\t\t\t \t\n\t\t\t\t}else{\n\t\t\t\t\t\t\tPromise.all([FileUploadProcess.setError(\"Delete Failed retry, \" + err.message),\n\t\t\t\t\t\t\t\t\t\t\t\t\t storeValue('closedisable','True'),showAlert(\"Delete Failed retry, \" \n\t\t\t\t\t\t\t\t\t\t\t\t\t +err.message,'error')])\n\t\t\t\t} \n\t }\n\t},\n\trunRefreshFunc: async () => {\n\t\tPromise.all([GlobalVariables.resetForm(['UserText_Input','FileComments_Input','FilePicker']),\n\t\t\tstoreValue('ActualFileName', \"\"),storeValue('disable',false),FileUploadProcess.clearError()])\n\t},\n\ttestRunRefreshFunc: async () => {\n\t\tPromise.all([resetWidget(\"FilePicker\"),\n\t\t\tstoreValue('ActualFileName', \"\"),storeValue('disable',false),FileUploadProcess.clearError()])\n\t},\n\t\n\tmodifyMetadata: async (fileParams, Number, NumberName) => {\n\t\t// Get a file name and the type of document (component, assembly or manufacturing)\n\t\t// Steps:\n\t\t// Get File Id from the sharepoint list.\n\t\t// Send the metadata with the API call. \n\t\t//console.log(\"meta check1\")\n\t\tlet response=\"\";\n\t\tlet metaresponse=\"\";\n\t\tlet siteId=\"\";\n\t\tlet listId =\"\";\n\t\tPromise.all([siteId=FileUploadProcess.getValue('EstimatePO','SharepointId'),listId=FileUploadProcess.getValue('EstimatePO','ListId')])\n\t\t\n\t\tlet params = {'siteId': siteId, \n\t\t\t\t\t\t\t\t\t'listId': listId,\n\t\t\t\t\t\t\t\t  'Number': Number,\n\t\t\t\t\t\t\t\t  'NumberName':NumberName};\n\t\t\n\t\tresponse = await ListItemsDelete_Select.run(params);\n\t\t\n\t\tif (response.value.length == 0) {\n\t\t\tawait showAlert('Update failed','error');\n\t\t}\n\t\tlet data=[];\n\t\tfor(const eachFile of response.value ) {\n\t\t\n\t\t\t\tlet query_params = {\n\t\t\t\t\t'siteId': FileUploadProcess.getValue('EstimatePO', 'SharepointId'), \n\t\t\t\t\t'listId': FileUploadProcess.getValue('EstimatePO', 'ListId'),\n\t\t\t\t\t'listItemId': eachFile.id,\n\t\t\t\t\t'fileParams': fileParams,\n\t\t\t\t};\n\t\t\t\tdata.push(query_params);\n\t\t\n\t\t}\n\t\tconst metadata = data.map(data=>FileMetadata_Create.run(data))\n\t\treturn Promise.all(metadata)\n\t},\n\t\n}\n\t","variables":[{"name":"fileUploadStruct","value":"{\n  \"EstimatePO\": {\n    'Title': \"Upload PO Files\",\n    'DriveId': 'b!9sncToW8AUeetDafxm9_qHQ1D99nS8NIu4I1_LuTxxjEP0Mcv7wWRoPeiPnjDKd2',\n    'DriveItemId': '01WIYHH3V6Y2GOVW7725BZO354PWSELRRZ',\n    'SharepointId': 'anoralabs.sharepoint.com,4edcc9f6-bc85-4701-9eb4-369fc66f7fa8,df0f3574-4b67-48c3-bb82-35fcbb93c718',\n    'ListId': '1c433fc4-bcbf-4616-83de-88f9e30ca776'\n  }\n}"},{"name":"fileUploadStructProd","value":"{\n  \"EstimatePO\": {\n    'Title': \"Upload PO Files\",\n    'DriveId': 'b!9sncToW8AUeetDafxm9_qIKKA-4bAhtFjvt40BOkn5UZ2f5-H_OFQ6HZkIUS5qEP',\n    'DriveItemId': '01FIWJAG56Y2GOVW7725BZO354PWSELRRZ',\n    'SharepointId': 'anoralabs.sharepoint.com,4edcc9f6-bc85-4701-9eb4-369fc66f7fa8,ee038a82-021b-451b-8efb-78d013a49f95',\n    'ListId': '7efed919-f31f-4385-a1d9-908512e6a10f'\n  }\n}"}],"userPermissions":[]},"id":"PO Entry_FileUploadProcess","deleted":false,"gitSyncId":"67f4d81e59d0ae34925978ba_67fe216a358e8b1adbeac756"},{"unpublishedCollection":{"name":"GlobalVariables","pageId":"Estimate Process","pluginId":"js-plugin","pluginType":"JS","actions":[],"archivedActions":[],"body":"export default {\n  LabelColor:'#008695',\n\tIconColor:'#48BF91',\n\troles_with_access :[\"Corporate Admin\"],\n\tmyFun2: async () => {\n\t\t//do async stuff here or use JS promises\n\t},\n\t\tdisableCorporateAdminButton:  () => {\n\t\treturn ( false ||  CorporateAdmin_Select.data.find((row)=>{return row.name == appsmith.user.username.split('@')[0]})?.name ==  appsmith.user.username.split('@')[0])\n\t},\n\tresetForm: (tabWidgets) => {\n\t\ttabWidgets.forEach(eachWidget => {resetWidget(eachWidget)});\n\t},\n\t\n\tresetWidgets: (widgetsArray) => {\n\t\tconst widgetMap = widgetsArray.map((aWdiget) => resetWidget(aWdiget));\n\t\treturn Promise.all(widgetMap);\n\t},\n\t\n\tvalidateWidget: (widgetObject) => {\n\t// if(typeof widgetObject.text !== \"undefined\" && (widgetObject.isValid === true|| widgetObject.isValid === undefined)) {\n\t\tlet valid = false;\n\t\tif (widgetObject.isValid === true) {\n\t\t\tvalid = true;\n\t\t} else {\n\t\t\tvalid = false;\n\t\t}\n\t\treturn valid;\n\t},\n\t\n\tvalidateForm: (formWidgets) => {\n\t\t// function accepts an array of widget objects. see ProjectType tab for example usage. \n\t\t// function returns false, if any of the form widgets returns false during validity check. \n\t\tlet validity = true;\n\t\tfor(let aWidget of formWidgets) {\n\t\t\tvalidity = validity && (GlobalVariables.validateWidget(aWidget));\n\t\t\tif (validity === false)\n\t\t\t\tbreak;\n\t\t}\n\t\treturn validity;\n\t},\n\t\n\tdisableDeleteButton: (formTable) => {\n\t\t// Function accepts a table object and\n\t\t// function returns false, if any of the form widgets returns false during validity check. \n\t  let disableDelete = formTable.selectedRowIndex === -1?true:false;\n\t  return disableDelete;\n },\n\t\n\tdisableCreateButton: (formWidgets) => {\n\t\t// Accepts an array of widget objects. Performs validity check on each one of them. \n\t\t// Function returns true, if validity is false, otherwise true \n\t\treturn (GlobalVariables.validateForm(formWidgets) === false);\n\t}, \n\n\tdisableUpdateButton: (formWidgets, formTable) => {\n\t\t// Accepts an array of widget objects and a table widget object, If no row in the table is selected returns true. \n\t\t// If one row is selected and all widgets pass vality check, returns false. . \n\t\t// Function returns true, if validity is false, otherwise true \n\t\tlet disableWidget = false;\n\t\tif (formTable.selectedRowIndex === -1) {\n\t\t\tdisableWidget = true;\n\t\t} else if (GlobalVariables.validateForm(formWidgets) === false) {\n\t\t\tdisableWidget = true;\n\t\t} else {\n\t\t\tdisableWidget = false;\n\t\t}\n\t\treturn disableWidget;\n\t},\n\t\n\t//async uniqueCheck(tableName, columnName,columnValue) {\n\t\t// Generic function to check if a value in a column is used before. \n\t\t// The value is unique if the row count is zero, otherwise there is already an entry in database with same value. \n\t\t// Async function needs to be used inside an async function. \n\t\t//let unique = false;\n\t\t//const response = await Duplicate_Value_Select.run({'tableName': tableName, 'columnName': columnName,'columnValue': columnValue});\n\t\t//unique = (response[0].row_count === 0);\n\t\t// await showAlert(\"unique: \" + unique); // for debug\n\t\t//return unique;\t\t    \n\t//}\n\n\t\t\n \t\t\n}","variables":[{"name":"LabelColor","value":"'#008695'"},{"name":"IconColor","value":"'#48BF91'"},{"name":"roles_with_access","value":"[\"Corporate Admin\"]"}],"userPermissions":[]},"publishedCollection":{"name":"GlobalVariables","pageId":"Estimate Process","pluginId":"js-plugin","pluginType":"JS","actions":[],"archivedActions":[],"body":"export default {\n  LabelColor:'#008695',\n\tIconColor:'#48BF91',\n\troles_with_access :[\"Corporate Admin\"],\n\tmyFun2: async () => {\n\t\t//do async stuff here or use JS promises\n\t},\n\t\tdisableCorporateAdminButton:  () => {\n\t\treturn ( false ||  CorporateAdmin_Select.data.find((row)=>{return row.name == appsmith.user.username.split('@')[0]})?.name ==  appsmith.user.username.split('@')[0])\n\t},\n\tresetForm: (tabWidgets) => {\n\t\ttabWidgets.forEach(eachWidget => {resetWidget(eachWidget)});\n\t},\n\t\n\tresetWidgets: (widgetsArray) => {\n\t\tconst widgetMap = widgetsArray.map((aWdiget) => resetWidget(aWdiget));\n\t\treturn Promise.all(widgetMap);\n\t},\n\t\n\tvalidateWidget: (widgetObject) => {\n\t// if(typeof widgetObject.text !== \"undefined\" && (widgetObject.isValid === true|| widgetObject.isValid === undefined)) {\n\t\tlet valid = false;\n\t\tif (widgetObject.isValid === true) {\n\t\t\tvalid = true;\n\t\t} else {\n\t\t\tvalid = false;\n\t\t}\n\t\treturn valid;\n\t},\n\t\n\tvalidateForm: (formWidgets) => {\n\t\t// function accepts an array of widget objects. see ProjectType tab for example usage. \n\t\t// function returns false, if any of the form widgets returns false during validity check. \n\t\tlet validity = true;\n\t\tfor(let aWidget of formWidgets) {\n\t\t\tvalidity = validity && (GlobalVariables.validateWidget(aWidget));\n\t\t\tif (validity === false)\n\t\t\t\tbreak;\n\t\t}\n\t\treturn validity;\n\t},\n\t\n\tdisableDeleteButton: (formTable) => {\n\t\t// Function accepts a table object and\n\t\t// function returns false, if any of the form widgets returns false during validity check. \n\t  let disableDelete = formTable.selectedRowIndex === -1?true:false;\n\t  return disableDelete;\n },\n\t\n\tdisableCreateButton: (formWidgets) => {\n\t\t// Accepts an array of widget objects. Performs validity check on each one of them. \n\t\t// Function returns true, if validity is false, otherwise true \n\t\treturn (GlobalVariables.validateForm(formWidgets) === false);\n\t}, \n\n\tdisableUpdateButton: (formWidgets, formTable) => {\n\t\t// Accepts an array of widget objects and a table widget object, If no row in the table is selected returns true. \n\t\t// If one row is selected and all widgets pass vality check, returns false. . \n\t\t// Function returns true, if validity is false, otherwise true \n\t\tlet disableWidget = false;\n\t\tif (formTable.selectedRowIndex === -1) {\n\t\t\tdisableWidget = true;\n\t\t} else if (GlobalVariables.validateForm(formWidgets) === false) {\n\t\t\tdisableWidget = true;\n\t\t} else {\n\t\t\tdisableWidget = false;\n\t\t}\n\t\treturn disableWidget;\n\t},\n\t\n\t//async uniqueCheck(tableName, columnName,columnValue) {\n\t\t// Generic function to check if a value in a column is used before. \n\t\t// The value is unique if the row count is zero, otherwise there is already an entry in database with same value. \n\t\t// Async function needs to be used inside an async function. \n\t\t//let unique = false;\n\t\t//const response = await Duplicate_Value_Select.run({'tableName': tableName, 'columnName': columnName,'columnValue': columnValue});\n\t\t//unique = (response[0].row_count === 0);\n\t\t// await showAlert(\"unique: \" + unique); // for debug\n\t\t//return unique;\t\t    \n\t//}\n\n\t\t\n \t\t\n}","variables":[{"name":"LabelColor","value":"'#008695'"},{"name":"IconColor","value":"'#48BF91'"},{"name":"roles_with_access","value":"[\"Corporate Admin\"]"}],"userPermissions":[]},"id":"Estimate Process_GlobalVariables","deleted":false,"gitSyncId":"62c6dd94aa3be20812d63927_62c6dd95aa3be20812d639c3"},{"unpublishedCollection":{"name":"Process","pageId":"Estimate Process","pluginId":"js-plugin","pluginType":"JS","actions":[],"archivedActions":[],"body":"export default {\n\tmyVar1: [],\n\tmyVar2: {},\n\tmyFun1: () => {\n\t\t//write code here\n\t},\n\tmyFun2: async () => {\n\t\t//use async-await or promises\n\t},\n\t\n\tgetInitialState: () => { \t\t \n\t\t if (appsmith.store.currentStateName) {\n\t\t\treturn appsmith.store.currentStateName;\n\t\t} else {\n\t\t\tstoreValue(\"currentStateName\", 'Prepare');\n\t\t\treturn \"Prepare\";\n\t\t}\n\t},\n\tgetState:(stateName)=>{ return(EstimateStatesJS.states.find((state) => {return(state.Name == stateName)}))},\n\tdisableArrow:(arrow)=>{return((appsmith.store.currentStateName!=arrow) || (Estimate_Table.selectedRowIndex === -1));},\n  getDecision:(decisionName)=>{return(appsmith.store.currentState.Next.find((thisDecision)=> {return(thisDecision.Name==decisionName)}))},\n\tgetModalTitle: ()=>{ return(appsmith.store.currentDecision?.Title||\"\") },\n\n\tasync clickState(stateName, query=null) \n\t{\n\t\t\tawait storeValue(\"currentState\", Process.getState(stateName));\n\t\t\tawait storeValue(\"currentStateName\", stateName);\n\t\t\tif(query !== null ) {\n\t\t\t\tquery.run({\"currentStateName\": stateName})\n\t\t\t\tshowAlert(\"Loading Estimate in state \" + appsmith.store.currentStateName, \"success\");\n\t\t\t}\n\t\tawait GlobalVariables.resetForm([\"Estimate_Table\"]);\n\t\tEstimateItem_Select.run({'estimateId':-1});\n\t},\n\t\n\tasync clickArrow(DecisionName)\n\t\t{\n\t\t\tawait storeValue(\"currentDecisionName\", DecisionName);\n\t\t\tawait storeValue(\"currentDecision\",Process.getDecision(DecisionName));\n\t\t\tawait storeValue(\"currentNext\",appsmith.store.currentState.Next);\n\t\t\tshowModal(\"ChangeState_Modal\");\n\t\t},\n\tasync onModalSubmitClicked(id) {\n\t\tawait showAlert(\"Moving Estimate to \" + appsmith.store.currentDecision.State + \" State\",\"info\");\n\t\tawait Estimate_State_Update.run({\"nextState\": appsmith.store.currentDecision.State,\"Id\":id});\n\t\tawait Estimate_Select.run({\"currentStateName\": appsmith.store.currentStateName})\n\t\tEstimateItem_Select.run({'estimateId':-1});\n\t\tcloseModal(\"ChangeState_Modal\");\n\t},\n\n\t\n\n\t\n\t\n}","variables":[{"name":"myVar1","value":"[]"},{"name":"myVar2","value":"{}"}],"userPermissions":[]},"publishedCollection":{"name":"Process","pageId":"Estimate Process","pluginId":"js-plugin","pluginType":"JS","actions":[],"archivedActions":[],"body":"export default {\n\tmyVar1: [],\n\tmyVar2: {},\n\tmyFun1: () => {\n\t\t//write code here\n\t},\n\tmyFun2: async () => {\n\t\t//use async-await or promises\n\t},\n\t\n\tgetInitialState: () => { \t\t \n\t\t if (appsmith.store.currentStateName) {\n\t\t\treturn appsmith.store.currentStateName;\n\t\t} else {\n\t\t\tstoreValue(\"currentStateName\", 'Prepare');\n\t\t\treturn \"Prepare\";\n\t\t}\n\t},\n\tgetState:(stateName)=>{ return(EstimateStatesJS.states.find((state) => {return(state.Name == stateName)}))},\n\tdisableArrow:(arrow)=>{return((appsmith.store.currentStateName!=arrow) || (Estimate_Table.selectedRowIndex === -1));},\n  getDecision:(decisionName)=>{return(appsmith.store.currentState.Next.find((thisDecision)=> {return(thisDecision.Name==decisionName)}))},\n\tgetModalTitle: ()=>{ return(appsmith.store.currentDecision?.Title||\"\") },\n\n\tasync clickState(stateName, query=null) \n\t{\n\t\t\tawait storeValue(\"currentState\", Process.getState(stateName));\n\t\t\tawait storeValue(\"currentStateName\", stateName);\n\t\t\tif(query !== null ) {\n\t\t\t\tquery.run({\"currentStateName\": stateName})\n\t\t\t\tshowAlert(\"Loading Estimate in state \" + appsmith.store.currentStateName, \"success\");\n\t\t\t}\n\t\tawait GlobalVariables.resetForm([\"Estimate_Table\"]);\n\t\tEstimateItem_Select.run({'estimateId':-1});\n\t},\n\t\n\tasync clickArrow(DecisionName)\n\t\t{\n\t\t\tawait storeValue(\"currentDecisionName\", DecisionName);\n\t\t\tawait storeValue(\"currentDecision\",Process.getDecision(DecisionName));\n\t\t\tawait storeValue(\"currentNext\",appsmith.store.currentState.Next);\n\t\t\tshowModal(\"ChangeState_Modal\");\n\t\t},\n\tasync onModalSubmitClicked(id) {\n\t\tawait showAlert(\"Moving Estimate to \" + appsmith.store.currentDecision.State + \" State\",\"info\");\n\t\tawait Estimate_State_Update.run({\"nextState\": appsmith.store.currentDecision.State,\"Id\":id});\n\t\tawait Estimate_Select.run({\"currentStateName\": appsmith.store.currentStateName})\n\t\tEstimateItem_Select.run({'estimateId':-1});\n\t\tcloseModal(\"ChangeState_Modal\");\n\t},\n\n\t\n\n\t\n\t\n}","variables":[{"name":"myVar1","value":"[]"},{"name":"myVar2","value":"{}"}],"userPermissions":[]},"id":"Estimate Process_Process","deleted":false,"gitSyncId":"62c6dd94aa3be20812d63927_62c6dd95aa3be20812d639c5"},{"unpublishedCollection":{"name":"EstimateStatesJS","pageId":"Estimate Process","pluginId":"js-plugin","pluginType":"JS","actions":[],"archivedActions":[],"body":"export default {\n\tstates: [{\n    \"Next\": [\n      {\n        \"State\": \"Review\",\n        \"Title\": \"Prepared Estimate, Sending for Review\",\n        \"Confirmation\": [\n          \"Uploaded information on the Estimate\"\n        ],\n        \"Name\": \"Prepare_Review\"\n      }\n    ],\n    \"Name\": \"Prepare\"\n  },\n  {\n    \"Next\": [\n      {\n        \"State\": \"Prepare\",\n        \"Title\": \"Correction in the document prepare again\",\n        \"Confirmation\": [\n          \"Uploaded information on the Estimate\"\n        ],\n        \"Name\": \"Review_Prepare\"\n      },\n      {\n        \"State\": \"Signoff\",\n        \"Title\": \"Good for Signoff\",\n        \"Confirmation\": [\n          \"Uploaded information on the Estimate\"\n        ],\n        \"Name\": \"Review_Signoff\"\n      }\n    ],\n    \n    \"Name\": \"Review\"\n  },\n  {\n    \"Next\": [\n      {\n        \"State\": \"EnterPO\",\n        \"Title\": \"Enter the PO Received\",\n        \"Confirmation\": [\n          \"Enter the received PO Details\"\n        ],\n        \"Name\": \"Signoff_EnterPO\"\n      },\n      {\n        \"State\": \"Prepare\",\n        \"Title\": \"Correction in the document\",\n        \"Confirmation\": [\n          \"Uploaded Information\"\n        ],\n        \"Name\": \"Signoff_Prepare\"\n      }\n    ],\n    \"Name\": \"Signoff\"\n  },\n  {\n  \"Name\": \"EnterPO\"\n  }]\n}","variables":[{"name":"states","value":"[{\n  \"Next\": [{\n    \"State\": \"Review\",\n    \"Title\": \"Prepared Estimate, Sending for Review\",\n    \"Confirmation\": [\"Uploaded information on the Estimate\"],\n    \"Name\": \"Prepare_Review\"\n  }],\n  \"Name\": \"Prepare\"\n}, {\n  \"Next\": [{\n    \"State\": \"Prepare\",\n    \"Title\": \"Correction in the document prepare again\",\n    \"Confirmation\": [\"Uploaded information on the Estimate\"],\n    \"Name\": \"Review_Prepare\"\n  }, {\n    \"State\": \"Signoff\",\n    \"Title\": \"Good for Signoff\",\n    \"Confirmation\": [\"Uploaded information on the Estimate\"],\n    \"Name\": \"Review_Signoff\"\n  }],\n  \"Name\": \"Review\"\n}, {\n  \"Next\": [{\n    \"State\": \"EnterPO\",\n    \"Title\": \"Enter the PO Received\",\n    \"Confirmation\": [\"Enter the received PO Details\"],\n    \"Name\": \"Signoff_EnterPO\"\n  }, {\n    \"State\": \"Prepare\",\n    \"Title\": \"Correction in the document\",\n    \"Confirmation\": [\"Uploaded Information\"],\n    \"Name\": \"Signoff_Prepare\"\n  }],\n  \"Name\": \"Signoff\"\n}, {\n  \"Name\": \"EnterPO\"\n}]"}],"userPermissions":[]},"publishedCollection":{"name":"EstimateStatesJS","pageId":"Estimate Process","pluginId":"js-plugin","pluginType":"JS","actions":[],"archivedActions":[],"body":"export default {\n\tstates: [{\n    \"Next\": [\n      {\n        \"State\": \"Review\",\n        \"Title\": \"Prepared Estimate, Sending for Review\",\n        \"Confirmation\": [\n          \"Uploaded information on the Estimate\"\n        ],\n        \"Name\": \"Prepare_Review\"\n      }\n    ],\n    \"Name\": \"Prepare\"\n  },\n  {\n    \"Next\": [\n      {\n        \"State\": \"Prepare\",\n        \"Title\": \"Correction in the document prepare again\",\n        \"Confirmation\": [\n          \"Uploaded information on the Estimate\"\n        ],\n        \"Name\": \"Review_Prepare\"\n      },\n      {\n        \"State\": \"Signoff\",\n        \"Title\": \"Good for Signoff\",\n        \"Confirmation\": [\n          \"Uploaded information on the Estimate\"\n        ],\n        \"Name\": \"Review_Signoff\"\n      }\n    ],\n    \n    \"Name\": \"Review\"\n  },\n  {\n    \"Next\": [\n      {\n        \"State\": \"EnterPO\",\n        \"Title\": \"Enter the PO Received\",\n        \"Confirmation\": [\n          \"Enter the received PO Details\"\n        ],\n        \"Name\": \"Signoff_EnterPO\"\n      },\n      {\n        \"State\": \"Prepare\",\n        \"Title\": \"Correction in the document\",\n        \"Confirmation\": [\n          \"Uploaded Information\"\n        ],\n        \"Name\": \"Signoff_Prepare\"\n      }\n    ],\n    \"Name\": \"Signoff\"\n  },\n  {\n  \"Name\": \"EnterPO\"\n  }]\n}","variables":[{"name":"states","value":"[{\n  \"Next\": [{\n    \"State\": \"Review\",\n    \"Title\": \"Prepared Estimate, Sending for Review\",\n    \"Confirmation\": [\"Uploaded information on the Estimate\"],\n    \"Name\": \"Prepare_Review\"\n  }],\n  \"Name\": \"Prepare\"\n}, {\n  \"Next\": [{\n    \"State\": \"Prepare\",\n    \"Title\": \"Correction in the document prepare again\",\n    \"Confirmation\": [\"Uploaded information on the Estimate\"],\n    \"Name\": \"Review_Prepare\"\n  }, {\n    \"State\": \"Signoff\",\n    \"Title\": \"Good for Signoff\",\n    \"Confirmation\": [\"Uploaded information on the Estimate\"],\n    \"Name\": \"Review_Signoff\"\n  }],\n  \"Name\": \"Review\"\n}, {\n  \"Next\": [{\n    \"State\": \"EnterPO\",\n    \"Title\": \"Enter the PO Received\",\n    \"Confirmation\": [\"Enter the received PO Details\"],\n    \"Name\": \"Signoff_EnterPO\"\n  }, {\n    \"State\": \"Prepare\",\n    \"Title\": \"Correction in the document\",\n    \"Confirmation\": [\"Uploaded Information\"],\n    \"Name\": \"Signoff_Prepare\"\n  }],\n  \"Name\": \"Signoff\"\n}, {\n  \"Name\": \"EnterPO\"\n}]"}],"userPermissions":[]},"id":"Estimate Process_EstimateStatesJS","deleted":false,"gitSyncId":"62c6dd94aa3be20812d63927_62c6dd95aa3be20812d639bf"},{"unpublishedCollection":{"name":"PageObjects","pageId":"Estimate Process","pluginId":"js-plugin","pluginType":"JS","actions":[],"archivedActions":[],"body":"export default {\n\tmyVar1: [],\n\tmyVar2: {},\n\tmyFun1: () => {\n\t\t//write code here\n\t},\n\tmyFun2: async () => {\n\t\t//use async-await or promises\n\t},\n\t\n\t/*insertEstimateItem: async() =>{\n\tif(await GlobalVariables.uniqueCheck(\"PurchaseOrder\", \"Number\", PO_Number_Input.text)===false) {\n\t\t\tshowAlert(\"PO# not unique\", \"error\");\n\t\t} else {\n\t\t\tawait PO_Insert.run().then(()=>{\n\t\t\t\treturn Promise.all([PO_Select.run()]); \n\t\t\t})\n\t\t\t.then(()=> {return GlobalVariables.resetWidgets([\"PO_Details_Container\"])})\n\t\t\t\t.then((res)=> showAlert(\"Insert Done\", \"success\"))\n\t\t\t\t.catch((error)=> showAlert(error.toString(), \"error\"));\n\t\t}\n  }*/\n\t\taccessControl:async()=>{\n\t\tawait UserRoles_Select.run()\n\t\tlet role = '';\n\t\tif (UserRoles_Select.data.find((row) => row.Name === 'Sales Manager' || row.Name === 'Accounts Receivables')) {\n\t\t\tconsole.log('111')\n\t\t\trole = 'SalesManager'\n\t\t}else if (UserRoles_Select.data.find((row) => row.Name === 'Business Manager')) {\n\t\t\tconsole.log('222')\n\t\t\trole = 'BusinessManager';\n\t\t}\n\t\tawait storeValue('FilterRole', role, false);\n    console.log('frole', appsmith.store.FilterRole);\n    await Estimate_Select.run();\n\t},\n\t\n\tinsertEstimateItem: async(estimateId,estItemNumber,estItemDes,estItemQty,estItemAmt) =>{\n\t\t\t\tawait EstimateItem_Insert.run({\"estimateId\":estimateId,\"estItemNumber\":estItemNumber,\"estItemDes\":estItemDes,\"estItemQty\":estItemQty,\"estItemAmt\":estItemAmt}).then(()=>{\n\t\t\t\treturn Promise.all([EstimateItem_Select.run({'estimateId':estimateId})]); \n\t\t\t})\n\t\t\t.then(()=> {return GlobalVariables.resetWidgets([\"EstimateDetails_Container\",\"EstimateItem_Table\"])})\n\t\t\t\t.then((res)=> showAlert(\"Insert Done\", \"success\"))\n\t\t\t\t.catch((error)=> showAlert(error.toString(), \"error\"));\n\t},\n\t\n\tupdateEstimateItem: async(estimateId,estItemNumber,estItemDes,estItemQty,estItemAmt,estItemId) =>{\n\t\t\t\tawait EstimateItem_Update.run({\"estItemNumber\":estItemNumber,\"estItemDes\":estItemDes,\"estItemQty\":estItemQty,\"estItemAmt\":estItemAmt,\"estItemId\":estItemId}).then(()=>{\n\t\t\t\treturn Promise.all([EstimateItem_Select.run({'estimateId':estimateId})]); \n\t\t\t})\n\t\t\t.then(()=> {return GlobalVariables.resetWidgets([\"EstimateDetails_Container\",\"EstimateItem_Table\"])})\n\t\t\t\t.then((res)=> showAlert(\"Update Done\", \"success\"))\n\t\t\t\t.catch((error)=> showAlert(error.toString(), \"error\"));\n\t},\n\t\n\tdeleteEstimateItem: async(estimateId,estimateitemid) =>{\n\t\t\t\tawait EstimateItem_Delete.run({\"estimateitemid\":estimateitemid}).then(()=>{\n\t\t\t\treturn Promise.all([EstimateItem_Select.run({'estimateId':estimateId})]); \n\t\t\t})\n\t\t\t.then(()=> {return GlobalVariables.resetWidgets([\"EstimateDetails_Container\",\"EstimateItem_Table\"])})\n\t\t\t\t.then((res)=> showAlert(\"Delete Done\", \"success\"))\n\t\t\t\t.catch((error)=> showAlert(error.toString(), \"error\"));\n\t},\n\t\n\tselectInitialState: async () => {\n\t\tawait Process.clickState(\"Prepare\", Estimate_Select);\n\t},\n\t\t\n\testimateUpdate: async (number,email,ccemail,note,id) =>{\n    await Estimate_Update.run({\"number\":number,\"email\":email,\"ccemail\":ccemail,\"note\":note,\"id\":id}) \n\t\t\t.then(() => {return Promise.all([Estimate_Select.run(), GlobalVariables.resetForm([\"Estimate_Number_Input\",\"Email_Input\",\"CCEmail_Input\",\"Estimate_Table\"])])})\t\t\t\t\t\t\t\t\t \n\t\t\t.then(() =>closeModal(\"EstimateUpdate_Modal\")) \n\t\t\t.then(() =>showAlert(\"Values updated\")) \n\t\t  .catch((error)=> showAlert(error.toString(), \"error\"));\n\t}\n\n}","variables":[{"name":"myVar1","value":"[]"},{"name":"myVar2","value":"{}"}],"userPermissions":[]},"publishedCollection":{"name":"PageObjects","pageId":"Estimate Process","pluginId":"js-plugin","pluginType":"JS","actions":[],"archivedActions":[],"body":"export default {\n\tmyVar1: [],\n\tmyVar2: {},\n\tmyFun1: () => {\n\t\t//write code here\n\t},\n\tmyFun2: async () => {\n\t\t//use async-await or promises\n\t},\n\t\n\t/*insertEstimateItem: async() =>{\n\tif(await GlobalVariables.uniqueCheck(\"PurchaseOrder\", \"Number\", PO_Number_Input.text)===false) {\n\t\t\tshowAlert(\"PO# not unique\", \"error\");\n\t\t} else {\n\t\t\tawait PO_Insert.run().then(()=>{\n\t\t\t\treturn Promise.all([PO_Select.run()]); \n\t\t\t})\n\t\t\t.then(()=> {return GlobalVariables.resetWidgets([\"PO_Details_Container\"])})\n\t\t\t\t.then((res)=> showAlert(\"Insert Done\", \"success\"))\n\t\t\t\t.catch((error)=> showAlert(error.toString(), \"error\"));\n\t\t}\n  }*/\n\t\taccessControl:async()=>{\n\t\tawait UserRoles_Select.run()\n\t\tlet role = '';\n\t\tif (UserRoles_Select.data.find((row) => row.Name === 'Sales Manager' || row.Name === 'Accounts Receivables')) {\n\t\t\tconsole.log('111')\n\t\t\trole = 'SalesManager'\n\t\t}else if (UserRoles_Select.data.find((row) => row.Name === 'Business Manager')) {\n\t\t\tconsole.log('222')\n\t\t\trole = 'BusinessManager';\n\t\t}\n\t\tawait storeValue('FilterRole', role, false);\n    console.log('frole', appsmith.store.FilterRole);\n    await Estimate_Select.run();\n\t},\n\t\n\tinsertEstimateItem: async(estimateId,estItemNumber,estItemDes,estItemQty,estItemAmt) =>{\n\t\t\t\tawait EstimateItem_Insert.run({\"estimateId\":estimateId,\"estItemNumber\":estItemNumber,\"estItemDes\":estItemDes,\"estItemQty\":estItemQty,\"estItemAmt\":estItemAmt}).then(()=>{\n\t\t\t\treturn Promise.all([EstimateItem_Select.run({'estimateId':estimateId})]); \n\t\t\t})\n\t\t\t.then(()=> {return GlobalVariables.resetWidgets([\"EstimateDetails_Container\",\"EstimateItem_Table\"])})\n\t\t\t\t.then((res)=> showAlert(\"Insert Done\", \"success\"))\n\t\t\t\t.catch((error)=> showAlert(error.toString(), \"error\"));\n\t},\n\t\n\tupdateEstimateItem: async(estimateId,estItemNumber,estItemDes,estItemQty,estItemAmt,estItemId) =>{\n\t\t\t\tawait EstimateItem_Update.run({\"estItemNumber\":estItemNumber,\"estItemDes\":estItemDes,\"estItemQty\":estItemQty,\"estItemAmt\":estItemAmt,\"estItemId\":estItemId}).then(()=>{\n\t\t\t\treturn Promise.all([EstimateItem_Select.run({'estimateId':estimateId})]); \n\t\t\t})\n\t\t\t.then(()=> {return GlobalVariables.resetWidgets([\"EstimateDetails_Container\",\"EstimateItem_Table\"])})\n\t\t\t\t.then((res)=> showAlert(\"Update Done\", \"success\"))\n\t\t\t\t.catch((error)=> showAlert(error.toString(), \"error\"));\n\t},\n\t\n\tdeleteEstimateItem: async(estimateId,estimateitemid) =>{\n\t\t\t\tawait EstimateItem_Delete.run({\"estimateitemid\":estimateitemid}).then(()=>{\n\t\t\t\treturn Promise.all([EstimateItem_Select.run({'estimateId':estimateId})]); \n\t\t\t})\n\t\t\t.then(()=> {return GlobalVariables.resetWidgets([\"EstimateDetails_Container\",\"EstimateItem_Table\"])})\n\t\t\t\t.then((res)=> showAlert(\"Delete Done\", \"success\"))\n\t\t\t\t.catch((error)=> showAlert(error.toString(), \"error\"));\n\t},\n\t\n\tselectInitialState: async () => {\n\t\tawait Process.clickState(\"Prepare\", Estimate_Select);\n\t},\n\t\t\n\testimateUpdate: async (number,email,ccemail,note,id) =>{\n    await Estimate_Update.run({\"number\":number,\"email\":email,\"ccemail\":ccemail,\"note\":note,\"id\":id}) \n\t\t\t.then(() => {return Promise.all([Estimate_Select.run(), GlobalVariables.resetForm([\"Estimate_Number_Input\",\"Email_Input\",\"CCEmail_Input\",\"Estimate_Table\"])])})\t\t\t\t\t\t\t\t\t \n\t\t\t.then(() =>closeModal(\"EstimateUpdate_Modal\")) \n\t\t\t.then(() =>showAlert(\"Values updated\")) \n\t\t  .catch((error)=> showAlert(error.toString(), \"error\"));\n\t}\n\n}","variables":[{"name":"myVar1","value":"[]"},{"name":"myVar2","value":"{}"}],"userPermissions":[]},"id":"Estimate Process_PageObjects","deleted":false,"gitSyncId":"62c6dd94aa3be20812d63927_62c6dd95aa3be20812d639c1"},{"unpublishedCollection":{"name":"FileUploadProcess","pageId":"Estimate Process","pluginId":"js-plugin","pluginType":"JS","actions":[],"archivedActions":[],"body":"export default {\n\t\n\tonfileselect:async()=>{\n\t\tif(FilePicker.files[0].size >= '20000000'){\n\t\t\t\tawait showModal('File_Alert_Modal');\n\t\t}else{\n\t\t\tif(FilePicker.files[0].name.split('.')[1]=='zip'&& FilePicker.files[0].size >= 4000000){\n\t\t\t\tawait showModal('File_Alert_Modal');\n\t\t\t}else{\n\t\t\t\tawait showAlert('File Selected','success');\n\t\t\t} \n\t\t}\n },\n\t  \n fileUploadStruct: {\n\t\t\"Estimate\": {\n\t\t'Title': \"Upload Estimate Files\",\n\t\t'DriveId': 'b!9sncToW8AUeetDafxm9_qHQ1D99nS8NIu4I1_LuTxxhFBoTD6JZkSL8HEOFz7lmD',\n\t\t'DriveItemId': '01WIYHH3V6Y2GOVW7725BZO354PWSELRRZ', \n\t\t'SharepointId': 'anoralabs.sharepoint.com,4edcc9f6-bc85-4701-9eb4-369fc66f7fa8,df0f3574-4b67-48c3-bb82-35fcbb93c718',\n\t\t'ListId': 'c3840645-96e8-4864-bf07-10e173ee5983'\n\t\t}\n },\n\t \n\t fileUploadStructProd: {\n\t\t\"Estimate\": {\n\t\t'Title': \"Upload Estimate Files\",\n\t\t'DriveId': 'b!9sncToW8AUeetDafxm9_qIKKA-4bAhtFjvt40BOkn5XtKNEpD9XARYwkJQ0apjy6',\n\t\t'DriveItemId': '01FIWJAG56Y2GOVW7725BZO354PWSELRRZ', \n\t\t'SharepointId': 'anoralabs.sharepoint.com,4edcc9f6-bc85-4701-9eb4-369fc66f7fa8,ee038a82-021b-451b-8efb-78d013a49f95',\n\t\t'ListId': '29d128ed-d50f-45c0-8c24-250d1aa63cba'\n\t\t}\n\t},\n\t \n\tclearError: async () => {\n\t\tawait storeValue('ErrorMessage', \"\");\n\t\tawait storeValue('ErrorVisibility', false);\n\t\tawait storeValue('ErrorOccured', false);\n\t}, \n\t\n\tsetError: async (errorMessage) => {\n\t\tawait storeValue('ErrorMessage', errorMessage);\n\t\tawait storeValue('ErrorVisibility', true);\n\t\tawait storeValue('ErrorOccured', true);\n\t}, \n\t \n\t getValue: (modelType, key) => {\n\t\tif(appsmith.URL.hostname==\"erp-dev.anoralabs.com\") {\t\t\n\t\t\treturn FileUploadProcess.fileUploadStruct[modelType][key];\n\t\t} else {\n\t\t\treturn FileUploadProcess.fileUploadStructProd[modelType][key];\n\t\t}\n\t},\n\t \n\t getFileObject: async (fileName,Number,NumberName) => {\n\t\tlet response=\"\";\n\t\tlet params = {'siteId': FileUploadProcess.getValue('Estimate', 'SharepointId'), \n\t\t\t\t\t\t\t\t\t'listId': FileUploadProcess.getValue('Estimate', 'ListId'),\n\t\t\t\t\t\t\t\t  'Number':Number,\n\t\t\t\t\t\t\t\t  'NumberName':NumberName};\n\t\t\n\t\tresponse = await ListItemsDelete_Select.run(params);\n\t\tconsole.log('dwnld res is',response);\n\t\tif (response.value.length == 0) {\n\t\t\treturn await FileUploadProcess.setError(\"No files exist!\");\n\t\t}\n\t\tfor(const eachFile of response.value ) {\n\t\t\tif (eachFile.driveItem.name == fileName){\n\t\t\t\tawait storeValue('fileerror','false');\n\t\t\t\treturn eachFile; \n\t\t\t} \n\t\t} \n\t\tawait storeValue('fileerror','true');\n\t\treturn await FileUploadProcess.setError(\"Cannot find file \" + fileName);\n\t},\n\t \n\t\trunDownloadFile: async () => {\n\t\tlet fileObject = await FileUploadProcess.getFileObject(ActualFileName_Input.text,appsmith.store.ESalesId,                                                                  'SalesId');\n\t\tconsole.log(fileObject)\n\t\t\t\n\t\tif (appsmith.store.fileerror == 'true' ) {\n\t\t\tawait showModal('ShowAlert_Modal');\n\t\t} else {\n\t\tlet download_url = fileObject.driveItem[\"@microsoft.graph.downloadUrl\"];\n\t\tlet filename = fileObject.driveItem['name'];\n\t\tlet filetype = fileObject.driveItem[\"file\"][\"mimeType\"];\n\t\t\n\t\tdownload(download_url, filename, filetype);\n\t\tawait showAlert('File Downloaded Successfully','success')\n\t\t}\n\t},\n\t\t\t\n\t\t getFileName: async () => {\n\t\tawait FileUploadProcess.clearError();\n\t\tif(EstimateAttachments_Table.selectedRowIndex != -1) {\n\t\t\treturn await storeValue('ActualFileName', EstimateAttachments_Table.selectedRow.FileName);\n\t\t}\n\t\tif (FilePicker.files.length == 0) {\n\t\t\treturn await storeValue('ActualFileName', \"\");\n\t\t}\n\t\t\n\t\tif (UserText_Input.text == \"\" || UserText_Input.isValid != true) {\n\t\t\tawait FileUploadProcess.setError(\"UserText is not provided or is not valid\");\n\t\t\treturn await storeValue('ActualFileName', \"\");\n\t\t}\n\t\tlet file_name_temp = \"\";\n\t\t file_name_temp = Estimate_Table.selectedRow.EId.toString().replace(/[^a-zA-Z0-9]/g, '').toString().trim() + \"_\" + UserText_Input.text.toString() + \".\" + FilePicker.files[0].name.split('.').pop().trim();\n\t\t\n\t\tawait FileUploadProcess.clearError();\n\t\treturn await storeValue('ActualFileName', file_name_temp.split(\" \").join(\"_\"));\n\t\t\n\t},\n\t\n onUploadModalClick: async () => {\n\t\t\n\t\tlet tabledata=[];\n\t\tlet siteId=\"\";\n\t\tlet listId=\"\";\n\t\tPromise.all([storeValue('activetab','Empty Tab'),FileUploadProcess.testRunRefreshFunc()])\n\t\tPromise.all([siteId=FileUploadProcess.getValue('Estimate','SharepointId'),listId=FileUploadProcess.getValue('Estimate','ListId')])\n\t\tlet data=await MetaData_Select.run({\"siteId\":siteId,\"listId\":listId,\"NumberName\":\"SalesId\",\"Number\":appsmith.store.ESalesId});\n\t\tconsole.log(data);\n\t\t\n\t\tfor(let i=0;i<data.value.length;i++){\n\t\t\tconsole.log(data.value[i].fields[\"LinkFilename\"]);\n\t\t\tif(data.value[i].fields[\"LinkFilename\"]==EstimateAttachments_Table.selectedRow.FileName){\n\t\t\t\t\t\n\t\t\t\t\t\ttabledata.push({\"Field\":\"SalesNumber\",\"Value\":data.value[i].fields['SalesNumber']},\n\t\t\t\t\t\t\t\t\t\t\t\t\t {\"Field\":\"FileType\",\"Value\":data.value[i].fields['FileType']},\n\t\t\t\t\t\t\t\t\t\t\t\t\t {\"Field\":\"ModifiedBy\",\"Value\":data.value[i].fields['ModifiedBy']},\n\t\t\t\t\t\t\t\t\t\t\t\t\t {\"Field\":'SalesId',\"Value\":data.value[i].fields['SalesId']},\n\t\t\t\t\t\t\t\t\t\t\t\t\t {\"Field\":'EstimateId',\"Value\":data.value[i].fields['EstimateId']},\n\t\t\t\t\t\t\t\t\t\t\t\t\t {\"Field\":\"OriginalFileName\",\"Value\":data.value[i].fields['OriginalFileName']})\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t}\n\t\t\t  \n\t\t}\n\t\tPromise.all([storeValue('ActualFileName',EstimateAttachments_Table.selectedRow.FileName),storeValue('tabledata',tabledata),\n\t\t\t\t\t\t\t\t storeValue('statename','Completed'),storeValue('disable',false)]);\n\t\t\n\t},\n\t\n\tretryfunction:async()=>{\n\t\tif(appsmith.store.add==1){\n\t\t\tawait FileUploadProcess.runCreateFile(Estimate_Table.selectedRow.Id,FileComments_Input.text);\n\t\t}else if(appsmith.store.add==2){\n\t\t\tawait FileUploadProcess.runModifyFile(EstimateAttachments_Table.selectedRow.Id,FileComments_Input.text)\n\t\t}else{\n\t\t\tawait FileUploadProcess.setError('value error in retry');\n\t\t}\t\t\n\t},\n\t\t \n runCreateFile: async (EId, Comments ) => {\n\t\t// Check for duplicate.\n\t\t// if yes, raise Error\n\t\t// else, create entry in db.\n\t\t// upload file. \n\t\t// update file metadata. \n\t\ttry\n\t\t{\n\t\t\t\tlet statename=appsmith.store.statename==null?storeValue('statename','FileCheck'):appsmith.store.statename\n\t\t\t\tlet progressstatus=appsmith.store.progressstatus==null?storeValue('progressstatus','0'):appsmith.store.progressstatus\n\t\t\t\tlet retry=0;\n\t\t\t\tawait FileUploadProcess.clearError();\n\t\t\t\tawait storeValue('closedisable','False');\n\t\t\t\tif(appsmith.store.statename=='Completed'){\n\t\t\t\t\tstatename=\"FileCheck\"; \n\t\t\t\t\tprogressstatus=0;\n\t\t\t\t\tawait storeValue('statename',statename);\n\t\t\t\t\tawait storeValue('progressstatus',progressstatus);\n\t\t\t\t}\n\t\t\t\tshowModal('Progress_Modal');\n\t\t\t\tlet fileParams = { \n\t\t\t\t\t\t\t\t\t\t\t\t\t \"ModifiedBy\":appsmith.user.email.split(\"@\")[0],\n\t\t\t\t\t                 \"FileType\":FilePicker.files[0].name.split('.').pop().trim(),\n\t\t\t\t\t                 \"SalesNumber\":Estimate_Table.selectedRow.SalesNumber,\n\t\t\t\t\t\t\t\t\t\t\t\t\t \"SalesId\":Estimate_Table.selectedRow.Id,\n\t\t\t\t\t\t\t\t\t\t\t\t\t \"EstimateId\":Estimate_Table.selectedRow.EId,\n\t\t\t\t\t                 \"OriginalFileName\":FilePicker.files[0].name\n\t\t\t\t}\n\t\t\t\tlet DriveId = FileUploadProcess.getValue('Estimate', 'DriveId');\n\t\t\t\tlet DriveItemId = FileUploadProcess.getValue('Estimate', 'DriveItemId');\n\t\t\t\t\n\t\t\t\twhile(statename != 'Completed')\n\t\t\t\t{\n\t\t\t\t\t\tconsole.log(progressstatus);\n\t\t\t\t\t\tconsole.log(statename);\n\t\t\t\t\t\tif(statename!='Error'){\n\t\t\t\t\t\t\tawait storeValue('statename',statename);\n\t\t\t\t\t\t\tawait storeValue('progressstatus',progressstatus);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tswitch(statename)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcase 'FileCheck':\n\t\t\t\t\t\t\t\t\t\tlet response = await SpecificFilesInDrive_Select.run({'DriveId': DriveId, \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'DriveItemId': DriveItemId,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'FileName':ActualFileName_Input.text});\n\t\t\t\t\t\t\t\t\t\tconsole.log(response,'response')\n\t\t\t\t\t\t\t\t\t\tif (response.value.length == 0) {\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\tstatename='UploadToSharePoint'\n\t\t\t\t\t\t\t\t\t\t\t\t\tprogressstatus=25;\n\t\t\t\t\t\t\t\t\t\t}     \n\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tawait FileUploadProcess.setError(\"File Name Not Unique! Enter different user \");\n\t\t\t\t\t\t\t\t\t\t\t\tstatename='Error';\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase 'DBInsert':\n\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\tawait EAttachments_Insert.run({\"EId\":EId, \"FileName\":appsmith.store.ActualFileName, \"Comments\":Comments})\n\t\t\t\t\t\t\t\t\t\t\t\t.then(() => EAttachments_Select.run({\"EId\":EId}))\n\t\t\t\t\t\t\t\t\t\t\t\tstatename='UpdateMetadata';\n\t\t\t\t\t\t\t\t\t\t\t\tprogressstatus=75;\n\t\t\t\t\t\t\t\t    \t\tbreak;\n       \n\t\t\t\t\t\t\tcase 'UploadToSharePoint':\n\t\t\t\t\t\t\t\t     let uploadurl=await UploadSession_Create.run({'DriveId':DriveId,'DriveItemId':DriveItemId,'fileName':ActualFileName_Input.text});\n\t\t\t\t\t\t\t\t\t\t\tconsole.log('uploadurl is',uploadurl.uploadUrl);\n\t\t\t\t\t\t\t\t\t\t\tlet filesize=FilePicker.files[0].size;\n\t\t\t\t\t\t\t\t\t\t\tlet startindex=0;\n\t\t\t\t\t\t\t\t\t\t\tlet responsecreate = \"\";\n\t\t\t\t\t\t\t\t\t\t\tlet upload_chunk = filesize;\n\t\t\t\t\t\t\t\t\t\t\tlet endindex=filesize-1; \n\t\t\t\t\t\t\t\t\t\t\tresponsecreate = await FileUpload_Create.run(()=>{},()=>{},{'uploadurl':UploadSession_Create.data.uploadUrl.split('//')[1],'range':upload_chunk,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t 'startindex':startindex,'endindex':endindex,'filesize':filesize});\n\t\t\t\t\t\t\t\t\t\t\tconsole.log('responsecreate is',FileUpload_Create.data);\n\t\t\t\t\t\t\t\t\t\t\tconsole.log('name',FileUpload_Create.data.name,\"Name\")\n\t\t\t\t\t\t\t\t\t\t\tif(FileUpload_Create.data.length!=0){\n\t\t\t\t\t\t\t\t\t\t\t\tif(FileUpload_Create.data.name == ActualFileName_Input.text){ //check uploaded or not\n\t\t\t\t\t\t\t\t\t\t\t\t\tstatename='DBInsert';\n\t\t\t\t\t\t\t\t\t\t\t\t\tprogressstatus=50;\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\telse if(retry==0)\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tretry++;\n\t\t\t\t\t\t\t\t\t\t\t\tawait FileUploadProcess.setError(\"Upload Failed in first attempt, attempting second\");\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t\t\t\t\t\tawait FileUploadProcess.setError(\"Upload Failed!, File Upload Create Response not valid\");\n\t\t\t\t\t\t\t\t\t\t\t\tstatename='Error';\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'UpdateMetadata':\n\t\t\t\t\t\t\t\t\t\tlet responsemetadata=\"\";\n\t\t\t\t\t\t\t\t\t\tresponsemetadata = await FileUploadProcess.modifyFileMetadata(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tappsmith.store.ActualFileName, \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfileParams,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  'SalesId',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  Estimate_Table.selectedRow.Id);\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tconsole.log('metadata',responsemetadata);\n\t\t\t\t\t\t\t\t\t\tif(FileMetadata_Create.data.length!=0){\n\t\t\t\t\t\t\t\t\t\t\tif(FileMetadata_Create.data.SalesId==Estimate_Table.selectedRow.Id){\n\t\t\t\t\t\t\t\t\t\t\t\tstatename='Completed'\n\t\t\t\t\t\t\t\t\t\t\t\tprogressstatus=100;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\telse if(retry==0)\n\t\t\t\t\t\t\t\t\t\t{ \n\t\t\t\t\t\t\t\t\t\t\t\tretry++;\n\t\t\t\t\t\t\t\t\t\t\t\tawait FileUploadProcess.setError(\"First Attempt for Metadata is failed, Attempting Second\");\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t\t\t\t\t\tawait FileUploadProcess.setError(\"Upload Failed!, Metadata create response not valid\");\n\t\t\t\t\t\t\t\t\t\t\t\tstatename='Error';\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t \t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'Error':\n\t\t\t\t\t\t\t\t\t\tawait storeValue('closedisable','True');\n\t\t\t\t\t\t\t\t\t\tstatename='Completed';\n\t\t\t\t\t\t\t\t\t\tbreak;\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t}\n\t\t\tawait storeValue('statename',statename)\n\t\t\tawait storeValue('progressstatus',progressstatus);\n\t\t\tif(appsmith.store.statename=='Completed'&&appsmith.store.ErrorMessage==''){\n\t\t\t  await FileUploadProcess.runRefreshFunc()\n\t\t\t  .then(()=>closeModal('Progress_Modal'))\n\t\t\t\t.then(()=>Promise.all([showModal('FileUpload_Modal'),EAttachments_Select.run({\"EId\":Estimate_Table.selectedRow.EId})]))\n\t\t\t\t.then(()=>showAlert('Estimate File Inserted','success'))\n\t\t\t\t.then(()=>FileUpload_Check.run({'EId':Estimate_Table.selectedRow.EId}))\n\t\t\t}\n\t\t}\n\t\tcatch(err)\n\t\t\t{\n\t\t\t\tif(err.message==\"Cannot read properties of undefined (reading 'data')\"){\n\t\t\t\t\t\t\tPromise.all([FileUploadProcess.setError(\"Network got disconnected!, Please check your connection and retry\"),\n\t\t\t\t\t\t\t\t\t\t\t\t\tstoreValue('closedisable','True'),showAlert('Network got disconnected!, Please check your connection and retry','error')])\n\t\t\t\t \t\n\t\t\t\t}else{\n\t\t\t\t\t\t\tPromise.all([FileUploadProcess.setError(\"Upload Failed retry, \" + err.message),\n\t\t\t\t\t\t\t\t\t\t\t\t\t storeValue('closedisable','True'),showAlert(\"Upload Failed retry, \" \n\t\t\t\t\t\t\t\t\t\t\t\t\t +err.message,'error')])\n\t\t\t\t}\n\t\t\t}\n\t\n\t},\n\t\t\n modifyFileMetadata: async (fileName, fileParams, NumberName,Number) => {\n\t\t// Get a file name and the type of document (component, assembly or manufacturing)\n\t\t// Steps:\n\t\t// Get File Id from the sharepoint list.\n\t\t// Send the metadata with the API call. \n\t\t//console.log(\"meta check1\")\n\t\tlet response=\"\";\n\t\t//console.log(fileCategory);\n\t\tlet params = {'siteId': FileUploadProcess.getValue('Estimate', 'SharepointId'), \n\t\t\t\t\t\t\t\t\t'listId': FileUploadProcess.getValue('Estimate', 'ListId'),\n\t\t\t\t\t\t\t\t  'NumberName': NumberName,\n\t\t\t\t\t\t\t\t\t'Number':Number \n\t\t\t\t\t\t\t\t };\n\t\tif(EstimateAttachments_Table.selectedRowIndex==-1){\n\t\t\t\tconsole.log(params,'metabreak');\n\t\t\t\tresponse = await ListItemMetaDataCreate_Select.run(params);\n\t\t\tconsole.log(response);\n\t\t}else{\n\t\t\t\tresponse = await ListItemsDelete_Select.run(params);\n\t\t}\n\t\tif (response.value.length == 0) {\n\t\t\treturn await FileUploadProcess.setError(\"No files exist!\");\n\t\t}\n\t\tfor(const eachFile of response.value ) {\n\t\t\tconsole.log(\"eachfile\",eachFile)\n\t\t\tif (eachFile.driveItem.name == fileName){\n\t\t\t\tconsole.log(\"eachfile\",eachFile)\n\t\t\t\t// console.log(\"File found\");\n\t\t\t\t// console.log(fileParams);\n\t\t\t\tlet query_params = {\n\t\t\t\t\t'siteId': FileUploadProcess.getValue('Estimate', 'SharepointId'), \n\t\t\t\t\t'listId': FileUploadProcess.getValue('Estimate', 'ListId'),\n\t\t\t\t\t'listItemId': eachFile.id,\n\t\t\t\t\t'fileParams': fileParams,\n\t\t\t\t};\n\t\t\t\tconsole.log(query_params)\n\t\t\t\treturn await FileMetadata_Create.run(query_params);\n\t\t\t\t\n\t\t\t}\n\t\t}\t\n\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nrunModifyFile: async (FileId, FileComments) => {\n\t\t// Update the comment to DB. \n\t\t// Update the file.\n\t\ttry\n\t\t{\n\t\t\tif(FilePicker.files.length>0){\n\t\t\t\tlet statename=appsmith.store.statename==null?storeValue('statename','FileCheck'):appsmith.store.statename\n\t\t\t\tlet progressstatus=appsmith.store.progressstatus==null?storeValue('progressstatus','0'):appsmith.store.progressstatus\n\t\t\t\tlet retry=0;\n\t\t\t\tawait FileUploadProcess.clearError();\n\t\t\t\tawait storeValue('closedisable','False');\n\t\t\t\tif(appsmith.store.statename=='Completed'){\n\t\t\t\t\tstatename=\"FileCheck\";\n\t\t\t\t\tprogressstatus=0;\n\t\t\t\t\tawait storeValue('statename',statename);\n\t\t\t\t\tawait storeValue('progressstatus',progressstatus);\n\t\t\t\t}\n\t\t\t\t//await showModal('Progress_Modal');\n\t\t\t\tlet DriveId = FileUploadProcess.getValue('Estimate', 'DriveId');\n\t\t\t\tlet DriveItemId = FileUploadProcess.getValue('Estimate', 'DriveItemId');\n\t\t\tlet fileParams = { \t \n\t\t\t\t\t\t\t\t\t\t\t\t\t \"FileType\":FilePicker.files[0].name.split('.').pop().trim(),\n\t\t\t\t\t                 \"SalesNumber\":Estimate_Table.selectedRow.Number,\n\t\t\t\t\t\t\t\t\t\t\t\t\t \"ModifiedBy\":appsmith.user.email.split(\"@\")[0],\n\t\t\t\t\t\t\t\t\t\t\t\t\t \"SalesId\":Estimate_Table.selectedRow.Id,\n\t\t\t\t\t\t\t\t\t\t\t\t\t \"EstimateId\":Estimate_Table.selectedRow.EId,\n\t\t\t\t                   \"OriginalFileName\":appsmith.store.tabledata[5].Value\n\t\t\t\t};\n\t\t\t\n\t\t\tawait showModal('Progress_Modal');\n\t\t\twhile(statename != 'Completed')\n\t\t\t\t{\n\t\t\t\tconsole.log(progressstatus);\n\t\t\t\tconsole.log(statename);\n\t\t\t\tif(statename!='Error'){\n\t\t\t\t\t\tawait storeValue('statename',statename);\n\t\t\t\t\t\tawait storeValue('progressstatus',progressstatus);\n\t\t\t\t}\n\t\t\t\t\t\tswitch(statename)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcase 'FileCheck':\n\t\t\t\t\t\t\t\t\t\tlet response = await SpecificFilesInDrive_Select.run({'DriveId': DriveId,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'DriveItemId': DriveItemId,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'FileName':EstimateAttachments_Table.selectedRow.FileName});\n\t\t\t\t\t\t\t\t\t\tif(response.value.length>0){\n\t\t\t\t\t\t\t\t\t\t\t\tfor(const eachFile of response.value ) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (eachFile.name == ActualFileName_Input.text){\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstatename='UploadToSharePoint';\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tprogressstatus=25;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t\t\t}     \n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tif(statename!='UploadToSharePoint'){\n\t\t\t\t\t\t\t\t\t\t\t\tawait FileUploadProcess.setError(\"File Not Found In Sharepoint!\");\n\t\t\t\t\t\t\t\t\t\t\t\tstatename='Error';\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tcase 'DBUpdate':\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tawait EAttachments_Update.run({\"FileId\":FileId, \"FileComments\": FileComments})\n\t\t\t\t\t\t\t\t\t\tstatename='UpdateMetadata';\n\t\t\t\t\t\t\t\t\t\tprogressstatus=75;\n\t\t\t\t\t\t\t\t    break;\n\n\t\t\t\t\t\t\tcase 'UploadToSharePoint': \n\t\t\t\t\t\t\t\tif(FilePicker.files.length>0){\n\t\t\t\t\t\t\t\t\t console.log('start2...')\n\t\t\t\t\t\t\t\t\t\tlet uploadurl=await  UploadSession_Create.run({'DriveId':DriveId,'DriveItemId':DriveItemId,'fileName':appsmith.store.ActualFileName});\n\t\t\t\t\t\t\t\t\t\tconsole.log(uploadurl.uploadUrl);\n\t\t\t\t\t\t\t\t\t\tlet filesize=FilePicker.files[0].size;\n\t\t\t\t\t\t\t\t\t\tlet startindex=0; \n\t\t\t\t\t\t\t\t\t\tlet responsecreate = \"\"; \n\t\t\t\t\t\t\t\t\t\tlet upload_chunk = filesize; \n\t\t\t\t\t\t\t\t\t\tlet endindex=filesize-1;\n\t\t\t\t\t\t\t\t\t\tresponsecreate = await FileUpload_Create.run(()=>{},()=>{},{'uploadurl':UploadSession_Create.data.uploadUrl.split('//')[1],'range':upload_chunk,'startindex':startindex,'endindex':endindex,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'filesize':filesize});\n\t\t\t\t\t\t\t\t\t\tconsole.log('response is',FileUpload_Create.data);\n\t\t\t\t\t\t\t\t\t\tif(FileUpload_Create.data.length!=0){\n\t\t\t\t\t\t\t\t\t\t\t\tif(FileUpload_Create.data.name == ActualFileName_Input.text){\n\t\t\t\t\t\t\t\t\t\t\t\tstatename='DBUpdate';\n\t\t\t\t\t\t\t\t\t\t\t\tprogressstatus=50;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\telse if(retry==0)\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tretry++;\n\t\t\t\t\t\t\t\t\t\t\tawait FileUploadProcess.setError(\"Upload Failed in first attempt, attempting second\");\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t\t\t\t\tawait FileUploadProcess.setError(\"Upload Failed!, File Upload Update Response not valid\");\n\t\t\t\t\t\t\t\t\t\t\tstatename='Error';\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\t\tstatename='Completed';\n\t\t\t\t\t\t\t\t\tprogressstatus=100;\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'UpdateMetadata':\n\t\t\t\t\t\t\t\t\t\tlet responsemetadata=\"\";\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tresponsemetadata = await FileUploadProcess.modifyFileMetadata(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tappsmith.store.ActualFileName, \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfileParams,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'SalesId',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t Estimate_Table.selectedRow.Id);\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tconsole.log(responsemetadata);\n\t\t\t\t\t\t\t\t\t\tif(responsemetadata.length!=0){\n\t\t\t\t\t\t\t\t\t\t\tif(responsemetadata.SalesId==Estimate_Table.selectedRow.Id){\n\t\t\t\t\t\t\t\t\t\t\t\tstatename='Completed'\n\t\t\t\t\t\t\t\t\t\t\t\tprogressstatus=100;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\telse if(retry==0)\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tretry++;\n\t\t\t\t\t\t\t\t\t\t\t\tawait FileUploadProcess.setError(\"First Attempt for Metadata is failed, Attempting Second\");\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t\t\t\t\t\tawait FileUploadProcess.setError(\"Upload Failed!, Metadata create response not valid\");\n\t\t\t\t\t\t\t\t\t\t\t\tstatename='Error';\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t \t\t\t\tbreak;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tcase 'Error':\n\t\t\t\t\t\t\t\t\t\tawait storeValue('closedisable','True');\n\t\t\t\t\t\t\t\t\t\tstatename='Completed';\n\t\t\t\t\t\t\t\t\t\tbreak;\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t}\n\t\t\tawait storeValue('statename',statename)\n\t\t\t.then(()=>storeValue('progressstatus',progressstatus))\n\t\t\tif(appsmith.store.statename=='Completed'&&appsmith.store.ErrorMessage==''){\n\t\t\t\tawait EAttachments_Select.run({\"EId\":Estimate_Table.selectedRow.Id})\n\t\t\t  await FileUploadProcess.runRefreshFunc()\n\t\t\t  .then(()=>closeModal('Progress_Modal'))\n\t\t\t\t.then(()=>storeValue('ActualFileName',''))\n\t\t\t\t.then(()=>Promise.all([showModal('FileUpload_Modal'),EAttachments_Select.run({\"EId\":Estimate_Table.selectedRow.EId})]))\n\t\t\t\t.then(()=>showAlert('Estimate File Updated','success'))\n\t\t\t\t.then(()=>resetWidget('QuoteAttachments_Table'))\n\t\t\t}\n\t\t\t}else{\n\t\t\t\t\n\t\t\t\tawait EAttachments_Update.run({\"FileId\":FileId, \"FileComments\": FileComments})\n\t\t\t\t.then(() => EAttachments_Select.run({\"EId\":Estimate_Table.selectedRow.EId}))\n\t\t\t\t.then(()=>storeValue('ActualFileName',''))\n\t\t\t\t.then(()=>Promise.all([showModal('FileUpload_Modal'),EAttachments_Select.run({\"EId\":Estimate_Table.selectedRow.EId})]))\n\t\t\t\t.then(()=>showAlert('File Comments Updated','success'))\n\t\t\t}\n\t\t}\n\t\tcatch(err)\n\t\t\t{\n\t\t\t\tif(err.message==\"Cannot read properties of undefined (reading 'data')\"){\n\t\t\t\t\t\t\tPromise.all([FileUploadProcess.setError(\"Network got disconnected!, Please check your connection and retry\"),\n\t\t\t\t\t\t\t\t\t\t\t\t\tstoreValue('closedisable','True'),showAlert('Network got disconnected!, Please check your connection and retry','error')])\n\t\t\t\t \t\n\t\t\t\t}else{\n\t\t\t\t\t\t\tPromise.all([FileUploadProcess.setError(\"Upload Failed retry, \" + err.message),\n\t\t\t\t\t\t\t\t\t\t\t\t\t storeValue('closedisable','True'),showAlert(\"Upload Failed retry, \" \n\t\t\t\t\t\t\t\t\t\t\t\t\t +err.message,'error')])\n\t\t\t\t}\n\t\t\t}\n\t},\n\trunDeleteFile: async (FileId) => {\n\t\t// Delete entry in db. \n\t\t// Delete entry in sharepoint\n\t try{\n\t\t \t\tlet fileObject=\"\";\n\t\t \t\tawait FileUploadProcess.clearError();\n\t\t \t\t\n\t\t\t\tfileObject = await FileUploadProcess.getFileObject(appsmith.store.ActualFileName,Estimate_Table.selectedRow.Id,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t 'SalesId');\n\t\t\t\tif (appsmith.store.ErrorOccured === true) {\n\t\t\t\t\tawait showAlert(\"File not found in sharepoint, Deleting in database\");\n\t\t\t\t\tawait FileUploadProcess.setError(\"No files exist!\");\n\t\t\t\t}else{\n\t\t\t\tconsole.log(fileObject);\n\t\t\t\tlet driveId = FileUploadProcess.getValue('Estimate', 'DriveId');\n\t\t\t\tlet itemId = fileObject.driveItem[\"id\"]; // sharepointid for file , then delete it\n\n\t\t\t\tlet response = \"\";\n\t\t\t\tresponse = await File_Delete.run({\"driveId\": driveId, \"itemId\": itemId})\n\t\t\t\t}\t\t\n\n\t\t\t\tawait EAttachments_Delete.run({\"FileId\": FileId})\n\t\t\t\t.then(() => EAttachments_Select.run({\"EId\":Estimate_Table.selectedRow.EId}))\n\t\t    .then(()=>storeValue('ActualFileName',''))\n\t\t\t\t.then(() => showAlert(\"Estimate File Deleted\", \"success\"))\n\t\t \t\t.then(()=>FileUpload_Check.run({\"EId\":Estimate_Table.selectedRow.EId}))\n\t\t\t\t\t\t\t\t\t\n\t }catch(err){\n\t\t if(err.message==\"Cannot read properties of undefined (reading 'data')\"){\n\t\t\t\t\t\t\tPromise.all([FileUploadProcess.setError(\"Network got disconnected!, Please check your connection and retry\"),\n\t\t\t\t\t\t\t\t\t\t\t\t\tstoreValue('closedisable','True'),showAlert('Network got disconnected!, Please check your connection and retry','error')])\n\t\t\t\t \t\n\t\t\t\t}else{\n\t\t\t\t\t\t\tPromise.all([FileUploadProcess.setError(\"Delete Failed retry, \" + err.message),\n\t\t\t\t\t\t\t\t\t\t\t\t\t storeValue('closedisable','True'),showAlert(\"Delete Failed retry, \" \n\t\t\t\t\t\t\t\t\t\t\t\t\t +err.message,'error')])\n\t\t\t\t} \n\t }\n\t},\n\trunRefreshFunc: async () => {\n\t\tPromise.all([GlobalVariables.resetForm(['UserText_Input','FileComments_Input','FilePicker']),\n\t\t\tstoreValue('ActualFileName', \"\"),storeValue('disable',false),FileUploadProcess.clearError()])\n\t},\n\ttestRunRefreshFunc: async () => {\n\t\tPromise.all([resetWidget(\"FilePicker\"),\n\t\t\tstoreValue('ActualFileName', \"\"),storeValue('disable',false),FileUploadProcess.clearError()])\n\t},\n\t\n\tmodifyMetadata: async (fileParams, Number, NumberName) => {\n\t\t// Get a file name and the type of document (component, assembly or manufacturing)\n\t\t// Steps:\n\t\t// Get File Id from the sharepoint list.\n\t\t// Send the metadata with the API call. \n\t\t//console.log(\"meta check1\")\n\t\tlet response=\"\";\n\t\tlet metaresponse=\"\";\n\t\tlet siteId=\"\";\n\t\tlet listId =\"\";\n\t\tPromise.all([siteId=FileUploadProcess.getValue('Estimate','SharepointId'),listId=FileUploadProcess.getValue('Estimate','ListId')])\n\t\t\n\t\tlet params = {'siteId': siteId, \n\t\t\t\t\t\t\t\t\t'listId': listId,\n\t\t\t\t\t\t\t\t  'Number': Number,\n\t\t\t\t\t\t\t\t  'NumberName':NumberName};\n\t\t\n\t\tresponse = await ListItemsDelete_Select.run(params);\n\t\t\n\t\tif (response.value.length == 0) {\n\t\t\tawait showAlert('Update failed','error');\n\t\t}\n\t\tlet data=[];\n\t\tfor(const eachFile of response.value ) {\n\t\t\n\t\t\t\tlet query_params = {\n\t\t\t\t\t'siteId': FileUploadProcess.getValue('Estimate', 'SharepointId'), \n\t\t\t\t\t'listId': FileUploadProcess.getValue('Estimate', 'ListId'),\n\t\t\t\t\t'listItemId': eachFile.id,\n\t\t\t\t\t'fileParams': fileParams,\n\t\t\t\t};\n\t\t\t\tdata.push(query_params);\n\t\t\n\t\t}\n\t\tconst metadata = data.map(data=>FileMetadata_Create.run(data))\n\t\treturn Promise.all(metadata)\n\t},\n\t\n}\n\t","variables":[{"name":"fileUploadStruct","value":"{\n  \"Estimate\": {\n    'Title': \"Upload Estimate Files\",\n    'DriveId': 'b!9sncToW8AUeetDafxm9_qHQ1D99nS8NIu4I1_LuTxxhFBoTD6JZkSL8HEOFz7lmD',\n    'DriveItemId': '01WIYHH3V6Y2GOVW7725BZO354PWSELRRZ',\n    'SharepointId': 'anoralabs.sharepoint.com,4edcc9f6-bc85-4701-9eb4-369fc66f7fa8,df0f3574-4b67-48c3-bb82-35fcbb93c718',\n    'ListId': 'c3840645-96e8-4864-bf07-10e173ee5983'\n  }\n}"},{"name":"fileUploadStructProd","value":"{\n  \"Estimate\": {\n    'Title': \"Upload Estimate Files\",\n    'DriveId': 'b!9sncToW8AUeetDafxm9_qIKKA-4bAhtFjvt40BOkn5XtKNEpD9XARYwkJQ0apjy6',\n    'DriveItemId': '01FIWJAG56Y2GOVW7725BZO354PWSELRRZ',\n    'SharepointId': 'anoralabs.sharepoint.com,4edcc9f6-bc85-4701-9eb4-369fc66f7fa8,ee038a82-021b-451b-8efb-78d013a49f95',\n    'ListId': '29d128ed-d50f-45c0-8c24-250d1aa63cba'\n  }\n}"}],"userPermissions":[]},"publishedCollection":{"name":"FileUploadProcess","pageId":"Estimate Process","pluginId":"js-plugin","pluginType":"JS","actions":[],"archivedActions":[],"body":"export default {\n\t\n\tonfileselect:async()=>{\n\t\tif(FilePicker.files[0].size >= '20000000'){\n\t\t\t\tawait showModal('File_Alert_Modal');\n\t\t}else{\n\t\t\tif(FilePicker.files[0].name.split('.')[1]=='zip'&& FilePicker.files[0].size >= 4000000){\n\t\t\t\tawait showModal('File_Alert_Modal');\n\t\t\t}else{\n\t\t\t\tawait showAlert('File Selected','success');\n\t\t\t} \n\t\t}\n },\n\t  \n fileUploadStruct: {\n\t\t\"Estimate\": {\n\t\t'Title': \"Upload Estimate Files\",\n\t\t'DriveId': 'b!9sncToW8AUeetDafxm9_qHQ1D99nS8NIu4I1_LuTxxhFBoTD6JZkSL8HEOFz7lmD',\n\t\t'DriveItemId': '01WIYHH3V6Y2GOVW7725BZO354PWSELRRZ', \n\t\t'SharepointId': 'anoralabs.sharepoint.com,4edcc9f6-bc85-4701-9eb4-369fc66f7fa8,df0f3574-4b67-48c3-bb82-35fcbb93c718',\n\t\t'ListId': 'c3840645-96e8-4864-bf07-10e173ee5983'\n\t\t}\n },\n\t \n\t fileUploadStructProd: {\n\t\t\"Estimate\": {\n\t\t'Title': \"Upload Estimate Files\",\n\t\t'DriveId': 'b!9sncToW8AUeetDafxm9_qIKKA-4bAhtFjvt40BOkn5XtKNEpD9XARYwkJQ0apjy6',\n\t\t'DriveItemId': '01FIWJAG56Y2GOVW7725BZO354PWSELRRZ', \n\t\t'SharepointId': 'anoralabs.sharepoint.com,4edcc9f6-bc85-4701-9eb4-369fc66f7fa8,ee038a82-021b-451b-8efb-78d013a49f95',\n\t\t'ListId': '29d128ed-d50f-45c0-8c24-250d1aa63cba'\n\t\t}\n\t},\n\t \n\tclearError: async () => {\n\t\tawait storeValue('ErrorMessage', \"\");\n\t\tawait storeValue('ErrorVisibility', false);\n\t\tawait storeValue('ErrorOccured', false);\n\t}, \n\t\n\tsetError: async (errorMessage) => {\n\t\tawait storeValue('ErrorMessage', errorMessage);\n\t\tawait storeValue('ErrorVisibility', true);\n\t\tawait storeValue('ErrorOccured', true);\n\t}, \n\t \n\t getValue: (modelType, key) => {\n\t\tif(appsmith.URL.hostname==\"erp-dev.anoralabs.com\") {\t\t\n\t\t\treturn FileUploadProcess.fileUploadStruct[modelType][key];\n\t\t} else {\n\t\t\treturn FileUploadProcess.fileUploadStructProd[modelType][key];\n\t\t}\n\t},\n\t \n\t getFileObject: async (fileName,Number,NumberName) => {\n\t\tlet response=\"\";\n\t\tlet params = {'siteId': FileUploadProcess.getValue('Estimate', 'SharepointId'), \n\t\t\t\t\t\t\t\t\t'listId': FileUploadProcess.getValue('Estimate', 'ListId'),\n\t\t\t\t\t\t\t\t  'Number':Number,\n\t\t\t\t\t\t\t\t  'NumberName':NumberName};\n\t\t\n\t\tresponse = await ListItemsDelete_Select.run(params);\n\t\tconsole.log('dwnld res is',response);\n\t\tif (response.value.length == 0) {\n\t\t\treturn await FileUploadProcess.setError(\"No files exist!\");\n\t\t}\n\t\tfor(const eachFile of response.value ) {\n\t\t\tif (eachFile.driveItem.name == fileName){\n\t\t\t\tawait storeValue('fileerror','false');\n\t\t\t\treturn eachFile; \n\t\t\t} \n\t\t} \n\t\tawait storeValue('fileerror','true');\n\t\treturn await FileUploadProcess.setError(\"Cannot find file \" + fileName);\n\t},\n\t \n\t\trunDownloadFile: async () => {\n\t\tlet fileObject = await FileUploadProcess.getFileObject(ActualFileName_Input.text,appsmith.store.ESalesId,                                                                  'SalesId');\n\t\tconsole.log(fileObject)\n\t\t\t\n\t\tif (appsmith.store.fileerror == 'true' ) {\n\t\t\tawait showModal('ShowAlert_Modal');\n\t\t} else {\n\t\tlet download_url = fileObject.driveItem[\"@microsoft.graph.downloadUrl\"];\n\t\tlet filename = fileObject.driveItem['name'];\n\t\tlet filetype = fileObject.driveItem[\"file\"][\"mimeType\"];\n\t\t\n\t\tdownload(download_url, filename, filetype);\n\t\tawait showAlert('File Downloaded Successfully','success')\n\t\t}\n\t},\n\t\t\t\n\t\t getFileName: async () => {\n\t\tawait FileUploadProcess.clearError();\n\t\tif(EstimateAttachments_Table.selectedRowIndex != -1) {\n\t\t\treturn await storeValue('ActualFileName', EstimateAttachments_Table.selectedRow.FileName);\n\t\t}\n\t\tif (FilePicker.files.length == 0) {\n\t\t\treturn await storeValue('ActualFileName', \"\");\n\t\t}\n\t\t\n\t\tif (UserText_Input.text == \"\" || UserText_Input.isValid != true) {\n\t\t\tawait FileUploadProcess.setError(\"UserText is not provided or is not valid\");\n\t\t\treturn await storeValue('ActualFileName', \"\");\n\t\t}\n\t\tlet file_name_temp = \"\";\n\t\t file_name_temp = Estimate_Table.selectedRow.EId.toString().replace(/[^a-zA-Z0-9]/g, '').toString().trim() + \"_\" + UserText_Input.text.toString() + \".\" + FilePicker.files[0].name.split('.').pop().trim();\n\t\t\n\t\tawait FileUploadProcess.clearError();\n\t\treturn await storeValue('ActualFileName', file_name_temp.split(\" \").join(\"_\"));\n\t\t\n\t},\n\t\n onUploadModalClick: async () => {\n\t\t\n\t\tlet tabledata=[];\n\t\tlet siteId=\"\";\n\t\tlet listId=\"\";\n\t\tPromise.all([storeValue('activetab','Empty Tab'),FileUploadProcess.testRunRefreshFunc()])\n\t\tPromise.all([siteId=FileUploadProcess.getValue('Estimate','SharepointId'),listId=FileUploadProcess.getValue('Estimate','ListId')])\n\t\tlet data=await MetaData_Select.run({\"siteId\":siteId,\"listId\":listId,\"NumberName\":\"SalesId\",\"Number\":appsmith.store.ESalesId});\n\t\tconsole.log(data);\n\t\t\n\t\tfor(let i=0;i<data.value.length;i++){\n\t\t\tconsole.log(data.value[i].fields[\"LinkFilename\"]);\n\t\t\tif(data.value[i].fields[\"LinkFilename\"]==EstimateAttachments_Table.selectedRow.FileName){\n\t\t\t\t\t\n\t\t\t\t\t\ttabledata.push({\"Field\":\"SalesNumber\",\"Value\":data.value[i].fields['SalesNumber']},\n\t\t\t\t\t\t\t\t\t\t\t\t\t {\"Field\":\"FileType\",\"Value\":data.value[i].fields['FileType']},\n\t\t\t\t\t\t\t\t\t\t\t\t\t {\"Field\":\"ModifiedBy\",\"Value\":data.value[i].fields['ModifiedBy']},\n\t\t\t\t\t\t\t\t\t\t\t\t\t {\"Field\":'SalesId',\"Value\":data.value[i].fields['SalesId']},\n\t\t\t\t\t\t\t\t\t\t\t\t\t {\"Field\":'EstimateId',\"Value\":data.value[i].fields['EstimateId']},\n\t\t\t\t\t\t\t\t\t\t\t\t\t {\"Field\":\"OriginalFileName\",\"Value\":data.value[i].fields['OriginalFileName']})\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t}\n\t\t\t  \n\t\t}\n\t\tPromise.all([storeValue('ActualFileName',EstimateAttachments_Table.selectedRow.FileName),storeValue('tabledata',tabledata),\n\t\t\t\t\t\t\t\t storeValue('statename','Completed'),storeValue('disable',false)]);\n\t\t\n\t},\n\t\n\tretryfunction:async()=>{\n\t\tif(appsmith.store.add==1){\n\t\t\tawait FileUploadProcess.runCreateFile(Estimate_Table.selectedRow.Id,FileComments_Input.text);\n\t\t}else if(appsmith.store.add==2){\n\t\t\tawait FileUploadProcess.runModifyFile(EstimateAttachments_Table.selectedRow.Id,FileComments_Input.text)\n\t\t}else{\n\t\t\tawait FileUploadProcess.setError('value error in retry');\n\t\t}\t\t\n\t},\n\t\t \n runCreateFile: async (EId, Comments ) => {\n\t\t// Check for duplicate.\n\t\t// if yes, raise Error\n\t\t// else, create entry in db.\n\t\t// upload file. \n\t\t// update file metadata. \n\t\ttry\n\t\t{\n\t\t\t\tlet statename=appsmith.store.statename==null?storeValue('statename','FileCheck'):appsmith.store.statename\n\t\t\t\tlet progressstatus=appsmith.store.progressstatus==null?storeValue('progressstatus','0'):appsmith.store.progressstatus\n\t\t\t\tlet retry=0;\n\t\t\t\tawait FileUploadProcess.clearError();\n\t\t\t\tawait storeValue('closedisable','False');\n\t\t\t\tif(appsmith.store.statename=='Completed'){\n\t\t\t\t\tstatename=\"FileCheck\"; \n\t\t\t\t\tprogressstatus=0;\n\t\t\t\t\tawait storeValue('statename',statename);\n\t\t\t\t\tawait storeValue('progressstatus',progressstatus);\n\t\t\t\t}\n\t\t\t\tshowModal('Progress_Modal');\n\t\t\t\tlet fileParams = { \n\t\t\t\t\t\t\t\t\t\t\t\t\t \"ModifiedBy\":appsmith.user.email.split(\"@\")[0],\n\t\t\t\t\t                 \"FileType\":FilePicker.files[0].name.split('.').pop().trim(),\n\t\t\t\t\t                 \"SalesNumber\":Estimate_Table.selectedRow.SalesNumber,\n\t\t\t\t\t\t\t\t\t\t\t\t\t \"SalesId\":Estimate_Table.selectedRow.Id,\n\t\t\t\t\t\t\t\t\t\t\t\t\t \"EstimateId\":Estimate_Table.selectedRow.EId,\n\t\t\t\t\t                 \"OriginalFileName\":FilePicker.files[0].name\n\t\t\t\t}\n\t\t\t\tlet DriveId = FileUploadProcess.getValue('Estimate', 'DriveId');\n\t\t\t\tlet DriveItemId = FileUploadProcess.getValue('Estimate', 'DriveItemId');\n\t\t\t\t\n\t\t\t\twhile(statename != 'Completed')\n\t\t\t\t{\n\t\t\t\t\t\tconsole.log(progressstatus);\n\t\t\t\t\t\tconsole.log(statename);\n\t\t\t\t\t\tif(statename!='Error'){\n\t\t\t\t\t\t\tawait storeValue('statename',statename);\n\t\t\t\t\t\t\tawait storeValue('progressstatus',progressstatus);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tswitch(statename)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcase 'FileCheck':\n\t\t\t\t\t\t\t\t\t\tlet response = await SpecificFilesInDrive_Select.run({'DriveId': DriveId, \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'DriveItemId': DriveItemId,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'FileName':ActualFileName_Input.text});\n\t\t\t\t\t\t\t\t\t\tconsole.log(response,'response')\n\t\t\t\t\t\t\t\t\t\tif (response.value.length == 0) {\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\tstatename='UploadToSharePoint'\n\t\t\t\t\t\t\t\t\t\t\t\t\tprogressstatus=25;\n\t\t\t\t\t\t\t\t\t\t}     \n\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tawait FileUploadProcess.setError(\"File Name Not Unique! Enter different user \");\n\t\t\t\t\t\t\t\t\t\t\t\tstatename='Error';\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase 'DBInsert':\n\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\tawait EAttachments_Insert.run({\"EId\":EId, \"FileName\":appsmith.store.ActualFileName, \"Comments\":Comments})\n\t\t\t\t\t\t\t\t\t\t\t\t.then(() => EAttachments_Select.run({\"EId\":EId}))\n\t\t\t\t\t\t\t\t\t\t\t\tstatename='UpdateMetadata';\n\t\t\t\t\t\t\t\t\t\t\t\tprogressstatus=75;\n\t\t\t\t\t\t\t\t    \t\tbreak;\n       \n\t\t\t\t\t\t\tcase 'UploadToSharePoint':\n\t\t\t\t\t\t\t\t     let uploadurl=await UploadSession_Create.run({'DriveId':DriveId,'DriveItemId':DriveItemId,'fileName':ActualFileName_Input.text});\n\t\t\t\t\t\t\t\t\t\t\tconsole.log('uploadurl is',uploadurl.uploadUrl);\n\t\t\t\t\t\t\t\t\t\t\tlet filesize=FilePicker.files[0].size;\n\t\t\t\t\t\t\t\t\t\t\tlet startindex=0;\n\t\t\t\t\t\t\t\t\t\t\tlet responsecreate = \"\";\n\t\t\t\t\t\t\t\t\t\t\tlet upload_chunk = filesize;\n\t\t\t\t\t\t\t\t\t\t\tlet endindex=filesize-1; \n\t\t\t\t\t\t\t\t\t\t\tresponsecreate = await FileUpload_Create.run(()=>{},()=>{},{'uploadurl':UploadSession_Create.data.uploadUrl.split('//')[1],'range':upload_chunk,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t 'startindex':startindex,'endindex':endindex,'filesize':filesize});\n\t\t\t\t\t\t\t\t\t\t\tconsole.log('responsecreate is',FileUpload_Create.data);\n\t\t\t\t\t\t\t\t\t\t\tconsole.log('name',FileUpload_Create.data.name,\"Name\")\n\t\t\t\t\t\t\t\t\t\t\tif(FileUpload_Create.data.length!=0){\n\t\t\t\t\t\t\t\t\t\t\t\tif(FileUpload_Create.data.name == ActualFileName_Input.text){ //check uploaded or not\n\t\t\t\t\t\t\t\t\t\t\t\t\tstatename='DBInsert';\n\t\t\t\t\t\t\t\t\t\t\t\t\tprogressstatus=50;\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\telse if(retry==0)\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tretry++;\n\t\t\t\t\t\t\t\t\t\t\t\tawait FileUploadProcess.setError(\"Upload Failed in first attempt, attempting second\");\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t\t\t\t\t\tawait FileUploadProcess.setError(\"Upload Failed!, File Upload Create Response not valid\");\n\t\t\t\t\t\t\t\t\t\t\t\tstatename='Error';\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'UpdateMetadata':\n\t\t\t\t\t\t\t\t\t\tlet responsemetadata=\"\";\n\t\t\t\t\t\t\t\t\t\tresponsemetadata = await FileUploadProcess.modifyFileMetadata(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tappsmith.store.ActualFileName, \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfileParams,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  'SalesId',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  Estimate_Table.selectedRow.Id);\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tconsole.log('metadata',responsemetadata);\n\t\t\t\t\t\t\t\t\t\tif(FileMetadata_Create.data.length!=0){\n\t\t\t\t\t\t\t\t\t\t\tif(FileMetadata_Create.data.SalesId==Estimate_Table.selectedRow.Id){\n\t\t\t\t\t\t\t\t\t\t\t\tstatename='Completed'\n\t\t\t\t\t\t\t\t\t\t\t\tprogressstatus=100;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\telse if(retry==0)\n\t\t\t\t\t\t\t\t\t\t{ \n\t\t\t\t\t\t\t\t\t\t\t\tretry++;\n\t\t\t\t\t\t\t\t\t\t\t\tawait FileUploadProcess.setError(\"First Attempt for Metadata is failed, Attempting Second\");\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t\t\t\t\t\tawait FileUploadProcess.setError(\"Upload Failed!, Metadata create response not valid\");\n\t\t\t\t\t\t\t\t\t\t\t\tstatename='Error';\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t \t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'Error':\n\t\t\t\t\t\t\t\t\t\tawait storeValue('closedisable','True');\n\t\t\t\t\t\t\t\t\t\tstatename='Completed';\n\t\t\t\t\t\t\t\t\t\tbreak;\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t}\n\t\t\tawait storeValue('statename',statename)\n\t\t\tawait storeValue('progressstatus',progressstatus);\n\t\t\tif(appsmith.store.statename=='Completed'&&appsmith.store.ErrorMessage==''){\n\t\t\t  await FileUploadProcess.runRefreshFunc()\n\t\t\t  .then(()=>closeModal('Progress_Modal'))\n\t\t\t\t.then(()=>Promise.all([showModal('FileUpload_Modal'),EAttachments_Select.run({\"EId\":Estimate_Table.selectedRow.EId})]))\n\t\t\t\t.then(()=>showAlert('Estimate File Inserted','success'))\n\t\t\t\t.then(()=>FileUpload_Check.run({'EId':Estimate_Table.selectedRow.EId}))\n\t\t\t}\n\t\t}\n\t\tcatch(err)\n\t\t\t{\n\t\t\t\tif(err.message==\"Cannot read properties of undefined (reading 'data')\"){\n\t\t\t\t\t\t\tPromise.all([FileUploadProcess.setError(\"Network got disconnected!, Please check your connection and retry\"),\n\t\t\t\t\t\t\t\t\t\t\t\t\tstoreValue('closedisable','True'),showAlert('Network got disconnected!, Please check your connection and retry','error')])\n\t\t\t\t \t\n\t\t\t\t}else{\n\t\t\t\t\t\t\tPromise.all([FileUploadProcess.setError(\"Upload Failed retry, \" + err.message),\n\t\t\t\t\t\t\t\t\t\t\t\t\t storeValue('closedisable','True'),showAlert(\"Upload Failed retry, \" \n\t\t\t\t\t\t\t\t\t\t\t\t\t +err.message,'error')])\n\t\t\t\t}\n\t\t\t}\n\t\n\t},\n\t\t\n modifyFileMetadata: async (fileName, fileParams, NumberName,Number) => {\n\t\t// Get a file name and the type of document (component, assembly or manufacturing)\n\t\t// Steps:\n\t\t// Get File Id from the sharepoint list.\n\t\t// Send the metadata with the API call. \n\t\t//console.log(\"meta check1\")\n\t\tlet response=\"\";\n\t\t//console.log(fileCategory);\n\t\tlet params = {'siteId': FileUploadProcess.getValue('Estimate', 'SharepointId'), \n\t\t\t\t\t\t\t\t\t'listId': FileUploadProcess.getValue('Estimate', 'ListId'),\n\t\t\t\t\t\t\t\t  'NumberName': NumberName,\n\t\t\t\t\t\t\t\t\t'Number':Number \n\t\t\t\t\t\t\t\t };\n\t\tif(EstimateAttachments_Table.selectedRowIndex==-1){\n\t\t\t\tconsole.log(params,'metabreak');\n\t\t\t\tresponse = await ListItemMetaDataCreate_Select.run(params);\n\t\t\tconsole.log(response);\n\t\t}else{\n\t\t\t\tresponse = await ListItemsDelete_Select.run(params);\n\t\t}\n\t\tif (response.value.length == 0) {\n\t\t\treturn await FileUploadProcess.setError(\"No files exist!\");\n\t\t}\n\t\tfor(const eachFile of response.value ) {\n\t\t\tconsole.log(\"eachfile\",eachFile)\n\t\t\tif (eachFile.driveItem.name == fileName){\n\t\t\t\tconsole.log(\"eachfile\",eachFile)\n\t\t\t\t// console.log(\"File found\");\n\t\t\t\t// console.log(fileParams);\n\t\t\t\tlet query_params = {\n\t\t\t\t\t'siteId': FileUploadProcess.getValue('Estimate', 'SharepointId'), \n\t\t\t\t\t'listId': FileUploadProcess.getValue('Estimate', 'ListId'),\n\t\t\t\t\t'listItemId': eachFile.id,\n\t\t\t\t\t'fileParams': fileParams,\n\t\t\t\t};\n\t\t\t\tconsole.log(query_params)\n\t\t\t\treturn await FileMetadata_Create.run(query_params);\n\t\t\t\t\n\t\t\t}\n\t\t}\t\n\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nrunModifyFile: async (FileId, FileComments) => {\n\t\t// Update the comment to DB. \n\t\t// Update the file.\n\t\ttry\n\t\t{\n\t\t\tif(FilePicker.files.length>0){\n\t\t\t\tlet statename=appsmith.store.statename==null?storeValue('statename','FileCheck'):appsmith.store.statename\n\t\t\t\tlet progressstatus=appsmith.store.progressstatus==null?storeValue('progressstatus','0'):appsmith.store.progressstatus\n\t\t\t\tlet retry=0;\n\t\t\t\tawait FileUploadProcess.clearError();\n\t\t\t\tawait storeValue('closedisable','False');\n\t\t\t\tif(appsmith.store.statename=='Completed'){\n\t\t\t\t\tstatename=\"FileCheck\";\n\t\t\t\t\tprogressstatus=0;\n\t\t\t\t\tawait storeValue('statename',statename);\n\t\t\t\t\tawait storeValue('progressstatus',progressstatus);\n\t\t\t\t}\n\t\t\t\t//await showModal('Progress_Modal');\n\t\t\t\tlet DriveId = FileUploadProcess.getValue('Estimate', 'DriveId');\n\t\t\t\tlet DriveItemId = FileUploadProcess.getValue('Estimate', 'DriveItemId');\n\t\t\tlet fileParams = { \t \n\t\t\t\t\t\t\t\t\t\t\t\t\t \"FileType\":FilePicker.files[0].name.split('.').pop().trim(),\n\t\t\t\t\t                 \"SalesNumber\":Estimate_Table.selectedRow.Number,\n\t\t\t\t\t\t\t\t\t\t\t\t\t \"ModifiedBy\":appsmith.user.email.split(\"@\")[0],\n\t\t\t\t\t\t\t\t\t\t\t\t\t \"SalesId\":Estimate_Table.selectedRow.Id,\n\t\t\t\t\t\t\t\t\t\t\t\t\t \"EstimateId\":Estimate_Table.selectedRow.EId,\n\t\t\t\t                   \"OriginalFileName\":appsmith.store.tabledata[5].Value\n\t\t\t\t};\n\t\t\t\n\t\t\tawait showModal('Progress_Modal');\n\t\t\twhile(statename != 'Completed')\n\t\t\t\t{\n\t\t\t\tconsole.log(progressstatus);\n\t\t\t\tconsole.log(statename);\n\t\t\t\tif(statename!='Error'){\n\t\t\t\t\t\tawait storeValue('statename',statename);\n\t\t\t\t\t\tawait storeValue('progressstatus',progressstatus);\n\t\t\t\t}\n\t\t\t\t\t\tswitch(statename)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcase 'FileCheck':\n\t\t\t\t\t\t\t\t\t\tlet response = await SpecificFilesInDrive_Select.run({'DriveId': DriveId,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'DriveItemId': DriveItemId,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'FileName':EstimateAttachments_Table.selectedRow.FileName});\n\t\t\t\t\t\t\t\t\t\tif(response.value.length>0){\n\t\t\t\t\t\t\t\t\t\t\t\tfor(const eachFile of response.value ) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (eachFile.name == ActualFileName_Input.text){\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstatename='UploadToSharePoint';\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tprogressstatus=25;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t\t\t}     \n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tif(statename!='UploadToSharePoint'){\n\t\t\t\t\t\t\t\t\t\t\t\tawait FileUploadProcess.setError(\"File Not Found In Sharepoint!\");\n\t\t\t\t\t\t\t\t\t\t\t\tstatename='Error';\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tcase 'DBUpdate':\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tawait EAttachments_Update.run({\"FileId\":FileId, \"FileComments\": FileComments})\n\t\t\t\t\t\t\t\t\t\tstatename='UpdateMetadata';\n\t\t\t\t\t\t\t\t\t\tprogressstatus=75;\n\t\t\t\t\t\t\t\t    break;\n\n\t\t\t\t\t\t\tcase 'UploadToSharePoint': \n\t\t\t\t\t\t\t\tif(FilePicker.files.length>0){\n\t\t\t\t\t\t\t\t\t console.log('start2...')\n\t\t\t\t\t\t\t\t\t\tlet uploadurl=await  UploadSession_Create.run({'DriveId':DriveId,'DriveItemId':DriveItemId,'fileName':appsmith.store.ActualFileName});\n\t\t\t\t\t\t\t\t\t\tconsole.log(uploadurl.uploadUrl);\n\t\t\t\t\t\t\t\t\t\tlet filesize=FilePicker.files[0].size;\n\t\t\t\t\t\t\t\t\t\tlet startindex=0; \n\t\t\t\t\t\t\t\t\t\tlet responsecreate = \"\"; \n\t\t\t\t\t\t\t\t\t\tlet upload_chunk = filesize; \n\t\t\t\t\t\t\t\t\t\tlet endindex=filesize-1;\n\t\t\t\t\t\t\t\t\t\tresponsecreate = await FileUpload_Create.run(()=>{},()=>{},{'uploadurl':UploadSession_Create.data.uploadUrl.split('//')[1],'range':upload_chunk,'startindex':startindex,'endindex':endindex,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'filesize':filesize});\n\t\t\t\t\t\t\t\t\t\tconsole.log('response is',FileUpload_Create.data);\n\t\t\t\t\t\t\t\t\t\tif(FileUpload_Create.data.length!=0){\n\t\t\t\t\t\t\t\t\t\t\t\tif(FileUpload_Create.data.name == ActualFileName_Input.text){\n\t\t\t\t\t\t\t\t\t\t\t\tstatename='DBUpdate';\n\t\t\t\t\t\t\t\t\t\t\t\tprogressstatus=50;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\telse if(retry==0)\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tretry++;\n\t\t\t\t\t\t\t\t\t\t\tawait FileUploadProcess.setError(\"Upload Failed in first attempt, attempting second\");\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t\t\t\t\tawait FileUploadProcess.setError(\"Upload Failed!, File Upload Update Response not valid\");\n\t\t\t\t\t\t\t\t\t\t\tstatename='Error';\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\t\tstatename='Completed';\n\t\t\t\t\t\t\t\t\tprogressstatus=100;\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'UpdateMetadata':\n\t\t\t\t\t\t\t\t\t\tlet responsemetadata=\"\";\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tresponsemetadata = await FileUploadProcess.modifyFileMetadata(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tappsmith.store.ActualFileName, \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfileParams,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'SalesId',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t Estimate_Table.selectedRow.Id);\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tconsole.log(responsemetadata);\n\t\t\t\t\t\t\t\t\t\tif(responsemetadata.length!=0){\n\t\t\t\t\t\t\t\t\t\t\tif(responsemetadata.SalesId==Estimate_Table.selectedRow.Id){\n\t\t\t\t\t\t\t\t\t\t\t\tstatename='Completed'\n\t\t\t\t\t\t\t\t\t\t\t\tprogressstatus=100;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\telse if(retry==0)\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tretry++;\n\t\t\t\t\t\t\t\t\t\t\t\tawait FileUploadProcess.setError(\"First Attempt for Metadata is failed, Attempting Second\");\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t\t\t\t\t\tawait FileUploadProcess.setError(\"Upload Failed!, Metadata create response not valid\");\n\t\t\t\t\t\t\t\t\t\t\t\tstatename='Error';\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t \t\t\t\tbreak;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tcase 'Error':\n\t\t\t\t\t\t\t\t\t\tawait storeValue('closedisable','True');\n\t\t\t\t\t\t\t\t\t\tstatename='Completed';\n\t\t\t\t\t\t\t\t\t\tbreak;\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t}\n\t\t\tawait storeValue('statename',statename)\n\t\t\t.then(()=>storeValue('progressstatus',progressstatus))\n\t\t\tif(appsmith.store.statename=='Completed'&&appsmith.store.ErrorMessage==''){\n\t\t\t\tawait EAttachments_Select.run({\"EId\":Estimate_Table.selectedRow.Id})\n\t\t\t  await FileUploadProcess.runRefreshFunc()\n\t\t\t  .then(()=>closeModal('Progress_Modal'))\n\t\t\t\t.then(()=>storeValue('ActualFileName',''))\n\t\t\t\t.then(()=>Promise.all([showModal('FileUpload_Modal'),EAttachments_Select.run({\"EId\":Estimate_Table.selectedRow.EId})]))\n\t\t\t\t.then(()=>showAlert('Estimate File Updated','success'))\n\t\t\t\t.then(()=>resetWidget('QuoteAttachments_Table'))\n\t\t\t}\n\t\t\t}else{\n\t\t\t\t\n\t\t\t\tawait EAttachments_Update.run({\"FileId\":FileId, \"FileComments\": FileComments})\n\t\t\t\t.then(() => EAttachments_Select.run({\"EId\":Estimate_Table.selectedRow.EId}))\n\t\t\t\t.then(()=>storeValue('ActualFileName',''))\n\t\t\t\t.then(()=>Promise.all([showModal('FileUpload_Modal'),EAttachments_Select.run({\"EId\":Estimate_Table.selectedRow.EId})]))\n\t\t\t\t.then(()=>showAlert('File Comments Updated','success'))\n\t\t\t}\n\t\t}\n\t\tcatch(err)\n\t\t\t{\n\t\t\t\tif(err.message==\"Cannot read properties of undefined (reading 'data')\"){\n\t\t\t\t\t\t\tPromise.all([FileUploadProcess.setError(\"Network got disconnected!, Please check your connection and retry\"),\n\t\t\t\t\t\t\t\t\t\t\t\t\tstoreValue('closedisable','True'),showAlert('Network got disconnected!, Please check your connection and retry','error')])\n\t\t\t\t \t\n\t\t\t\t}else{\n\t\t\t\t\t\t\tPromise.all([FileUploadProcess.setError(\"Upload Failed retry, \" + err.message),\n\t\t\t\t\t\t\t\t\t\t\t\t\t storeValue('closedisable','True'),showAlert(\"Upload Failed retry, \" \n\t\t\t\t\t\t\t\t\t\t\t\t\t +err.message,'error')])\n\t\t\t\t}\n\t\t\t}\n\t},\n\trunDeleteFile: async (FileId) => {\n\t\t// Delete entry in db. \n\t\t// Delete entry in sharepoint\n\t try{\n\t\t \t\tlet fileObject=\"\";\n\t\t \t\tawait FileUploadProcess.clearError();\n\t\t \t\t\n\t\t\t\tfileObject = await FileUploadProcess.getFileObject(appsmith.store.ActualFileName,Estimate_Table.selectedRow.Id,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t 'SalesId');\n\t\t\t\tif (appsmith.store.ErrorOccured === true) {\n\t\t\t\t\tawait showAlert(\"File not found in sharepoint, Deleting in database\");\n\t\t\t\t\tawait FileUploadProcess.setError(\"No files exist!\");\n\t\t\t\t}else{\n\t\t\t\tconsole.log(fileObject);\n\t\t\t\tlet driveId = FileUploadProcess.getValue('Estimate', 'DriveId');\n\t\t\t\tlet itemId = fileObject.driveItem[\"id\"]; // sharepointid for file , then delete it\n\n\t\t\t\tlet response = \"\";\n\t\t\t\tresponse = await File_Delete.run({\"driveId\": driveId, \"itemId\": itemId})\n\t\t\t\t}\t\t\n\n\t\t\t\tawait EAttachments_Delete.run({\"FileId\": FileId})\n\t\t\t\t.then(() => EAttachments_Select.run({\"EId\":Estimate_Table.selectedRow.EId}))\n\t\t    .then(()=>storeValue('ActualFileName',''))\n\t\t\t\t.then(() => showAlert(\"Estimate File Deleted\", \"success\"))\n\t\t \t\t.then(()=>FileUpload_Check.run({\"EId\":Estimate_Table.selectedRow.EId}))\n\t\t\t\t\t\t\t\t\t\n\t }catch(err){\n\t\t if(err.message==\"Cannot read properties of undefined (reading 'data')\"){\n\t\t\t\t\t\t\tPromise.all([FileUploadProcess.setError(\"Network got disconnected!, Please check your connection and retry\"),\n\t\t\t\t\t\t\t\t\t\t\t\t\tstoreValue('closedisable','True'),showAlert('Network got disconnected!, Please check your connection and retry','error')])\n\t\t\t\t \t\n\t\t\t\t}else{\n\t\t\t\t\t\t\tPromise.all([FileUploadProcess.setError(\"Delete Failed retry, \" + err.message),\n\t\t\t\t\t\t\t\t\t\t\t\t\t storeValue('closedisable','True'),showAlert(\"Delete Failed retry, \" \n\t\t\t\t\t\t\t\t\t\t\t\t\t +err.message,'error')])\n\t\t\t\t} \n\t }\n\t},\n\trunRefreshFunc: async () => {\n\t\tPromise.all([GlobalVariables.resetForm(['UserText_Input','FileComments_Input','FilePicker']),\n\t\t\tstoreValue('ActualFileName', \"\"),storeValue('disable',false),FileUploadProcess.clearError()])\n\t},\n\ttestRunRefreshFunc: async () => {\n\t\tPromise.all([resetWidget(\"FilePicker\"),\n\t\t\tstoreValue('ActualFileName', \"\"),storeValue('disable',false),FileUploadProcess.clearError()])\n\t},\n\t\n\tmodifyMetadata: async (fileParams, Number, NumberName) => {\n\t\t// Get a file name and the type of document (component, assembly or manufacturing)\n\t\t// Steps:\n\t\t// Get File Id from the sharepoint list.\n\t\t// Send the metadata with the API call. \n\t\t//console.log(\"meta check1\")\n\t\tlet response=\"\";\n\t\tlet metaresponse=\"\";\n\t\tlet siteId=\"\";\n\t\tlet listId =\"\";\n\t\tPromise.all([siteId=FileUploadProcess.getValue('Estimate','SharepointId'),listId=FileUploadProcess.getValue('Estimate','ListId')])\n\t\t\n\t\tlet params = {'siteId': siteId, \n\t\t\t\t\t\t\t\t\t'listId': listId,\n\t\t\t\t\t\t\t\t  'Number': Number,\n\t\t\t\t\t\t\t\t  'NumberName':NumberName};\n\t\t\n\t\tresponse = await ListItemsDelete_Select.run(params);\n\t\t\n\t\tif (response.value.length == 0) {\n\t\t\tawait showAlert('Update failed','error');\n\t\t}\n\t\tlet data=[];\n\t\tfor(const eachFile of response.value ) {\n\t\t\n\t\t\t\tlet query_params = {\n\t\t\t\t\t'siteId': FileUploadProcess.getValue('Estimate', 'SharepointId'), \n\t\t\t\t\t'listId': FileUploadProcess.getValue('Estimate', 'ListId'),\n\t\t\t\t\t'listItemId': eachFile.id,\n\t\t\t\t\t'fileParams': fileParams,\n\t\t\t\t};\n\t\t\t\tdata.push(query_params);\n\t\t\n\t\t}\n\t\tconst metadata = data.map(data=>FileMetadata_Create.run(data))\n\t\treturn Promise.all(metadata)\n\t},\n\t\n}\n\t","variables":[{"name":"fileUploadStruct","value":"{\n  \"Estimate\": {\n    'Title': \"Upload Estimate Files\",\n    'DriveId': 'b!9sncToW8AUeetDafxm9_qHQ1D99nS8NIu4I1_LuTxxhFBoTD6JZkSL8HEOFz7lmD',\n    'DriveItemId': '01WIYHH3V6Y2GOVW7725BZO354PWSELRRZ',\n    'SharepointId': 'anoralabs.sharepoint.com,4edcc9f6-bc85-4701-9eb4-369fc66f7fa8,df0f3574-4b67-48c3-bb82-35fcbb93c718',\n    'ListId': 'c3840645-96e8-4864-bf07-10e173ee5983'\n  }\n}"},{"name":"fileUploadStructProd","value":"{\n  \"Estimate\": {\n    'Title': \"Upload Estimate Files\",\n    'DriveId': 'b!9sncToW8AUeetDafxm9_qIKKA-4bAhtFjvt40BOkn5XtKNEpD9XARYwkJQ0apjy6',\n    'DriveItemId': '01FIWJAG56Y2GOVW7725BZO354PWSELRRZ',\n    'SharepointId': 'anoralabs.sharepoint.com,4edcc9f6-bc85-4701-9eb4-369fc66f7fa8,ee038a82-021b-451b-8efb-78d013a49f95',\n    'ListId': '29d128ed-d50f-45c0-8c24-250d1aa63cba'\n  }\n}"}],"userPermissions":[]},"id":"Estimate Process_FileUploadProcess","deleted":false,"gitSyncId":"67f4d81e59d0ae34925978ba_67f50ba959d0ae3492597b72"},{"unpublishedCollection":{"name":"PageObjects","pageId":"Estimate State","pluginId":"js-plugin","pluginType":"JS","actions":[],"archivedActions":[],"body":"export default {                                                                                                                                                                                                                                                  \n\t//code for insert values with uniqueCheck function to prevent insert of duplicate values\n\testimatestateCreate:async()=>{\n\t\tif(await Globals.uniqueCheck('EstimateState','Name',EstimateState_Name_Input.text)===false){\n\t\t\tshowAlert('duplicate name');\n\t  } else {\n\t\t\tEstimateState_Insert.run(()=>EstimateState_Select.run(()=>showAlert('Values inserted')));\n\t  }\n\t},\n\tdisableEstimatestateCreate:()=> {\n\t\treturn (Globals.disableCreateButton([EstimateState_Order_Input,EstimateState_Name_Input]))\n\t},\n}","variables":[],"userPermissions":[]},"publishedCollection":{"name":"PageObjects","pageId":"Estimate State","pluginId":"js-plugin","pluginType":"JS","actions":[],"archivedActions":[],"body":"export default {                                                                                                                                                                                                                                                  \n\t//code for insert values with uniqueCheck function to prevent insert of duplicate values\n\testimatestateCreate:async()=>{\n\t\tif(await Globals.uniqueCheck('EstimateState','Name',EstimateState_Name_Input.text)===false){\n\t\t\tshowAlert('duplicate name');\n\t  } else {\n\t\t\tEstimateState_Insert.run(()=>EstimateState_Select.run(()=>showAlert('Values inserted')));\n\t  }\n\t},\n\tdisableEstimatestateCreate:()=> {\n\t\treturn (Globals.disableCreateButton([EstimateState_Order_Input,EstimateState_Name_Input]))\n\t},\n}","variables":[],"userPermissions":[]},"id":"Estimate State_PageObjects","deleted":false,"gitSyncId":"62c6dd94aa3be20812d63927_62c7005faa3be20812d63a37"},{"unpublishedCollection":{"name":"Globals","pageId":"Estimate State","pluginId":"js-plugin","pluginType":"JS","actions":[],"archivedActions":[],"body":"export default {\n\t\n\tLabelColor:'#33838f',\n\tIconColor:'#48BF91',\n\t\n\tresetForm: (tabWidgets) => {\n\t\ttabWidgets.forEach(eachWidget => {resetWidget(eachWidget)});\n\t},\n\n\tvalidateWidget: (widgetObject) => {\n\t// if(typeof widgetObject.text !== \"undefined\" && (widgetObject.isValid === true|| widgetObject.isValid === undefined)) {\n\t\tlet valid = false;\n\t\tif (widgetObject.isValid === true) {\n\t\t\tvalid = true;\n\t\t} else {\n\t\t\tvalid = false;\n\t\t}\n\t\treturn valid;\n\t},\n\t\n\tvalidateForm: (formWidgets) => {\n\t\t// function accepts an array of widget objects. see ProjectType tab for example usage. \n\t\t// function returns false, if any of the form widgets returns false during validity check. \n\t\tlet validity = true;\n\t\tfor(let aWidget of formWidgets) {\n\t\t\tvalidity = validity && (Globals.validateWidget(aWidget));\n\t\t\tif (validity === false)\n\t\t\t\tbreak;\n\t\t}\n\t\treturn validity;\n\t},\n\t\n\tdisableCreateButton: (formWidgets) => {\n\t\t// Accepts an array of widget objects. Performs validity check on each one of them. \n\t\t// Function returns true, if validity is false, otherwise true\n\t\treturn (Globals.validateForm(formWidgets) === false);\n\t}, \n\t\n\tdisableUpdateButton: (formWidgets, formTable) => {\n\t\t// Accepts an array of widget objects and a table widget object, If no row in the table is selected returns true. \n\t\t// If one row is selected and all widgets pass vality check, returns false. . \n\t\t// Function returns true, if validity is false, otherwise true \n\t\tlet disableWidget = false;\n\t\tif (formTable.selectedRowIndex === -1) {\n\t\t\tdisableWidget = true;\n\t\t} else if (Globals.validateForm(formWidgets) === false) {\n\t\t\tdisableWidget = true;\n\t\t} else {\n\t\t\tdisableWidget = false;\n\t\t}\n\t\treturn disableWidget;\n\t},\n\t\n\t//function for checking uniqueness of inserting values\n\tasync uniqueCheck(tableName, columnName, columnValue) { \n    let unique = false;\n    const response = await Duplicate_Check_Select.run({'tableName': tableName, 'columnName': columnName,'columnValue': columnValue});\n    unique = (response[0].row_count === 0);\n    return unique;    \n  },\n\t//function for disable delete button\n\t//function returns false if we select any row from table\n\tdisableDeleteButton: (formTable) => {\n\t  let disableDelete = false;\n\t  if (formTable.selectedRowIndex === -1) {\n\t\t  disableDelete = true;\n\t  } else {\n\t\t  disableDelete = false;\n\t  }\n\t  return disableDelete;\n },\t\n\t\n}","variables":[{"name":"LabelColor","value":"'#33838f'"},{"name":"IconColor","value":"'#48BF91'"}],"userPermissions":[]},"publishedCollection":{"name":"Globals","pageId":"Estimate State","pluginId":"js-plugin","pluginType":"JS","actions":[],"archivedActions":[],"body":"export default {\n\t\n\tLabelColor:'#33838f',\n\tIconColor:'#48BF91',\n\t\n\tresetForm: (tabWidgets) => {\n\t\ttabWidgets.forEach(eachWidget => {resetWidget(eachWidget)});\n\t},\n\n\tvalidateWidget: (widgetObject) => {\n\t// if(typeof widgetObject.text !== \"undefined\" && (widgetObject.isValid === true|| widgetObject.isValid === undefined)) {\n\t\tlet valid = false;\n\t\tif (widgetObject.isValid === true) {\n\t\t\tvalid = true;\n\t\t} else {\n\t\t\tvalid = false;\n\t\t}\n\t\treturn valid;\n\t},\n\t\n\tvalidateForm: (formWidgets) => {\n\t\t// function accepts an array of widget objects. see ProjectType tab for example usage. \n\t\t// function returns false, if any of the form widgets returns false during validity check. \n\t\tlet validity = true;\n\t\tfor(let aWidget of formWidgets) {\n\t\t\tvalidity = validity && (Globals.validateWidget(aWidget));\n\t\t\tif (validity === false)\n\t\t\t\tbreak;\n\t\t}\n\t\treturn validity;\n\t},\n\t\n\tdisableCreateButton: (formWidgets) => {\n\t\t// Accepts an array of widget objects. Performs validity check on each one of them. \n\t\t// Function returns true, if validity is false, otherwise true\n\t\treturn (Globals.validateForm(formWidgets) === false);\n\t}, \n\t\n\tdisableUpdateButton: (formWidgets, formTable) => {\n\t\t// Accepts an array of widget objects and a table widget object, If no row in the table is selected returns true. \n\t\t// If one row is selected and all widgets pass vality check, returns false. . \n\t\t// Function returns true, if validity is false, otherwise true \n\t\tlet disableWidget = false;\n\t\tif (formTable.selectedRowIndex === -1) {\n\t\t\tdisableWidget = true;\n\t\t} else if (Globals.validateForm(formWidgets) === false) {\n\t\t\tdisableWidget = true;\n\t\t} else {\n\t\t\tdisableWidget = false;\n\t\t}\n\t\treturn disableWidget;\n\t},\n\t\n\t//function for checking uniqueness of inserting values\n\tasync uniqueCheck(tableName, columnName, columnValue) { \n    let unique = false;\n    const response = await Duplicate_Check_Select.run({'tableName': tableName, 'columnName': columnName,'columnValue': columnValue});\n    unique = (response[0].row_count === 0);\n    return unique;    \n  },\n\t//function for disable delete button\n\t//function returns false if we select any row from table\n\tdisableDeleteButton: (formTable) => {\n\t  let disableDelete = false;\n\t  if (formTable.selectedRowIndex === -1) {\n\t\t  disableDelete = true;\n\t  } else {\n\t\t  disableDelete = false;\n\t  }\n\t  return disableDelete;\n },\t\n\t\n}","variables":[{"name":"LabelColor","value":"'#33838f'"},{"name":"IconColor","value":"'#48BF91'"}],"userPermissions":[]},"id":"Estimate State_Globals","deleted":false,"gitSyncId":"62c6dd94aa3be20812d63927_62c7002daa3be20812d63a21"}],"editModeTheme":{"name":"Classic","displayName":"Classic","config":{"colors":{"primaryColor":"#16a34a","backgroundColor":"#F6F6F6"},"borderRadius":{"appBorderRadius":{"none":"0px","md":"0.375rem","lg":"1.5rem"}},"boxShadow":{"appBoxShadow":{"none":"none","sm":"0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06)","md":"0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06)","lg":"0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05)"}},"fontFamily":{"appFont":["System Default","Nunito Sans","Poppins","Inter","Montserrat","Noto Sans","Open Sans","Roboto","Rubik","Ubuntu"]}},"properties":{"colors":{"primaryColor":"#008695","backgroundColor":"#F6F6F6"},"borderRadius":{"appBorderRadius":"0px"},"boxShadow":{"appBoxShadow":"none"},"fontFamily":{"appFont":"System Default"}},"stylesheet":{"AUDIO_RECORDER_WIDGET":{"accentColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"BUTTON_WIDGET":{"buttonColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"BUTTON_GROUP_WIDGET":{"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none","childStylesheet":{"button":{"buttonColor":"{{appsmith.theme.colors.primaryColor}}"}}},"CAMERA_WIDGET":{"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"CHART_WIDGET":{"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"{{appsmith.theme.boxShadow.appBoxShadow}}"},"CHECKBOX_WIDGET":{"accentColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}"},"CHECKBOX_GROUP_WIDGET":{"accentColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}"},"CONTAINER_WIDGET":{"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"{{appsmith.theme.boxShadow.appBoxShadow}}"},"CIRCULAR_PROGRESS_WIDGET":{"fillColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}"},"CURRENCY_INPUT_WIDGET":{"accentColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"PHONE_INPUT_WIDGET":{"accentColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"DATE_PICKER_WIDGET2":{"accentColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"FILE_PICKER_WIDGET_V2":{"buttonColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"FORM_WIDGET":{"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"{{appsmith.theme.boxShadow.appBoxShadow}}"},"FORM_BUTTON_WIDGET":{"buttonColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"ICON_BUTTON_WIDGET":{"buttonColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"IFRAME_WIDGET":{"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"{{appsmith.theme.boxShadow.appBoxShadow}}"},"IMAGE_WIDGET":{"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"INPUT_WIDGET":{"accentColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"INPUT_WIDGET_V2":{"accentColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"JSON_FORM_WIDGET":{"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"{{appsmith.theme.boxShadow.appBoxShadow}}","submitButtonStyles":{"buttonColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"resetButtonStyles":{"buttonColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"childStylesheet":{"ARRAY":{"accentColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none","cellBorderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","cellBoxShadow":"none"},"OBJECT":{"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none","cellBorderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","cellBoxShadow":"none"},"CHECKBOX":{"accentColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}"},"CURRENCY_INPUT":{"accentColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"DATEPICKER":{"accentColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"EMAIL_INPUT":{"accentColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"MULTISELECT":{"accentColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"MULTILINE_TEXT_INPUT":{"accentColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"NUMBER_INPUT":{"accentColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"PASSWORD_INPUT":{"accentColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"PHONE_NUMBER_INPUT":{"accentColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"RADIO_GROUP":{"accentColor":"{{appsmith.theme.colors.primaryColor}}","boxShadow":"none"},"SELECT":{"accentColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"SWITCH":{"accentColor":"{{appsmith.theme.colors.primaryColor}}","boxShadow":"none"},"TEXT_INPUT":{"accentColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"}}},"LIST_WIDGET":{"accentColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"{{appsmith.theme.boxShadow.appBoxShadow}}"},"MAP_WIDGET":{"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"{{appsmith.theme.boxShadow.appBoxShadow}}"},"MAP_CHART_WIDGET":{"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"{{appsmith.theme.boxShadow.appBoxShadow}}"},"MENU_BUTTON_WIDGET":{"menuColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"MODAL_WIDGET":{"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"MULTI_SELECT_TREE_WIDGET":{"accentColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"MULTI_SELECT_WIDGET":{"accentColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"MULTI_SELECT_WIDGET_V2":{"accentColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"DROP_DOWN_WIDGET":{"accentColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"PROGRESSBAR_WIDGET":{"fillColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}"},"PROGRESS_WIDGET":{"fillColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}"},"RATE_WIDGET":{"activeColor":"{{appsmith.theme.colors.primaryColor}}"},"RADIO_GROUP_WIDGET":{"accentColor":"{{appsmith.theme.colors.primaryColor}}","boxShadow":"none"},"RICH_TEXT_EDITOR_WIDGET":{"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"{{appsmith.theme.boxShadow.appBoxShadow}}"},"STATBOX_WIDGET":{"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"{{appsmith.theme.boxShadow.appBoxShadow}}"},"SWITCH_WIDGET":{"accentColor":"{{appsmith.theme.colors.primaryColor}}","boxShadow":"none"},"SWITCH_GROUP_WIDGET":{"accentColor":"{{appsmith.theme.colors.primaryColor}}"},"SELECT_WIDGET":{"accentColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"TABLE_WIDGET":{"accentColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"{{appsmith.theme.boxShadow.appBoxShadow}}","childStylesheet":{"button":{"buttonColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"menuButton":{"menuColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"iconButton":{"buttonColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"}}},"TABLE_WIDGET_V2":{"accentColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"{{appsmith.theme.boxShadow.appBoxShadow}}","childStylesheet":{"button":{"buttonColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"menuButton":{"menuColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"iconButton":{"buttonColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"editActions":{"saveButtonColor":"{{appsmith.theme.colors.primaryColor}}","saveBorderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","discardButtonColor":"{{appsmith.theme.colors.primaryColor}}","discardBorderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}"}}},"TABS_WIDGET":{"accentColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"{{appsmith.theme.boxShadow.appBoxShadow}}"},"TEXT_WIDGET":{"fontFamily":"{{appsmith.theme.fontFamily.appFont}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}"},"VIDEO_WIDGET":{"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"{{appsmith.theme.boxShadow.appBoxShadow}}"},"SINGLE_SELECT_TREE_WIDGET":{"accentColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"}},"isSystemTheme":false,"deleted":false},"publishedTheme":{"name":"Classic","displayName":"Classic","config":{"colors":{"primaryColor":"#16a34a","backgroundColor":"#F6F6F6"},"borderRadius":{"appBorderRadius":{"none":"0px","md":"0.375rem","lg":"1.5rem"}},"boxShadow":{"appBoxShadow":{"none":"none","sm":"0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06)","md":"0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06)","lg":"0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05)"}},"fontFamily":{"appFont":["System Default","Nunito Sans","Poppins","Inter","Montserrat","Noto Sans","Open Sans","Roboto","Rubik","Ubuntu"]}},"properties":{"colors":{"primaryColor":"#008695","backgroundColor":"#F6F6F6"},"borderRadius":{"appBorderRadius":"0px"},"boxShadow":{"appBoxShadow":"none"},"fontFamily":{"appFont":"System Default"}},"stylesheet":{"AUDIO_RECORDER_WIDGET":{"accentColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"BUTTON_WIDGET":{"buttonColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"BUTTON_GROUP_WIDGET":{"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none","childStylesheet":{"button":{"buttonColor":"{{appsmith.theme.colors.primaryColor}}"}}},"CAMERA_WIDGET":{"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"CHART_WIDGET":{"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"{{appsmith.theme.boxShadow.appBoxShadow}}"},"CHECKBOX_WIDGET":{"accentColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}"},"CHECKBOX_GROUP_WIDGET":{"accentColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}"},"CONTAINER_WIDGET":{"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"{{appsmith.theme.boxShadow.appBoxShadow}}"},"CIRCULAR_PROGRESS_WIDGET":{"fillColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}"},"CURRENCY_INPUT_WIDGET":{"accentColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"PHONE_INPUT_WIDGET":{"accentColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"DATE_PICKER_WIDGET2":{"accentColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"FILE_PICKER_WIDGET_V2":{"buttonColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"FORM_WIDGET":{"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"{{appsmith.theme.boxShadow.appBoxShadow}}"},"FORM_BUTTON_WIDGET":{"buttonColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"ICON_BUTTON_WIDGET":{"buttonColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"IFRAME_WIDGET":{"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"{{appsmith.theme.boxShadow.appBoxShadow}}"},"IMAGE_WIDGET":{"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"INPUT_WIDGET":{"accentColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"INPUT_WIDGET_V2":{"accentColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"JSON_FORM_WIDGET":{"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"{{appsmith.theme.boxShadow.appBoxShadow}}","submitButtonStyles":{"buttonColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"resetButtonStyles":{"buttonColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"childStylesheet":{"ARRAY":{"accentColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none","cellBorderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","cellBoxShadow":"none"},"OBJECT":{"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none","cellBorderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","cellBoxShadow":"none"},"CHECKBOX":{"accentColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}"},"CURRENCY_INPUT":{"accentColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"DATEPICKER":{"accentColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"EMAIL_INPUT":{"accentColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"MULTISELECT":{"accentColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"MULTILINE_TEXT_INPUT":{"accentColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"NUMBER_INPUT":{"accentColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"PASSWORD_INPUT":{"accentColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"PHONE_NUMBER_INPUT":{"accentColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"RADIO_GROUP":{"accentColor":"{{appsmith.theme.colors.primaryColor}}","boxShadow":"none"},"SELECT":{"accentColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"SWITCH":{"accentColor":"{{appsmith.theme.colors.primaryColor}}","boxShadow":"none"},"TEXT_INPUT":{"accentColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"}}},"LIST_WIDGET":{"accentColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"{{appsmith.theme.boxShadow.appBoxShadow}}"},"MAP_WIDGET":{"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"{{appsmith.theme.boxShadow.appBoxShadow}}"},"MAP_CHART_WIDGET":{"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"{{appsmith.theme.boxShadow.appBoxShadow}}"},"MENU_BUTTON_WIDGET":{"menuColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"MODAL_WIDGET":{"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"MULTI_SELECT_TREE_WIDGET":{"accentColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"MULTI_SELECT_WIDGET":{"accentColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"MULTI_SELECT_WIDGET_V2":{"accentColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"DROP_DOWN_WIDGET":{"accentColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"PROGRESSBAR_WIDGET":{"fillColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}"},"PROGRESS_WIDGET":{"fillColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}"},"RATE_WIDGET":{"activeColor":"{{appsmith.theme.colors.primaryColor}}"},"RADIO_GROUP_WIDGET":{"accentColor":"{{appsmith.theme.colors.primaryColor}}","boxShadow":"none"},"RICH_TEXT_EDITOR_WIDGET":{"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"{{appsmith.theme.boxShadow.appBoxShadow}}"},"STATBOX_WIDGET":{"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"{{appsmith.theme.boxShadow.appBoxShadow}}"},"SWITCH_WIDGET":{"accentColor":"{{appsmith.theme.colors.primaryColor}}","boxShadow":"none"},"SWITCH_GROUP_WIDGET":{"accentColor":"{{appsmith.theme.colors.primaryColor}}"},"SELECT_WIDGET":{"accentColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"TABLE_WIDGET":{"accentColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"{{appsmith.theme.boxShadow.appBoxShadow}}","childStylesheet":{"button":{"buttonColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"menuButton":{"menuColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"iconButton":{"buttonColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"}}},"TABLE_WIDGET_V2":{"accentColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"{{appsmith.theme.boxShadow.appBoxShadow}}","childStylesheet":{"button":{"buttonColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"menuButton":{"menuColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"iconButton":{"buttonColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"},"editActions":{"saveButtonColor":"{{appsmith.theme.colors.primaryColor}}","saveBorderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","discardButtonColor":"{{appsmith.theme.colors.primaryColor}}","discardBorderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}"}}},"TABS_WIDGET":{"accentColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"{{appsmith.theme.boxShadow.appBoxShadow}}"},"TEXT_WIDGET":{"fontFamily":"{{appsmith.theme.fontFamily.appFont}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}"},"VIDEO_WIDGET":{"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"{{appsmith.theme.boxShadow.appBoxShadow}}"},"SINGLE_SELECT_TREE_WIDGET":{"accentColor":"{{appsmith.theme.colors.primaryColor}}","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","boxShadow":"none"}},"isSystemTheme":false,"deleted":false}}